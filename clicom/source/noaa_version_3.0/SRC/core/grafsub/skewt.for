$STORAGE:2
      SUBROUTINE SKEWT(DATPRES,DATHGHT,DATTEMP,DATTDPR,DATDIR,
     +                 DATSPD,QCTFLG,NLVLS,RTNCODE)
C------------------------------------------------------------------------------
C     DRAW A SKEW-T, LOG P DIAGRAM, THEN PLOT AN UPPER AIR SOUNDING ON IT.
C     THE SUBROUTINE REPRODUCES THE USAF SKEW-T, LOG P DIAGRAM (FORM DOD-WPC
C     9-16-1 CURRENT OF AS MARCH 1978).  THE REFERENCED THERMODYNAMIC 
C     ROUTINES ARE IN THE SOURCE FILE SKEWFUNC.FOR 
C
C     INPUT ARGUMENTS:
C
C     DATPRES   REAL ARRAY   SOUNDING PRESSURES (MB)
C     DATHGHT   REAL ARRAY   SOUNDING HEIGHTS (M ASL)
C     DATTEMP   REAL ARRAY   SOUNDING TEMPERATURES (C)
C     DATTDPR   REAL ARRAY   SOUNDING DEW POINT DEPRESSIONS (C)
C     DATDIR    REAL ARRAY   WIND DIRECTION (DEG FROM NORTH)
C     DATSPD    REAL ARRAY   WIND SPEED (DESIRED SPEED UNITS)
C     QCTFLG    CHAR ARRAY   SOUNDING QC FLAGS (C=ERROR, OTHERS OK)
C     NLVLS     INT2         NUMBER OF SOUNDING LEVELS INPUT
C     RTNCODE   CHAR         FLAG TO INDICATE CALLING ROUTINE
C                            'G'= GRAPHICS--NO PRINT
C                            'P'= GRAPHICS--PRINT
C                            'Q'= AREAQC  --NO PRINT

C
C     OUTPUT ARGUMENTS:
C
C     RTNCODE   CHAR         RETURN STATUS: 0 = OK, 1 = QUIT VIA ESC-F4 KEY
C                                           7 = PRESSURE/HEIGHT OUT OF SORT
C                                           8 = NOT ENOUGH DATA TO PLOT A LINE
C-----------------------------------------------------------------------------
$INCLUDE: 'GRFPARM.INC'
$INCLUDE: 'GRAFVAR.INC'
$INCLUDE: 'CURRPLT.INC'
C
      INTEGER*2    NLVLS
      REAL         DATPRES(*),DATTEMP(*),DATTDPR(*),DATHGHT(*),
     +             DATDIR(*),DATSPD(*)
      CHARACTER*1  QCTFLG(*),RTNCODE
C
C---- DEFINE NUMBER OF VARIOUS LINES TO DRAW - SEE BLOCK DATA AT END OF PGM
C
      PARAMETER (NTEMP=15, NPRES=11, NTHETA=21, NPSEUDO=7, NMIX=7)
      REAL TEMP(NTEMP),LENDT(NTEMP),RENDT(NTEMP)
      REAL PRES(NPRES),XPL,XPR(NPRES)
      REAL THETA(NTHETA),LENDTH(NTHETA),RENDTH(NTHETA)
      REAL PSEUDO(NPSEUDO),LENDPS(NPSEUDO)
      REAL MIXRAT(NMIX)
      REAL Y,XL,XR,YL,YR,TMIX,T,PINC,P,PSX,PSY,XLAB,YLAB,
     +     XN,XX,YX,YN
      CHARACTER*4  LABEL
      CHARACTER*1  ISTAT
      CHARACTER*28 TTLTXT
      CHARACTER*78 LGDTXT
      COMMON /SKWVAR/  TEMP, LENDT, RENDT, PRES, XPL, XPR, THETA,
     +                 LENDTH, RENDTH, PSEUDO, LENDPS, MIXRAT,
     +                 Y,XL,XR,YL,YR,TMIX,T,PINC,P,PSX,PSY,
     +                 XLAB,YLAB,XN,XX,YX,YN,
     +                 LABEL,ISTAT,TTLTXT,LGDTXT
C
C---- DEFINE ABSOLUTE X,Y MAX/MIN BOUNDS CORRESPONDING TO THE OUTER
C---- EDGES OF THE DIAGRAM.  THESE ARE COMPUTED BY INSERTING THE
C---- APPROPRIATE PRESSURES AND TEMPERATURES AT THE CORNERS OF THE
C---- DIAGRAM.
C
      PARAMETER (XMIN=-19.0)
      PARAMETER (XMAX=27.1)
      PARAMETER (YMAX=-0.935)
      PARAMETER (YMIN=44.061)
C
C---- INTERNAL VARIABLES
C
      CHARACTER*4  FILEXT
      CHARACTER*12 BKGNDNAM
      INTEGER*2    I,J
      LOGICAL  QCPLT,CPYBKGND,WRSPEC,PRTFLG
C      
      REAL         XWR(2),YWR(2)
      EQUIVALENCE (XWR(1),XN),(XWR(2),XX),(YWR(1),YX),(YWR(2),YN)
C
      NCA     = MAX0(LOWCOL,1)
      NCB     = MIN0(HICOL,MXELEM)
      IDPLT   = 1
      QCPLT   = RTNCODE.EQ.'Q' .OR. RTNCODE.EQ.'q'
      PRTFLG  = RTNCODE.EQ.'P' .OR. RTNCODE.EQ.'p'
      RTNCODE='0'
      XN=BTSCALE(1)
      XX=BTSCALE(2)
      YX=LFTSCALE(1,1)
      YN=LFTSCALE(2,1)
C      
C---  ZOOMED FROM CURRPLT.INC: USE EXPANDED LOWER PART OF DIAGRAM (1050-400 MB)
C---  LFTSCALE(2,2) = MINIMUM PRESSURE DISPLAYED ON ZOOM PLOT 
C
      IF (ZOOMED .AND. LFTSCALE(2,2) .GT. 100.0) THEN 
         YN=SKEWTY(LFTSCALE(2,2))
      ENDIF
C 
C---- SET WORLD COORDINATES
C
      CALL BGNPLT(GANWLF,GANWRT,GANWBT,GANWTP,XWR,YWR,0.0,0.0)
C
C---- SET THE FONT, COLOR, TEXT ATTRIBUTES AND ANGLE DEFINITION
C
      TXASP = 0.9
      CALL SETCOL(6)
      CALL DEFHLN(6,1,1)
      CALL DEFHST(3,6,0.0,TXASP,0.035,TXHGT)
      CALL DEFHDT(1,14,14,0,1,1,0)
C
C---- SKEWT BACKGROUND
C
      IF (PRTFLG) THEN       
C
C ----   GRAPHICS PLOT (PRINT) -- BACKGROUND WILL ALWAYS BE DRAWN      
         CPYBKGND = .FALSE.         
      ELSE   
         IF (ZOOMED) THEN
            BKGNDNAM = 'ZOOMSCRN'
         ELSE         
            BKGNDNAM = 'SKWTSCRN'
         ENDIF   
         IF (QCPLT) THEN
C         
C ----      AREA-QC PLOT -- ALWAYS ATTEMPT TO COPY THE BACKGROUND; THE 
C ----      BACKGROUND WILL ONLY BE DRAWN THE FIRST TIME SKEWT IS CALLED
C ----      BECAUSE THE SAVED SCREEN FILE DOES NOT EXIST; FILE SPECIFICATIONS
C ----      ARE NOT CONSIDERED BECAUSE THE USER CANNOT MAKE ANY MODIFICATIONS 
            CPYBKGND = .TRUE.         
            WRSPEC = .FALSE.
            FILEXT = '.QSC.'
         ELSE
C
C ----      GRAPHICS PLOT (NO PRINT) -- BACKGROUND WILL BE COPIED IF PLOT
C ----      SPECIFICATIONS HAVE NOT CHANGED SINCE SCREEN WAS SAVED; FLAG
C ----      IS SET TO WRITE PLOT SPECIFICATIONS IF BACKGROUND MUST BE DRAWN
            CALL CKBKGND(BKGNDNAM,CPYBKGND)              
            WRSPEC = .TRUE.
            FILEXT = '.GRF.'
         ENDIF   
C
C ----   CONSTRUCT NAME (8 CHARACTERS) AND EXTENSION FOR BACKGROUND SCREEN FILE
C ----   THIS NAME IS USED FOR BOTH READING AND WRITING BACKGROUND SCREEN FILE.
         NCHR = LNG(BKGNDNAM)
         BKGNDNAM(NCHR+1:) = FILEXT
C
C ----   IF COPY FLAG IS ON, COPY BACKGROUND TO SCREEN; RESET COPY FLAG TO
C ----   OFF IF BACKGROUND SCREEN FILE CANNOT BE FOUND
         IF (CPYBKGND) THEN
            CALL RDBKGND(BKGNDNAM,RTNCODE)
            CPYBKGND = RTNCODE.EQ.'0'         
            RTNCODE = '0'
         ENDIF
      ENDIF
      IF (.NOT.CPYBKGND) THEN
C
C----    DRAW OUTLINE OF THE SKEW-T, LOG P DIAGRAM.  PROCEED IN THE UPPER
C----    LEFT CORNER OF THE DIAGRAM AND DRAW COUNTER-CLOCKWISE. THE LOCATIONS
C----    THAT ARE HARD CODED REFER TO POINTS ON THE BACKGROUND WHERE THE
C----    SKEW-T DIAGRAM DEVIATES FROM A RECTANGLE ALONG THE RIGHT EDGE. 
C
         CALL MOVABS(XMIN,YMIN)
         CALL LNABS (XMIN,YMAX)
         CALL LNABS (XMAX,YMAX)
         CALL LNABS (XMAX,9.0)
         CALL LNABS (18.6,17.53)
         CALL LNABS (18.6,YMIN)
         CALL LNABS (XMIN,YMIN)
C
C----    DRAW DIAGNOAL ISOTHERMS
C
         DO 20 I=1,NTEMP
C
C----       DRAW THE LINE
C
            YR=SKEWTY(RENDT(I))
            XR=SKEWTX(TEMP(I),YR)
            YL=SKEWTY(LENDT(I))
            XL=SKEWTX(TEMP(I),YL)
            CALL MOVABS(XL,YL)
            CALL LNABS (XR,YR)
C
C----       LABEL THE LINE
C
            XLAB=XR
            YLAB=YR
            IF (TEMP(I) .LT. -90.0) THEN
               WRITE(UNIT=LABEL,FMT=1000) NINT(TEMP(I))
               CALL DRWTXT(LABEL,XLAB,YLAB,0,25.0)
            ELSE
               WRITE(UNIT=LABEL,FMT=1003) NINT(TEMP(I))
               CALL DRWTXT(LABEL,XLAB,YLAB,0,25.0)
            ENDIF            
   20    CONTINUE
C
C----    DRAW SATURATION MIXING RATIO LINES. THESE LINES RUN BETWEEN 1050
C----    AND 400 MB. THE 20 LINE INTERSECTS THE SOUNDING BELOW 400 MB,
C----    THUS A SPECIAL CASE IS MADE FOR IT. THE LINES ARE DASHED. THE
C----    TEMPERATURE WHERE EACH LINE CROSSES 400 MB IS COMPUTED IN ORDER
C----    TO GET X,Y LOCATIONS OF THE TOP OF THE LINES.
C
C----    SET DASH PATTERN AND COLOR
C
         CALL DEFHLN(10,2,1)
         CALL SETSTC(10,10)
C
C----    COMPUTE Y COORDINATE AT THE TOP (IE RIGHT END OF SLANTED LINE)
C----    AND THE BOTTOM OF THE LINES.
C
         YR=SKEWTY(400.)
         YL=SKEWTY(1050.)
C
C----    DRAW THE LINES
C
         DO 30 I=1,NMIX
            IF (MIXRAT(I).EQ.20.) THEN
               YR=SKEWTY(440.)
               TMIX=TMR(MIXRAT(I),440.)
            ELSE
               YR=SKEWTY(400.)
               TMIX=TMR(MIXRAT(I),400.)
            ENDIF
            XR=SKEWTX(TMIX,YR)
            TMIX=TMR(MIXRAT(I),1050.)
            XL=SKEWTX(TMIX,YL)
            CALL MOVABS(XL,YL)
            CALL LNABS (XR,YR)
C
C----       DRAW THE LABELS
C
C            YLAB=YX-(1.5 * TXHGT)
            YLAB=YMAX-(1.5 * TXHGT)
            XLAB=XL-1.4
            WRITE(UNIT=LABEL,FMT=1002) NINT(MIXRAT(I))
            CALL SETLNS(1)
            CALL DRWTXT(LABEL,XLAB,YLAB,0,0.0)
            CALL SETLNS(2)
   30    CONTINUE
C
C----    DRAW DRY ADIABATS.  ITERATE IN 10 MB INCREMENTS TO COMPUTE THE
C----    X,Y POINTS ON THE CURVE
C
C----    SET  LINE AND COLOR PATTERN
C
         CALL DEFHLN(10,1,1)
         PINC=10.
C
C----    DRAW THE LINES
C
         DO 50 I=1,NTHETA
            P=LENDTH(I)-PINC
            DO 40 J=1,200
               P=P+PINC
               IF (P.GT.RENDTH(I)) THEN
                  PSY = SKEWTY(RENDTH(I))
                  T=TDA(THETA(I),P)
                  PSX = SKEWTX(T,PSY)
                  GO TO 50
               ENDIF
               PSY = SKEWTY(P)
               T=TDA(THETA(I),P)
               PSX = SKEWTX(T,PSY)
               IF (J .EQ. 1) THEN
                  CALL MOVABS(PSX,PSY)
               ELSE
                  CALL LNABS (PSX,PSY)
               ENDIF
   40       CONTINUE
   50    CONTINUE
         CALL ESCQUIT (*900)
C
C----    DRAW MOIST ADIABATS UP TO 250 MB.  SET COLOR AND DASH PATTERN 
C
         CALL SETCOL(11)
         CALL SETSTC(11,11)
         PINC=10.
C
C----    DRAW THE LINES.  ITERATE IN 10 MB INCREMENTS FROM 1060 MB
C
         DO 70 I=1,NPSEUDO
            P=1060.
            DO 60 J=1,200
               P=P-PINC
               IF (P.LT.250.) GO TO 65
               PSY=SKEWTY(P)
               T=SATLFT(PSEUDO(I),P)
               PSX=SKEWTX(T,PSY)
               IF (J .EQ. 1) THEN
                  CALL MOVABS(PSX,PSY)
               ELSE
                  CALL LNABS (PSX,PSY)
               ENDIF
   60       CONTINUE
C
C----    DRAW THE LABEL AT TOP OF CURVE, EVEN IF BACKGROUND IS ZOOMED
C
   65       IF (ZOOMED) THEN
               P  = LFTSCALE(2,2) + ((1050.-LFTSCALE(2,2)) * 0.1)
               PSY=SKEWTY(P)
               T=SATLFT(PSEUDO(I),P)
               PSX=SKEWTX(T,PSY)
            ENDIF
            XLAB=PSX
            YLAB=PSY+0.6
            WRITE(UNIT=LABEL,FMT=1002) NINT(PSEUDO(I))
            CALL DRWTXT(LABEL,XLAB,YLAB,0,0.0)
   70    CONTINUE
C
C----    DRAW HORIZONTAL ISOBARS. SET COLOR FOR ISOBARS
C
         CALL SETSTC(6,6)
         CALL SETCOL(6)
         XLAB=XMIN-1.4
         XLAB=XLAB-1.7
C
C----    DRAW THE LINES
C
         DO 80 I=1,NPRES
            Y=SKEWTY(PRES(I))
            CALL MOVABS(XPL,Y)
            CALL LNABS (XPR(I),Y)
            IF(I.EQ.1) GO TO 80
C
C----    DRAW THE LABELS
C
            IF (PRES(I) .LT. 1000.0) THEN
               WRITE(UNIT=LABEL,FMT=1003) NINT(PRES(I))
               CALL DRWTXT(LABEL,XLAB,Y-0.4,0,0.0)
            ELSE
               WRITE(UNIT=LABEL,FMT=1000) NINT(PRES(I))
               CALL DRWTXT(LABEL,XLAB-0.4,Y-0.4,0,0.0)
            ENDIF
   80    CONTINUE
C
C----    DRAW VERTICAL LINE UPON WHICH TO PLOT WIND BARBS
C
         CALL MOVABS(24.8,YMAX)
         CALL LNABS (24.8,YMIN)
C
C----    DRAW BACKGROUND FOR HEIGHT SCALE
C
         CALL MOVABS(30.3,YMIN)
         CALL LNABS (30.3,YMAX)
         CALL DRWTXT('KM',30.3,44.5,0,0.0)
C
C----    'NO PRINT' -- SAVE BACKGROUND SCREEN TO FILE; SAVE PLOT SPECIFICATIONS
C----    IF THIS IS NOT AN AREA-QC PLOT
C
         IF (.NOT.PRTFLG) CALL WRBKGND(WRSPEC,BKGNDNAM)
      ENDIF
C      
      CALL ESCQUIT (*900)
C
C---  LABEL TIME(TITLE), STATION(SUBTITLE), AND FREE TEXT FOR THE SOUNDING.  
C
      IF (GRTITLE.EQ.' ') THEN
         TTLTXT = DATATITLE
      ELSE
         TTLTXT = GRTITLE
      ENDIF      
      IF (TLLOC(1) .EQ. -99999.0 .OR. TLLOC(2) .EQ. -99999.0) THEN
         TLLOC(1) = 0.05
         TLLOC(2) = 0.03
      ENDIF
      NTITL = 1
      CALL PLTTITL(TTLTXT,NTITL,TLLOC,TLFONT,TLSIZE,TLASP,TLCLR)
      IF (GRSUBTITLE.EQ.' ') THEN
         TTLTXT = DATASUB
      ELSE
         TTLTXT = GRSUBTITLE
      ENDIF      
      IF (STLLOC(1) .EQ. -99999.0 .OR. STLLOC(2) .EQ. -99999.0) THEN
         STLLOC(1) = 0.80
         STLLOC(2) = 0.03
      ENDIF
      NTITL = 2
      CALL PLTTITL(TTLTXT,NTITL,STLLOC,STLFONT,STLSIZE,STLASP,STLCLR)
      NTITL = 3
      CALL PLTTITL(FTXT,NTITL,FTXTLOC,FTXTFONT,FTXTSIZE,FTXTASP,FTXTCLR)
C
C---  PLOT THE SOUNDING
C
      CALL ESCQUIT (*900)
      CALL PLTSND (DATPRES,DATTEMP,DATTDPR,DATHGHT,NLVLS,
     +             QCTFLG,QCPLT,COLTYPE(1),COLTHK(1),COL1CLR(1),RTNCODE)
      CALL SETCOL(1)
      CALL PLTWIND(DATPRES,DATDIR,DATSPD,NLVLS)
C
C---  SET VARIOUS ITEMS IN ORDER TO DRAW THE LEGEND CORRECTLY
C
      CALL SETCOL(0)
      LGSTYL(1)   =COLTYPE(1)
      LGSTYL(2)   =COLTYPE(2)
      LGSTYL(3)   =2
      LGSTYL(4)   =1
      LGSTYL(5)   =1
      LGITMWID(1) =COLTHK(1)
      LGITMWID(2) =COLTHK(2)
      LGITMWID(3) =1.
      LGITMWID(4) =1.
      LGITMWID(5) =1.
      LGCOLR(1)   =COL1CLR(1)
      LGCOLR(2)   =COL1CLR(2)
      LGCOLR(3)   =10
      LGCOLR(4)   =11
      LGCOLR(5)   =10
      CALL GETMSG(485,LGDTXT)
      CALL GETMSG(999,LGDTXT)
C      LGDTXT   ='TEMPERATURE,DEW POINT,MIXING RATIO,MOIST ADIABAT,DRY AD
C     +IABAT'
      CALL ESCQUIT (*900)
C      CALL PARSE1  (LGDTXT,78,5,28,TXTLB,ISTAT)
C      LGTEXT(1)=TXTLB(1) --- DUP TO 5 ITEMS IF NEEDED
C--- DEBUG LGTEXT IN COMMON BLOCK WHILE TXTLB NOT. KEEP IF RECODING NEEDED...
      CALL PARSE1  (LGDTXT,78,5,28,LGTEXT,ISTAT)
      LGLINBAR(1)='L'
      LGLINBAR(2)='L'
      LGLINBAR(3)='L'
      LGLINBAR(4)='L'
      LGLINBAR(5)='L'
      IF (LEGLOC(1).EQ.-99999. .OR. LEGLOC(2).EQ.-99999.) THEN
         LEGLOC(1) = .21
         LEGLOC(2) = .25
      ENDIF   
      LGALIGN = 0
      LGBRDR  = 'Y'
      LGNTRY  = 5
      CALL DRWLGND (LEGEND,LGBRDR,LGNTRY,LGLINBAR,LGSTYL,LGITMWID,
     +LGCOLR,LGTEXT,LEGCLR,LEGFONT,LEGSIZE,LEGLOC,LEGASP,LGALIGN)
      RETURN 
  900 RTNCODE='1'
      RETURN
 1000 FORMAT(I4)
 1002 FORMAT(I2)
 1003 FORMAT(I3)
      END
      BLOCK DATA 
C
C---- THESE VARIABLES WERE MOVED TO LABELLED COMMON BECAUSE OF A DATA SEGMENT
C---- SIZE PROBLEM.  BLOCK DATA SUBPROGRAM NEEDED TO INITIALIZE THEM. 
C---- DEFINE NUMBER OF VARIOUS LINES TO DRAW
C
      PARAMETER (NTEMP=15, NPRES=11, NTHETA=21, NPSEUDO=7, NMIX=7)
      REAL TEMP(NTEMP),LENDT(NTEMP),RENDT(NTEMP)
      REAL PRES(NPRES),XPL,XPR(NPRES)
      REAL THETA(NTHETA),LENDTH(NTHETA),RENDTH(NTHETA)
      REAL PSEUDO(NPSEUDO),LENDPS(NPSEUDO)
      REAL MIXRAT(NMIX)
      REAL Y,XL,XR,YL,YR,TMIX,T,PINC,P,PSX,PSY,XLAB,YLAB,
     +     XN,XX,YX,YN
      CHARACTER*4  LABEL
      CHARACTER*1  ISTAT
      CHARACTER*28 TTLTXT
      CHARACTER*78 LGDTXT
      COMMON /SKWVAR/  TEMP, LENDT, RENDT, PRES, XPL, XPR, THETA,
     +                 LENDTH, RENDTH, PSEUDO, LENDPS, MIXRAT,
     +                 Y,XL,XR,YL,YR,TMIX,T,PINC,P,PSX,PSY,
     +                 XLAB,YLAB,XN,XX,YX,YN,
     +                 LABEL,ISTAT,TTLTXT,LGDTXT
C
C---- DECLARE ISOTHEM VALUES AND PRESSURES WHERE ISOTHERMS INTERSECT
C---- THE EDGE OF THE SKEW-T DIAGRAM.
C
      DATA TEMP/-100.,-90.,-80.,-70.,-60.,-50.,-40.,-30.,-20.,-10.,
     +          0.,10.,20.,30.,40./
      DATA LENDT/132.,181.,247.,337.,459.,625.,855.,8*1050./
      DATA RENDT/7*100.,135.,185.,251.,342.,430.,500.,580.,730./
C
C---- DECLARE PRESSURE VALUES AND X COORDINATES OF THE ENDPOINTS OF
C---- EACH ISOBAR.  THESE X,Y VALUES ARE COMPUTED FROM THE EQUATIONS
C---- IN THE TRANSFORM FUNCTIONS LISTED AT THE END OF THIS PROGRAM.
C---- REFER TO A SKEW-T DIAGRAM IF NECESSARY.
C
      DATA PRES/1050.,1000.,850.,700.,500.,400.,300.,250.,200.,150.,
     +          100.0/
      DATA XPL /-19.0/, XPR /4*27.1,22.83,6*18.6/
C
C---- DECLARE ADIABAT VALUES AND PRESSURES WHERE ADIABATS INTERSECT
C---- THE EDGE OF THE SKEW-T DIAGRAM.
C
      DATA THETA/-30.,-20.,-10.,0.,10.,20.,30.,40.,50.,60.,70.,80.,90.,
     +           100.,110.,120.,130.,140.,150.,160.,170./
      DATA LENDTH/880.,670.,512.,388.,292.,220.,163.,119.,13*100./
      DATA RENDTH/8*1050.,1003.,852.,728.,618.,395.,334.,286.,245.,
     +            210.,180.,155.,133.,115./
C
C---- DECLARE MOIST ADIABAT VALUES AND PRESSURES OF THE TOPS OF
C---- THE MOIST ADIABATS. ALL MOIST ADIABATS TO BE PLOTTED BEGIN
C---- AT 1050 MB.
      DATA PSEUDO/32.,28.,24.,20.,16.,12.,8./
      DATA LENDPS/7*250./
C
C---- DECLARE MIXING RATIO LINES.  ALL MIXING RATIO LINES WILL
C---- BEGIN AT 1050 MB AND END AT 400 MB
C
      DATA  MIXRAT/20.,12.,8.,5.,3.,2.,1./
      DATA  LABEL/'    '/
      END
