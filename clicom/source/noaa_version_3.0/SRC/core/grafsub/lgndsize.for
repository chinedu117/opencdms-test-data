$STORAGE:2
      SUBROUTINE LGNDSIZE (ORIENT,NUMITEM,LINBAR,LBWIDTH,DESCRP,LEGLOC,
     +   ALIGN,BUFBYT,ITEMLN,MAXLIN,HGLINE,HGTXT,WIDITM,WDTXT,
     +   XLF,YBO,XRG,YTP,RTNCODE)
C------------------------------------------------------------------------------
C     DETERMINE THE SIZE OF THE LEGEND TO BE DISPLAYED ON A GRAPH.  THE LOWER 
C     LEFT AND UPPER RIGHT COORDINATE PAIRS (WORLD, NOT NORMALIZED WORLD 
C     COORDINATES) ARE RETURNED THAT DEFINE THE LEGEND AREA.
C
C     INPUT ARGUMENTS:
C     ORIENT   INT2       ORIENTATION OF LEGEND:
C                         0 = NO LEGEND
C                         1 = HORIZONTAL
C                         2 = VERTICAL
C     NUMITEM  INT2       NUMBER OF ENTRIES IN THE LEGEND.  EACH ENTRY
C                         HAS A VALUE DEFINED FOR REMAINING INPUT ARRAYS. 
C                         ELEMENT #1 IS FOR THE 1ST ITEM, ELEMENT #2 IS
C                         FOR THE 2ND ITEM, ETC FOR NUMENTRY ELEMENTS
C     LINBAR   CHAR ARRAY TYPE OF ENTRY FOR THIS ITEM:
C                         B = BAR  + TEXT
C                         L = LINE + TEXT
C                         T = TEXT ONLY, NO LINE OR BAR
C                         ANYTHING ELSE = POINT PLOT OF CHAR IN LINBAR + TEXT 
C     LBWIDTH  REAL ARRAY WIDTH OF BAR OR LINE. USE 1.0 FOR TEXT OR POINT ENTRY
C     DESCRP   CHAR ARRAY TEXT ASSOCIATED WITH THE BAR OR LINE
C     LEGLOC   REAL ARRAY CENTER POINT OF LEGEND BOX (NORM WORLD COORDS)
C     ALIGN    INT2       ALIGN EACH COLUMN OF TEXT CHARACTERS. 
C                         0 = NO 
C                         1 = YES
C     BUFBYT   INT4       MAXIMUM NUMBER OF BYTES IN BUFFER FOR SAVING SCREEN
C                         IF VALUE <0 SCREEN WILL NOT BE SAVED  
C
C     OUTPUT ARGUMENTS:
C
C     ITEMLN   INT2       MAXIMUM NUMBER OF ITEMS/LINE WITHIN THE LEGEND AREA
C     MAXLIN   INT2       NUMBER OF LINES WITHIN THE LEGEND AREA
C     HGLINE   REAL ARRAY HEIGHT OF EACH LINE WITHIN THE LEGEND. CAN VARY
C                         BECAUSE HEIGHT OF BARS/LINE MAY VARY ON EACH LINE
C     HGTXT    REAL       HEIGHT OF TEXT IN LEGEND AREA 
C     WIDITM   REAL       WIDTH FOR A LEGEND ITEM; INCLUDES WIDTH OF LINE/BAR
C                         AND SPACING AS WELL AS TEXT WIDTH
C     WDTXT    REAL       WIDTH OF LONGEST TEXT STRING IN LEGEND.
C     XLF,YBO  REAL       LOWER LEFT X & Y COORDINATES DEFINING LEGEND AREA
C     XRG,YTP  REAL       UPPER RIGHT X & Y COORDINATES DEFINING LEGEND AREA
C     RTNCODE  CHAR       RETURN CODE FOR WHETHER LEGEND FITS ON SCREEN
C                         0 = LEGEND OK, 1=LEGEND IS TOO BIG TO FIT
C------------------------------------------------------------------------------
      CHARACTER*1  LINBAR(*),BARS/'B'/,LINES/'L'/,RTNCODE
      CHARACTER*28 DESCRP(*)
      CHARACTER*30 MSG
      INTEGER      ORIENT, NUMITEM, ALIGN
      INTEGER*4    MBYTS,BUFBYT
      REAL         HGLINE(*), LBWIDTH(*), LF, LEGLOC(2),MXLGHT,MXLGWD
      LOGICAL      NEWLG
C
C     FIND THE ACTUAL WORLD COORDS FOR THE CURRENT VIEWPORT AS SET BY HALO
C     MAPPING ROUTINES.  THE ACTUAL WORLD COORDINATE FOR THE PIXELS AT THE
C     EDGE OF THE VIEWPORT MAY NOT EXACTLY MATCH THE VALUES RETURNED BY THE
C     INQWOR COMMAND.  THESE VALUES FOR THE LEFT, RIGHT AND TOP, BOTTOM ARE
C     NEEDED TO MAKE SURE THAT THE LEGEND STAYS ON THE SCREEN.  16-MAR-92
C
      CALL INQVIE(XDL,YDT,XDR,YDB)
      CALL MAPNTD(XDR,YDT,IDR,IDT)
      CALL MAPDTW(IDR,IDT,RG,TP)
      CALL MAPNTD(XDL,YDB,IDL,IDB)
      CALL MAPDTW(IDL,IDB,LF,BO)
      XPIX=IDR-IDL+1
      YPIX=IDB-IDT+1
C --- HEIGHT OF PIXEL ONLY VALID FOR WHOLE SCREEN VIEWPORT.  16-MAR-92
      HGPIX=(TP-BO)/YPIX
      MXLGWD = .9*(RG-LF)
      MXLGHT = .9*(TP-BO)
      RTNCODE = '0'
      NEWLG   =.FALSE.
C
C---  DETERMINE WIDTH OF LONGEST STRING IN LEGEND
C
      HGTXT =0.0
      WDTXT =0.0
      WDTXT2=0.0
      DO 100 N=1,NUMITEM
         IF (ALIGN .EQ. 0) THEN
            CALL DELIMSTR(DESCRP(N),MSG)
            CALL INQSTS(MSG,HG,WD,OF)
         ELSE
            NWD = LNG(DESCRP(N))
            CALL INQSTS('^W^',HG,WD,OF)
            WD = WD * FLOAT(NWD)
         ENDIF
C--- WDTXT2 IS LENGTH OF LONGEST TEXT ONLY ENTRY, IF NECESSARY
         IF (WD .GT. WDTXT) THEN
            IF (LINBAR(N) .EQ. 'T') THEN
               IF (WD .GT. WDTXT2) THEN
                  WDTXT2=WD
               ENDIF
            ELSE
               WDTXT=WD
            ENDIF
         ENDIF
         IF (HG .GT. HGTXT) THEN
            HGTXT=HG
         ENDIF
  100 CONTINUE
      WIDITM=WDTXT * 1.4
      IF (WDTXT2 .GT. WIDITM) THEN
         WIDITM=WDTXT2
      ENDIF
C
C---  FIND MAXIMUM NUMBER OF ITEMS PER LINE BASED ON WIDTH OF LONGEST 
C---  STRING AS WELL AS TOTAL NUMBER OF LINES FOR LEGEND. VERTICAL
C---  LEGEND (ORIENT = 2) IS A SPECIAL CASE OF 1 ITEM PER LINE.
C
      IF (ORIENT .EQ. 2) THEN
          ITEMLN = 1
          MAXLIN = NUMITEM
      ELSE
          ITEMLN = MXLGWD/WIDITM
          IF (ITEMLN .GT. NUMITEM) THEN
             ITEMLN=NUMITEM
             MAXLIN=1
          ELSE
C---         HORIZONTAL LEGEND THAT USES MORE THAN 1 LINE. MAKE IT AS SQUARE 
C---         AS POSSIBLE
  110        MAXLIN = NUMITEM/ITEMLN
             IF (MOD(NUMITEM,ITEMLN) .NE. 0) THEN
                 MAXLIN=MAXLIN+1
                 RITEMLN=ITEMLN
                 HALFLN =RITEMLN / 2.
                 RLASTLN=MOD(NUMITEM,ITEMLN)
                 IF (RLASTLN .LE. HALFLN) THEN
                    ITEMLN=ITEMLN-1
                    GO TO 110
                 ENDIF                       
             ENDIF
          ENDIF
      ENDIF
      J=1
      HGBOX=0.0
C
C---  DETERMINE THE HEIGHT OF THE LEGEND. SUM UP BAR OR LINE WIDTHS 
C
      DO 200 N=1,NUMITEM,ITEMLN
         HGLINE(J)=HGTXT
         N2=NUMITEM-N
         IF (N2 .GE. ITEMLN) THEN
            N2=ITEMLN-1
         ENDIF
C
C-----   FIND ITEM WITH LARGEST HEIGHT FOR CURRENT LINE
C
         DO 150 L=0,N2,1        
C------- ENTRY IS A BAR.  COMPARE HEIGHT OF BAR TO HEIGHT OF TEXT
            IF (LINBAR(N+L) .EQ. BARS) THEN
               IF (LBWIDTH(N+L) .GT. HGLINE(J)) THEN
                  HGLINE(J)=LBWIDTH(N+L)
               ENDIF
C------- ENTRY IS LINE. CONVERT LINE WIDTH FROM PIXELS TO WORLD COORDINATES
            ELSE
               IF (LINBAR(N+L) .EQ. LINES) THEN
                  RLNWD=LBWIDTH(N+L) * HGPIX
                  IF (RLNWD .GT. HGLINE(J)) THEN
                     HGLINE(J)=RLNWD
                  ENDIF
               ENDIF
C------- ENTRY IS POINT OR TEXT (SAME HEIGHT AS TEXT) SO NO CHECK NEEDED.
            ENDIF
  150    CONTINUE
         HGBOX=HGBOX + (1.25 * HGLINE(J))
         J=J+1
  200 CONTINUE
C
C---  THE WIDTH AND HEIGHT OF THE LEGEND IS CALCULATED. VERIFY THAT THE SIZE
C---  OF THE LEGEND FITS ON THE SCREEN.
C
      WIDBOX = WIDITM*FLOAT(ITEMLN)
      IF ((HGBOX.GT.MXLGHT) .OR. (WIDBOX.GT.MXLGWD)) THEN
         RTNCODE = '1'
         RETURN
      ENDIF
C
C---  THE X,Y POSITION IS THE CENTER OF THE LEGEND IN NORMALIZED WORLD COORDS.
C---  CONVERT TO REGULAR WORLD COORDS FOR CALCULATIONS. ADJUST THE CENTER 
C---  POINT SO THAT THE LEGEND IS NOT CLIPPED AT THE EDGES.  NEW LEGEND 
C---  LOCATION IS SAVED AFTER IT IS DETERMINED THAT THERE IS ENOUGH ROOM
C---  IN THE BUFFER.
C
      HGBOX  = HGBOX / 2.0  + (0.05 * HGTXT)
      WIDBOX = WIDBOX / 2.0 + (0.05 * WIDITM)
      CALL NW2W(LEGLOC(1),LEGLOC(2),XCTR,YCTR)
      XLF = XCTR - WIDBOX
      YBO = YCTR - HGBOX
      XRG = XCTR + WIDBOX
      YTP = YCTR + HGBOX
      IF (XLF .LT. LF) THEN
         XCTR  = XCTR + (LF-XLF)
         XRG   = XRG  + (LF-XLF)
         XLF   = LF
         NEWLG = .TRUE.
      ENDIF
      IF (XRG .GT. RG) THEN
         XCTR  = XCTR - (XRG-RG)
         XLF   = XLF  - (XRG-RG)
         XRG   = RG
         NEWLG = .TRUE.
      ENDIF
      IF (YBO .LT. BO) THEN
         YCTR  = YCTR + (BO-YBO)
         YTP   = YTP  + (BO-YBO)
         YBO   = BO
         NEWLG = .TRUE.
      ENDIF
      IF (YTP .GT. TP) THEN
         YCTR  = YCTR - (YTP-TP)
         YBO   = YBO  - (YTP-TP)
         YTP   = TP
         NEWLG = .TRUE.
      ENDIF
C
C---  VERIFY THAT THE PLOT BEHIND THE LEGEND CAN BE SAVED IN BUFFER
C
      MBYTS = 0
      CALL MAPWTN(XLF,YTP,XLGL,YLGT)
      CALL MAPWTN(XRG,YBO,XLGR,YLGB)
      IF (BUFBYT.NE.-1) THEN
         CALL BUFSIZ(XLGL,YLGT,XLGR,YLGB,MBYTS)
         IF (MBYTS .GT. BUFBYT) THEN
            RTNCODE = '1'
         ENDIF
      ENDIF
C
C---  IF NECESSARY SAVE THE NEW LEGEND LOCATION IN NORMALIZED WORLD COORDINATES
C
      IF (NEWLG .AND. RTNCODE.EQ.'0') THEN
         CALL W2NW(XCTR,YCTR,LEGLOC(1),LEGLOC(2))
      ENDIF
      RETURN
      END
