$STORAGE:2
      SUBROUTINE DISLIMS(ICOL,ILINE)
C
C  THIS ROUTINE DISPLAYS THE CURRENT VALUE BEING VALIDATED AND ALL
C  THE ESTABLISHED LIMITS ASSOCIATED WITH IT.  THE VALUES ARE SHOWN
C  IN A WINDOW WHICH THIS ROUTINE POPS ONTO THE SCREEN.
C
$INCLUDE: 'VAL1.INC'
$INCLUDE: 'ELEMCHKS.INC'
C
      CHARACTER*78 MESSAG,TITLE,WAITMSG,TEXT
      CHARACTER*20 CHKDEF(18)
      CHARACTER*15 CFMT
      INTEGER*2 ICOL,LINE
      INTEGER*2 STRTROW,STRTCOL,ENDROW,ENDCOL
      INTEGER*2 BUFFER(1300,2)
      COMMON /WINDOW/ BUFFER
      REAL*8 HIGHLIM,LOWLIM,HIGHEXT,LOWEXT
      LOGICAL FRSTCL
      DATA FRSTCL /.TRUE./     
C
C   ON FIRST CALL TO THIS ROUTINE READ IN TITLES AND DEFINITIONS
C
      IF (FRSTCL) THEN
         FRSTCL = .FALSE.
         DO 10 I1 = 1,6
            CALL GETMSG(I1+326,MESSAG)
            J = (I1-1) * 3 + 1
            READ(MESSAG,'(3(A20,1X))') (CHKDEF(I),I=J,J+2)
   10    CONTINUE
         WAITMSG=' '
         CALL GETMSG(202,WAITMSG)
         CALL GETMSG(333,TITLE)
         CALL GETMSG(538,TEXT)
         CALL GETMSG(999,MESSAG)
         LWAIT = LNG(WAITMSG)
      END IF
C
C       ** READ THE VALUE THAT WILL BE DISPLAYED AND SCALE IT       
C
      READ(VALARRAY(ICOL,ILINE),'(F5.0,1X)',ERR=900) VALUE
      VALUE = VALUE * TBLCONV(ICOL)
C
C   DETERMINE HOW MANY ERROR CHECKS APPLY TO THIS ELEMENT AND SIZE THE
C   WINDOW TO MATCH.
C
      NROWS = 5
      DO 50 ICHK = 1,MAXCHK
         IF (CHKTYP(ICOL,ICHK).EQ.0) THEN
            GO TO 55
         END IF
         JCHK = CHKTYP(ICOL,ICHK)
         IF (JCHK.EQ.8.OR.JCHK.EQ.55) THEN
            GO TO 50
         ELSE IF (JCHK.EQ.52) THEN
            NROWS = NROWS + 3
         ELSE
            NROWS = NROWS + 1
         END IF
50    CONTINUE
55    CONTINUE
C
C   OPEN THE TEXT WINDOW WHERE IT IS LEAST OBTRUSIVE TO THE CURRENT
C   CURSOR POSITION
C
      CALL POSLIN(JROW,JCOL)
      IF (JCOL.LT.40) THEN
         STRTCOL = 11
      ELSE
         STRTCOL = 0
      END IF
      IF (JROW.LT.12) THEN
         STRTROW = 25 - NROWS
      ELSE
         STRTROW = 0
      END IF
      ENDCOL = STRTCOL + 67
      ENDROW = STRTROW + NROWS - 1
      IWIN = 1
      CALL OPENWIN(IWIN,BUFFER(1,IWIN),STRTROW,STRTCOL,ENDROW,ENDCOL)
C
C   WRITE THE ID INFORMATION FOR THIS RECORD
C
      IF (TBLCONV(ICOL).EQ.1. .OR. VALUE.EQ.0.) THEN
         CFMT = '(A,2X,F5.0)'
      ELSE IF (VALUE.GT.99999. .OR. VALUE.LT.-9999.9 .OR. 
     +        ABS(TBLCONV(ICOL)).LT.0.001) THEN
         CFMT = '(A,2X,1P,E11.4)'
      ELSE   
         CFMT = '(A,2X,F9.3)'
      ENDIF
C
      LINE = 1
      CALL LOCATE(STRTROW+LINE,STRTCOL+2,IERR)
      LTXT = LNG(TEXT)
      MESSAG = ' '
      WRITE(MESSAG,CFMT) TEXT(1:LTXT),VALUE
      CALL WRTSTR(MESSAG,65,0,3)
C
      LINE = 2
      CALL LOCATE(STRTROW+LINE,STRTCOL+2,IERR)
      CALL WRTSTR(TITLE,65,0,3)
C
      LINE = 3
      CALL LOCATE(STRTROW+LINE,STRTCOL+2,IERR)
      MESSAG = 
     +'----------------------  ------   ------   ------  ------  ------'
      CALL WRTSTR(MESSAG,65,0,3)
C
C   FIND THE CHECKS BEING PERFORMED ON THIS ELEMENT AND PRINT THEM
C
      DO 100 ICHK = 1,MAXCHK
         IF (CHKTYP(ICOL,ICHK).EQ.0) THEN
            GO TO 110
         END IF
         JCHK = CHKTYP(ICOL,ICHK)
         MESSAG = ' '
         IF (JCHK.EQ.1.OR.JCHK.EQ.2) THEN
            WRITE(MESSAG,60) JCHK,CHKDEF(JCHK),'>=',CHKVL1(ICOL,ICHK)
     +         ,'<=',CHKVL2(ICOL,ICHK)
  60        FORMAT(1X,I2,1X,A20,2X,A2,4X,F8.2,12X,A2,3X,F8.2)    
         ELSE IF (JCHK.EQ.3.AND.CHKELM(ICOL,ICHK).GT.0) THEN
            WRITE(MESSAG,70) JCHK,CHKDEF(JCHK),CHKRL1(ICOL,ICHK)
     +         ,CHKVL1(ICOL,ICHK),TBLEABRV(CHKELM(ICOL,ICHK))
     +         ,CHKRL2(ICOL,ICHK),CHKVL2(ICOL,ICHK)
  70        FORMAT(1X,I2,1X,A20,2X,A2,4X,F8.2,3X,A6,3X,A2,3X,F8.2)    
         ELSE IF ((JCHK.EQ.04.OR.JCHK.EQ.05).AND.CHKELM(ICOL,ICHK)
     +         .GT.0) THEN
            WRITE(MESSAG,75) JCHK,CHKDEF(JCHK),CHKRL1(ICOL,ICHK)
     +         ,TBLEABRV(CHKELM(ICOL,ICHK))
  75        FORMAT(1X,I2,1X,A20,2X,A2,15X,A6)    
         ELSE IF (JCHK.EQ.6) THEN
            WRITE(MESSAG,60) JCHK,CHKDEF(JCHK),'<=',CHKVL1(ICOL,ICHK)
     +         ,'  ',CHKVL2(ICOL,ICHK)
         ELSE IF (JCHK.EQ.7) THEN
            WRITE(MESSAG,75) JCHK,CHKDEF(JCHK),'  ','      '
         ELSE IF (JCHK.EQ.51) THEN
            WRITE(MESSAG,60) JCHK,CHKDEF(JCHK-41),'>=',TBLMIN(ICOL)
     +         ,'<=',TBLMAX(ICOL)
         ELSE IF (JCHK.EQ.53.AND.TBLMXCR(ICOL).NE.99999.0) THEN
            WRITE(MESSAG,60) JCHK,CHKDEF(JCHK-41),'<='
     +         ,TBLMXCR(ICOL)*CHKVL1(ICOL,ICHK),'  '
     +         ,TBLMXCR(ICOL)*CHKVL2(ICOL,ICHK)       
         ELSE IF (JCHK.EQ.54.AND.TBLSTDDEV(ICOL).LT.0.0) THEN
            WRITE(MESSAG,80) JCHK,CHKDEF(JCHK-41),'<='
     +         ,TBLMEAN(ICOL)*CHKVL1(ICOL,ICHK)
  80        FORMAT(1X,I2,1X,A20,2X,A2,4X,F8.2)    
         ELSE IF (JCHK.EQ.52.AND.TBLSTDDEV(ICOL).NE.99999.0
     +            .AND.TBLSTDDEV(ICOL).GT.0.0) THEN
            HIGHLIM = LOWPCT * TBLSTDDEV(ICOL) + TBLMEAN(ICOL)
            HIGHEXT = HIGHPCT * TBLSTDDEV(ICOL) + TBLMEAN(ICOL)
            LOWLIM = TBLMEAN(ICOL) - LOWPCT * TBLSTDDEV(ICOL)
            LOWEXT = TBLMEAN(ICOL) - HIGHPCT * TBLSTDDEV(ICOL)
            WRITE(MESSAG,85) JCHK,CHKDEF(JCHK-41),TBLMEAN(ICOL)
     +         ,TBLSTDDEV(ICOL)
  85        FORMAT(1X,I2,1X,A20,' Mean = ',F8.2,3X,'Standrd Dev = '
     +         ,F8.2)
            LINE = LINE + 1
            CALL LOCATE(STRTROW+LINE,STRTCOL+1,IERR)
            CALL WRTSTR(MESSAG,66,0,3)
            WRITE(MESSAG,90) 'Low  Limits ',LOWLIM,LOWEXT
  90        FORMAT(20X,A12,F8.2,17X,F8.2)
            LINE = LINE + 1
            CALL LOCATE(STRTROW+LINE,STRTCOL+1,IERR)
            CALL WRTSTR(MESSAG,66,0,3)
            WRITE(MESSAG,90) 'High Limits ',HIGHLIM,HIGHEXT
         END IF
         IF (MESSAG.NE. '       ') THEN
            LINE = LINE + 1
            CALL LOCATE(STRTROW+LINE,STRTCOL+1,IERR)
            CALL WRTSTR(MESSAG,66,0,3)
         END IF
  100 CONTINUE
  110 CONTINUE
      CALL LOCATE(ENDROW,STRTCOL+4,IERR)
      CALL WRTSTR(' ',1,0,3)
      CALL WRTSTR(WAITMSG,LWAIT+1,0,3)
      CALL LOCATE(JROW,JCOL,IERR)
      CALL GETCHAR(0,INCHAR)
      CALL CLOSWIN(IWIN,BUFFER(1,IWIN))
      RETURN
C
C       ** ERROR PROCESSING        
C
  900 CONTINUE
         WRITE (MESSAG,901) ILINE,ICOL
  901    FORMAT(I3,', ',I3)
         CALL WRTMSG(3,98,12,1,1,MESSAG,8)
      RETURN
      END
