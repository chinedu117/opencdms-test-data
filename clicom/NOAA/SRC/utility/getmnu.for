$STORAGE:2
      SUBROUTINE GETMNU(MENUNAME,HELPFILE,RESULT)
C
C   SUBROUTINE TO WRITE AND READ A MENU AS DEFINED IN THE MENU FILE   
C
C     INPUT: MENUNAME..THE NAME OF THE MENU TO BE DISPLAYED (CHAR*12) 
C            HELPFILE..IF NOT = SPACES THEN HELP IS AVAILABLE FOR 
C                      THIS MENU AND USER CAN SEE IT BY PRESSING F1 (CHAR*64)
C    OUTPUT: RESULT....THE INTEGER*2 CHOICE RESULT (=999 IF F1 PRESSED)
C
      PARAMETER (MAXCHOICE=16)

      INTEGER*2 RESULT
      CHARACTER*64 HELPFILE
      CHARACTER*12 MENUNAME,INNAME,PRVMNU
      CHARACTER*1  DELMARK,BORDER
      INTEGER*2 STRTROW,STRTCOL,ENDROW,NUMSCROLL,IROW,ICOL
     +         ,WIDTH,NUMCHOICE,FGCOLOR,BGCOLOR,HDRFGC,HDRBGC
     +         ,TLENGTH,CLENGTH,RTNROW,RTNCOL,FGCLR,BGCLR,PMTLEN
      CHARACTER*60 TITLE
      CHARACTER*32 CHOICE(MAXCHOICE)
      CHARACTER*40 MSGLN1
      CHARACTER*78 PMTLIN,BLANK
      CHARACTER*12 PROMPT
      CHARACTER*4 WRTTXT
      CHARACTER*2 ICHAR,CREPLY,INCHAR
      LOGICAL HELP,FRSTCL,ARROWS
      DATA FRSTCL /.TRUE./, PRVMNU /'XXXXXX'/,BLANK/'              '/
      DATA PROMPT /' (  ды)'/, PMTLEN /10/
      MSGNUM = 70
C
C   ON FIRST CALL TO THIS ROUTINE SET TEXT FOR COLOR OR B&W MODE
C   AND READ THE PROMPTS TO BE USED FROM THE MESSAGE FILE
C
      IF (FRSTCL) THEN
         FRSTCL = .FALSE.
         CALL STATUS(IMODE,ICLTYP,IPAGE)
         CALL GETMSG(313,PMTLIN)
         MSGLN1 = PMTLIN(1:40)
         CALL GETMSG(999,PMTLIN)
      END IF
      IF (IMODE.EQ.3) THEN
         FGCLR = 15
         BGCLR = 1
      ELSE
         FGCLR = 12
         BGCLR = 4
      END IF
C
C   IF THE CURRENT MENU IS DIFFERENT THAN THE PREVIOUS - OPEN THE
C   MENU FILE AND FIND THE MENU WANTED
C
      IF (MENUNAME.NE.PRVMNU) THEN
  30     CONTINUE
         OPEN (14,FILE='P:\FORM\USERMENU.DEF',STATUS='OLD'
     +       ,ACCESS='DIRECT',RECL=602,IOSTAT=IOCHK)
         IF(IOCHK.NE.0) THEN
            CALL OPENMSG('P:\FORM\USERMENU.DEF  ','GETMNU      ',IOCHK)
            GO TO 30
         END IF   
C
C     FIND THE MENU TO BE USED
C
         DO 40 I = 1,999
            READ(14,REC=I,ERR=50) DELMARK,INNAME,TITLE
     +          ,BORDER,(CHOICE(J),J=1,MAXCHOICE),WIDTH
     +          ,NUMCHOICE,HDRFGC,HDRBGC,FGCOLOR,BGCOLOR
     +          ,TLENGTH,CLENGTH        
               IF (DELMARK.EQ.' ') THEN
                  IF (INNAME.EQ.MENUNAME) THEN
                     GO TO 60
                  END IF
               END IF
C
C      IF GET HERE MENU NOT FOUND
C
   40    CONTINUE
   50    CONTINUE
         CLOSE(14)
         CALL WRTMSG(2,48,12,1,1,MENUNAME,12)
         RESULT = 0
         RETURN
C
C      OTHERWISE MENU HAS BEEN FOUND
C
   60    CONTINUE
         CLOSE(14)
      END IF
      PRVMNU = MENUNAME
C
C   WRITE THE FUNCTION KEY LINE AND SET HELP MODE
C
       IF (HELPFILE(1:1).NE.' ') THEN
          HELP = .TRUE.
          CALL WRTFNC(8)
       ELSE
          HELP = .FALSE.
          CALL WRTFNC(0)
       END IF
C
C   DETERMINE THE SIZE OF THE MENU AND MAKE ROOM IF NECESSARY
C
      MENUSIZE = NUMCHOICE + 5
      CALL SCRLUP(MENUSIZE,NUMSCROLL)
      CALL POSLIN(IROW,ICOL)
      IROW = IROW - NUMSCROLL
      RTNROW = IROW
      RTNCOL = ICOL
      STRTROW = IROW 
      STRTCOL = ICOL
      ENDROW = STRTROW + MENUSIZE - 1
C
C   WRITE THE MENU
C
C     DRAW THE MENU BORDER AND CLEAR THE INSIDE
C
      CALL DRWBOX(STRTCOL,STRTROW-1,STRTCOL+WIDTH-1,ENDROW,2,11,0)
      IWIDTH = WIDTH - 2
      NLINES = ENDROW - STRTROW + 2
      CALL CLTEXT(0,0,IERR)
      CALL SCROLL(1,NLINES-2,STRTROW,STRTCOL+1,ENDROW-1,STRTCOL+WIDTH-2)
C
C     DRAW THE MENU TITLE
C
      IF (TLENGTH.GT.0) THEN
         ICOL1 = (WIDTH/2) - (TLENGTH/2) + STRTCOL
         CALL LOCATE (STRTROW,ICOL1,IERR)
         CALL WRTSTR(TITLE,TLENGTH,HDRFGC,HDRBGC) 
      END IF
C
C     DRAW THE MENU CHOICES
C
      IROW = STRTROW + 2
      ICOL2 = (WIDTH/2) - ((CLENGTH+4)/2) + STRTCOL
      CALL LOCATE (IROW,ICOL2,IERR)
      CALL WRTSTR(' 0  Exit    ',12,FGCOLOR,BGCOLOR)
      DO 100 ICHOICE = 1,NUMCHOICE 
         IROW = STRTROW + ICHOICE + 2
         CALL LOCATE(IROW,ICOL2,IERR)
         WRITE (ICHAR,'(I2)') ICHOICE
         CALL WRTSTR(ICHAR,2,FGCOLOR,BGCOLOR)
         CALL WRTSTR('  ',2,FGCOLOR,BGCOLOR)
         CALL WRTSTR(CHOICE(ICHOICE),CLENGTH,FGCOLOR,BGCOLOR)
  100 CONTINUE
  200 CONTINUE
C
C   DRAW THE REPLY LINE WITHIN THE BORDER
C
      IPREV = -1
      ICOL3 = (WIDTH/2) - ((PMTLEN+10)/2) + STRTCOL 
      CALL LOCATE (ENDROW,ICOL3,IERR)
      CALL WRTSTR(PROMPT,PMTLEN,15,BGCOLOR)
      CALL WRTSTR(' (0 - ',6,15,0)
      IF (NUMCHOICE.GT.9) THEN
         WRITE(WRTTXT,'(I2,A1,1X)') NUMCHOICE,')'
         CALL WRTSTR(WRTTXT,4,15,BGCOLOR)
      ELSE
         WRITE(WRTTXT,'(I1,A1,2X)') NUMCHOICE,')'
         CALL WRTSTR(WRTTXT,3,15,BGCOLOR)
      END IF
C
C   READ THE REPLY
C
      ARROWS = .FALSE.
  400 CONTINUE
      CREPLY = '  '
      IPOS = 1
  410 CONTINUE
      CALL LOCATE(ENDROW,STRTCOL,IERR)
      CALL GETCHAR(0,INCHAR)
      IF (NUMCHOICE.GT.9) THEN
         CALL LOCATE(ENDROW+1,STRTCOL,IERR)
         CALL WRTSTR(BLANK,WIDTH,12,0)     
      END IF
C
C   CHECK FOR FUNCTION KEY RESPONSE
C
      IF (ARROWS) THEN
         IPREV = NCHOICE
      END IF
      IF (INCHAR.EQ.'RE') THEN
         IF (ARROWS) THEN
            RESULT = NCHOICE
            GO TO 500
         ELSE IF (IPOS.EQ.2.) THEN
            INCHAR = ' '
         END IF
      END IF
      IF (INCHAR(2:2).NE.' ') THEN
         IF (INCHAR.EQ.'1F') THEN
            IF (HELP) THEN
               CALL DSPWIN(HELPFILE)
               GO TO 400
            ELSE
               CALL WRTMSG(2,MSGNUM,12,1,0,' ',0)
               GO TO 400
            END IF
         ELSE IF (INCHAR.EQ.'4F') THEN
            RESULT = 0
            GO TO 500
         ELSE IF (INCHAR(1:1).EQ.'D') THEN
            IF (ARROWS) THEN
               NCHOICE = NCHOICE + 1
               IF (NCHOICE.GT.NUMCHOICE) THEN
                  NCHOICE = 0
               END IF
               CALL HILITE(STRTROW,ICOL2,NCHOICE,CHOICE
     +              ,CLENGTH,FGCLR,BGCLR,IPREV,FGCOLOR,BGCOLOR)          
               GO TO 400 
            ELSE
               ARROWS = .TRUE.
               NCHOICE = 1
               IPMT = 2
               CALL HILITE(STRTROW,ICOL2,NCHOICE,CHOICE
     +              ,CLENGTH,FGCLR,BGCLR,IPREV,FGCOLOR,BGCOLOR)
               GO TO 400           
            END IF        
         ELSE IF (INCHAR(1:1).EQ.'U') THEN
            IF (ARROWS) THEN
               NCHOICE = NCHOICE - 1
               IF (NCHOICE.LT.0) THEN
                  NCHOICE = NUMCHOICE
               END IF
               CALL HILITE(STRTROW,ICOL2,NCHOICE,CHOICE
     +               ,CLENGTH,FGCLR,BGCLR,IPREV,FGCOLOR,BGCOLOR)
               GO TO 400 
            ELSE
               ARROWS = .TRUE.
               NCHOICE = NUMCHOICE
               IPMT = 2
               CALL HILITE(STRTROW,ICOL2,NCHOICE,CHOICE
     +              ,CLENGTH,FGCLR,BGCLR,IPREV,FGCOLOR,BGCOLOR)
               GO TO 400           
            END IF        
         ELSE
            CALL WRTMSG(2,MSGNUM,12,1,0,' ',0)
            GO TO 400
         END IF 
C
C   CHECK FOR VALID CHARACTER RESPONSE
C
      ELSE
         IF (IPOS.EQ.1.AND.(NUMCHOICE.LT.10.OR.INCHAR(1:1).NE.'1')) THEN
            CREPLY(1:1) = ' '
            CREPLY(2:2) = INCHAR(1:1)
            READ(INCHAR,'(I1,1X)',ERR=600) NCHOICE
         ELSE
            CREPLY(IPOS:IPOS) = INCHAR(1:1)
            IF (IPOS.EQ.1) THEN
               IPOS = 2
               READ(CREPLY,'(BN,I1)',ERR=600) NCHOICE
               CALL HILITE(STRTROW,ICOL2,NCHOICE,CHOICE,CLENGTH
     +             ,FGCLR,BGCLR,IPREV,FGCOLOR,BGCOLOR)
               IPREV = 1
               CALL LOCATE (ENDROW+1,STRTCOL,IERR)
               CALL WRTSTR(MSGLN1,40,12,0)
               GO TO 410
            ELSE
               READ(CREPLY,'(BN,I2)',ERR=600) NCHOICE
            END IF
         END IF
      END IF
                  
      IF (NCHOICE.GT.NUMCHOICE) THEN
        GO TO 600
      ELSE
        CALL HILITE(STRTROW,ICOL2,NCHOICE,CHOICE,CLENGTH,FGCLR,BGCLR
     +        ,IPREV,FGCOLOR,BGCOLOR)
      END IF 
      IF (ARROWS) THEN
         GO TO 400
      ELSE
         RESULT = NCHOICE
      END IF   
C
C   CHOICE HAS BEEN MADE, RETURN.  IF 0 WAS SELECTED, CLEAR MENU FROM THE
C   SCREEN BEFORE LEAVING.
C        
  500 CONTINUE
      CALL CLRMSG(3)
      IF (RESULT.EQ.0) THEN
         CALL SCROLL(1,NLINES,STRTROW-1,STRTCOL,ENDROW,STRTCOL+WIDTH-1)
      END IF      
      CALL LOCATE(RTNROW,RTNCOL,IERR)
      RETURN
C
  600 CONTINUE
      CALL WRTMSG(2,MSGNUM,12,1,0,' ',0)
      IF (IPREV.GE.0) THEN
         CALL LOCATE (STRTROW+IPREV+2,ICOL2,IERR)
         WRITE (ICHAR,'(I2)') IPREV
         CALL WRTSTR(ICHAR,2,FGCOLOR,BGCOLOR)
         CALL WRTSTR('  ',2,FGCOLOR,BGCOLOR)
         CALL WRTSTR(CHOICE(IPREV),CLENGTH,FGCOLOR,BGCOLOR)
      END IF
      GO TO 200
C
C  900 CONTINUE
C      CALL WRTMSG(4,98,12,1,1,' ',0)
C      RETURN     
C
      END
************************************************************************
$PAGE
      SUBROUTINE HILITE(STRTROW,ICOL2,NCHOICE,CHOICE,CLENGTH
     +    ,FGCLR,BGCLR,IPREV,FGCOLOR,BGCOLOR)
C
      CHARACTER*32 CHOICE(1)
      CHARACTER*2 ICHAR
      INTEGER*2 STRTROW,NCHOICE,CLENGTH,FGCLR,BGCLR,FGCOLOR,BGCOLOR
C       
C
      IF (IPREV.GE.0) THEN
         CALL LOCATE (STRTROW+IPREV+2,ICOL2,IERR)
         IF (IPREV.EQ.0) THEN
            CALL WRTSTR(' 0  Exit  ',10,FGCOLOR,BGCOLOR)
         ELSE
            WRITE (ICHAR,'(I2)') IPREV
            CALL WRTSTR(ICHAR,2,FGCOLOR,BGCOLOR)
            CALL WRTSTR('  ',2,FGCOLOR,BGCOLOR)
            CALL WRTSTR(CHOICE(IPREV),CLENGTH,FGCOLOR,BGCOLOR)
         END IF
      END IF
C      
      CALL LOCATE (STRTROW+NCHOICE+2,ICOL2,IERR)
      IF (NCHOICE.EQ.0) THEN
         CALL WRTSTR(' 0  Exit  ',10,FGCLR,BGCLR)
      ELSE
         WRITE (ICHAR,'(I2)') NCHOICE
         CALL WRTSTR(ICHAR,2,FGCLR,BGCLR)
         CALL WRTSTR('  ',2,FGCLR,BGCLR)
         CALL WRTSTR(CHOICE(NCHOICE),CLENGTH,FGCLR,BGCLR)
      END IF
      RETURN
      END

