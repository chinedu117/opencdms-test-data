$STORAGE:2
C
      SUBROUTINE GETCHAR(FLDTYPE,OUTCHR)
C
C     THIS ROUTINE GETS A CHARACTER FROM THE KEYBOARD AND RETURNS IT AS A
C     2 CHARACTER STRING.  THE KEY ENTERED IS NOT ECHOED TO THE SCREEN.
C     IF A CONTROL CHARACTER IS ENTERED IT IS RETURNED USING BOTH POSITIONS,
C     OTHERWISE ONLY THE LEFTMOST POSITION IS USED. 
C     THIS ROUTINE HAS BEEN MODIFIED TO RETURN THE ESC KEY AS AN F4 KEY FOR
C     COMPATIBILITY WITH DATAEASE 4.0
C
C     INPUT FIELDS:  (INTEGER*2)
C         FLDTYPE = 0  CONVERT ALPHA CHARACTERS TO UPPER CASE
C                 = 1  DO NOT CONVERT ALPHA CHARACTERS TO UPPER CASE 
C     OUTPUT FIELDS: 
C         OUTCHR....CLICOM CODE FOR THE KEY ENTERED.  NORMAL KEYBOARD 
C                   CHARACTERS ARE RETURNED AS IS WHILE EXTENDED KEYS
C                   (FUNCTION KEYS AND CURSOR CONTROL KEYS) ARE RETURNED
C                   AS 2 CHARACTERS.  THE TWO CHARACTER CODES ARE DEFINED IN 
C                   THE DATA STATEMENT BELOW.  THE EXTENDED KEYS ARE DEFINED
C                   IN THE ASCENDING ORDER (SEE THE BASIC MANUAL).  MOST
C                   CODES SHOULD BE CLEAR.  1F FOR F1 KEY, 1S FOR SHIFT-F1
C                   KEY, HO FOR HOME, UP FOR UP-PAGE, LA FOR LEFT ARROW, ETC.
C                   NA STANDS FOR NOT APPLICABLE AND IS USED FOR KEYS NOT
C                   USED BY CLICOM.
C
      CHARACTER*1 NULL,BS,RE,TAB,INCHAR,ESC,GRAYPD,EXCHAR
      INTEGER*2 FLDTYPE,NCHAR
      CHARACTER*2 OUTCHR,KEYDEF(38)
C
C   DEFINE THE 2 CHARACTER CODES FOR EXTENDED KEYS   
      DATA KEYDEF /'1F','2F','3F','4F','5F','6F','7F','8F','9F','0F'
     +           ,2*'NA','HO','UA','UP','NA','LA','NA','RA','NA','EN'
     +            ,'DA','DP','IN','DE','1S','2S','3S','4S','5S','6S'
     +            ,'7S','8S','9S','0S','BT','AK','AL'/
C
C   INITIALIZE
C
      OUTCHR = ' '
      NULL = CHAR(0)
      GRAYPD=CHAR(224)
      BS = CHAR(8)
      TAB = CHAR(9)
      RE = CHAR(13)
      ESC = CHAR(27)
C
C   CALL INKEY2 (ASM LIBRARY ROUTINE) TO RETRIEVE A KEY     
C
   10 CONTINUE
       CALL INKEY2(INCHAR,EXCHAR)
C
C   CHECK FOR STANDARD KEYS THAT ARE TREATED AS EXTENDED BY CLICOM       
C
       IF (INCHAR.NE.NULL.AND.INCHAR.NE.GRAYPD) THEN
            NCHAR = ICHAR(INCHAR)
            IF (INCHAR.EQ.RE)THEN
                OUTCHR = 'RE'
            ELSE IF (INCHAR.EQ.BS)THEN
                OUTCHR = 'BS'
            ELSE IF (INCHAR.EQ.TAB) THEN
                OUTCHR = 'TB'
            ELSE IF (INCHAR.EQ.ESC) THEN
                OUTCHR = '4F'
            ELSE 
C
C   A NORMAL CHARACTER HAS BEEN ENTERED - CONVERT TO UPPER CASE IF REQUESTED
C   NOTE:  ALPHA CHARACTERS FOR ALL FLDTYPES EXCEPT 1 WILL BE CONVERTED TO 
C          UPPERCASE.  THIS INCLUDES OBSOLETE FIELD TYPES FROM PREVIOUS 
C          VERSIONS OF GETCHAR (2,3,4,9)
C
                 IF (FLDTYPE.NE.1) THEN
                     IF (INCHAR.GE.'a'.AND.INCHAR.LE.'z') THEN
                         NCHAR = ICHAR(INCHAR)
                         NCHAR = NCHAR - 32
                         INCHAR = CHAR(NCHAR)
                     END IF
                 END IF
                 OUTCHR = INCHAR
            END IF     
C
C   A CONTROL CHARACTER HAS BEEN ENTERED - GET THE EXTENDED KEY CODE AND
C   CONVERT IT TO THE CLICOM CODE - ONLY EXTENDED CODES 15, 37, 38 AND
C   59 THRU 93 ARE USED.  OTHERWISE IT IS NA
C
       ELSE
           NCHAR = ICHAR(EXCHAR)
           EXCHAR = '  '
           IF (NCHAR.EQ.15) THEN
               NCHAR = 94
           ELSE IF (NCHAR.EQ.37) THEN
               NCHAR = 95
           ELSE IF (NCHAR.EQ.38) THEN
               NCHAR = 96
           ELSE IF (NCHAR.LT.59.OR.NCHAR.GT.93) THEN
               NCHAR = 69
           END IF
           OUTCHR = KEYDEF(NCHAR - 58)
C
C   BEEP AND REQUEST ANOTHER KEY IF AN INVALID KEY IS ENTERED
C           
           IF (OUTCHR.EQ.'NA') THEN
               CALL BEEP
               GO TO 10
           END IF
      END IF
C      
      RETURN
      END 
      