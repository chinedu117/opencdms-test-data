$STORAGE:2
$DEBUG
      PROGRAM MLYPUB 
C
C   PROGRAM TO SELECT DLY CLIMATE DATA AND PRINT IT BY MONTH               
C       THE PROGRAM ASKS THE USER FOR THE STATION AND DATE RANGE TO 
C       BE CONSIDERED. 
C
C       THIS VERSION PRINTS THE RESULTS IN 80 COLUMN COMPRESSED MODE.
C
C  PROGRAM CONTROL VARIABLES
C
      PARAMETER (MAXELEM=65)
$INCLUDE:'MLYVAR.INC'
C
      CHARACTER*64 FILNAME,PRMFILE
      CHARACTER*22 TMPFIL,FILNM1
      CHARACTER*16 DDISK
      CHARACTER*8  PREVSTN
      CHARACTER*3  RECTYPE,DDSIDT
      CHARACTER*2  RTNFLAG,RDISK
      CHARACTER*1  DATASOURCE,PAGEFD,RTNCODE,REPLY
      INTEGER*2    DETAIL,HDLINES
      LOGICAL      ERROR
C
C  INPUT DATA VARIABLES
C   
      CHARACTER*80 STRING,MESSAGE,HEADERS(5),BLANK,HDERTXT
      CHARACTER*8  CMDVAL(7)
      CHARACTER LAT*7, LON*8,DISTRICT*20
      CHARACTER*7 ELEVTION
      REAL ELEV
C
C   VARIABLES HOLDING THE OUTPUT FORMATS FOR USER-SPECIFIED ELEMENTS
C
      CHARACTER*4 SKPCHR
      CHARACTER*5 MSGTXT
      CHARACTER*6 FRMAT1
      CHARACTER*1 AVGCHR
C
C   MISCELANEOUS VARIABLES
C
      CHARACTER*1 INLTYPE(3),LIMTYPE(MAXELEM,3), LJPRNTER(8)
      CHARACTER*8 LJCODE,LASERPRN
      EQUIVALENCE (LJCODE,SETLJLPI(1)), (LASERPRN,LJPRNTER(1))
C
      CHARACTER*6  PLIMIT(3)
      REAL         INLIMIT(3),LIMIT(MAXELEM,3) 
      CHARACTER*16 MONNAME(13)
      CHARACTER    HDATE*6, HMONTH*2
      INTEGER*2    NEWPAG
      LOGICAL      LASERFLG
C
      COMMON /LIMITS/ LIMTYPE,LIMIT
C
      DATA BLANK /'                   '/
      DATA RECTYPE /'DLY'/
      DATA LASERFLG,FIRSTCALL /2*'.TRUE.'/, HDFLAG /.FALSE./
      PAGEFD = CHAR(12)
C
      PRMFILE = 'P:\DATA\MLYPUB.PRM'
      NUMELEM = 0
      ELMCNT = 0
      STNCNT = 0
      PRTCNT = 0
      DO 5 J = 1,5
         HEADERS(J) = BLANK
 5    CONTINUE       
C
      DO 10 I = 1,8
         LJPRNTER (I) = CHAR (0)
 10   CONTINUE                 
      DO 15 I = 1,MAXELEM
         ELEM(I) = 0
         ESKIP(I) = .FALSE.
         PRTELM(I) = .FALSE.
         AVGTOT(I) = ' '
 15   CONTINUE         
C
C   READ THE PRINTER CONFIGURATION CODES AND GET RAM DISK LETTER AND
C   THE NAMES OF THE MONTHS
C
      CALL RDPRNT(SETNRM,SETLRG,SETSML,STRTUND,STPUND,LINCHR,
     +            SETLJLPI,LJRESET)
C
C ** CHECK PRINTER CONFIGURATION CODE TO DETERMINE IF THE KIND OF PRINTER
C       USED IS LASER OR DOT-MATRIX PRINTER.  IF IT IS LASER PRINTER THEN
C       LINE SPACING WILL BE SET TO 8 LINES PER INCH.
C
      IF (LJCODE.EQ.LASERPRN) THEN
           LASERFLG = .FALSE.
      END IF
      LEND=2
      CALL GETDSC(RDISK,DDISK,LEND)
      CALL GETMON(MONNAME,16)
C
C   READ THE TEXT FOR ALL OF THE LEGENDS AND TITLES
C
   20 CONTINUE
      OPEN (61,FILE=PRMFILE,STATUS='OLD',FORM='FORMATTED',IOSTAT=IOCHK)
      IF (IOCHK.NE.0) THEN
         CALL OPENMSG(PRMFILE,'       MLYPUB      ',IOCHK)
         GO TO 20
      END IF
      DO 30 I = 1,4
         READ(61,*,ERR=800) TITLE(I)
   30 CONTINUE
      READ(61,*,ERR=800) MTL13,MTL14,MTL15,MTL16
      READ(61,*,ERR=800) MTL21,MTL22,MTL23,(MTL24(J),J=1,4),
     +                  (MTL25(K),K=1,4),(MTL26(L),L=1,3)
      READ(61,*,ERR=800) MFOOT(1)     
      READ(61,*,ERR=800) MFOOT(2) 
      READ(61,*,ERR=800) DTL13,DTL14
      READ(61,*,ERR=800) DTL22,DTL24,DTL25    
      READ(61,*,ERR=800) STL1,STL2,STL3,STL4,STL5,STL6
      READ(61,*,ERR=800) ETL1,ETL2,ETL3,ETL4,PAGNAM,(ETL5(K),K=1,3)
C
C   READ THE SYSTEM TYPE (USA OR INTL) FROM THE PARAMETER FILE
C
      READ(61,*,ERR=800) MAXLINE,SYSTYP
C
C   READ HEADER LINES AND READ ONLY 5 HEADER LINES FROM THE PARAMETER FILE
C
      DO 40 K = 1 , 20
         READ(61,*,ERR=800)HDERTXT
         IF (HDERTXT(1:4).NE.'****'.AND.K.LT.6) THEN
            HEADERS(K) = HDERTXT
            HDLINES = K
            HDERTXT = BLANK
         ELSE IF (HDERTXT(1:4).EQ.'****') THEN
             GO TO 45
         END IF
 40   CONTINUE
 45   CONTINUE
      DO 50 I1 = 1,1000
         RELELEM(I1) = 0
  50  CONTINUE
C   
  60  CONTINUE
      OPEN(30,FILE='P:\DATA\ELEM.DEF',STATUS='OLD',ACCESS='DIRECT'
     +          ,RECL=110,SHARE='DENYWR',MODE='READ',IOSTAT=IOCHK)
      IF(IOCHK.NE.0) THEN
         CALL OPENMSG('P:\DATA\ELEM.DEF      ','MLYPUB      ',IOCHK)
         GO TO 60
      END IF
C
C  READ SPECIAL ELEMENT PRINTING INSTRUCTIONS FROM THE PARAMTER FILE
C
      DO 70 I = 1,MAXELEM
         READ(61,*,END=75,ERR=800) IELEM,ISMY,IVAL,AVGCHR,SKPCHR
         IF (RELELEM(IELEM).EQ.0) THEN
            CALL SETELEM(IELEM,NUMELEM,RELELEM,ELEM,ELEMABRV,ELEMNAME
     +                  ,ELEMUNITS,SMYFMT,VALFMT,AVGCHR,AVGTOT,RTNFLG)
            IF (RTNFLG.NE.'0') THEN
               WRITE(MSGTXT,'(I5)')MAXELEM
               CALL WRTMSG(4,104,12,1,0,MSGTXT,5)
               CALL LOCATE(22,1,IERR)
               CALL OKREPLY(REPLY,RTNCODE)        
               CALL CLRMSG(3)
               IF (REPLY.EQ.'N'.OR.RTNCODE.EQ.'1') THEN
                  CALL LOCATE(24,1,IERR)
                  STOP ' '
               ELSE
                  GO TO 75
               END IF
            END IF
         END IF
         I4 = RELELEM(IELEM)
         IF (SKPCHR.EQ.'SKIP'.OR.SKPCHR.EQ.'skip') THEN
            ESKIP(I4) = .TRUE.
            GO TO 70
         END IF   
         IF (ISMY.EQ.0) THEN
            SMYFMT(I4) = 'I7'
         ELSE IF (ISMY.LT.7) THEN
            WRITE(SMYFMT(I4),'(A3,I1)') 'F7.',ISMY
         END IF
         IF (IVAL.EQ.0) THEN
            VALFMT(I4) = 'I6'
         ELSE IF (IVAL.LT.6) THEN
            WRITE(VALFMT(I4),'(A3,I1)') 'F6.',IVAL
         END IF
   70 CONTINUE      
   75 CONTINUE      
      CLOSE(61)
C
C   DEFINE THE HELP FILE AND SET UP THE SCREEN ETC 
C
      FILNAME = 'P:\HELP\MLYPUB.HLP'
      CALL SETMOD(3,IERR)
C
C   READ THE LIMIT CATEGORIES FOR THE ELEMENTS OF INTEREST
C
      DO  80 I1 = 1,MAXELEM
         DO  80 I2 = 1,3
            LIMTYPE(I1,I2) = ' '
   80 CONTINUE
C
   90 CONTINUE
      OPEN(8,FILE='P:\DATA\MLYPUB.LIM',STATUS='OLD',IOSTAT=IOCHK)
      IF(IOCHK.NE.0) THEN
         CALL OPENMSG('P:\DATA\MLYPUB.LIM   ','MLYPUB      ',IOCHK)
         GO TO  90
      END IF   
      ERROR = .FALSE.
      DO 150 I1 = 1,999
         READ (8,'(A78)',END=155) STRING
         CALL PARSE1(STRING,78,7,8,CMDVAL,RTNCODE)
         IF (RTNCODE.NE.'0'.AND.RTNCODE.NE.'2') THEN
            GO TO 135
         END IF
         READ(CMDVAL(1),'(I3)',ERR=135) IELEM
         READ(CMDVAL(2),'(A1)') INLTYPE(1)
         READ(CMDVAL(3),'(F8.0)',ERR=135) INLIMIT(1)
         READ(CMDVAL(4),'(A1)') INLTYPE(2)
         READ(CMDVAL(5),'(F8.0)',ERR=135) INLIMIT(2)
         READ(CMDVAL(6),'(A1)') INLTYPE(3)
         READ(CMDVAL(7),'(F8.0)',ERR=135) INLIMIT(3)
         IF (IELEM.GT.0.AND.RELELEM(IELEM).EQ.0) THEN
            CALL SETELEM(IELEM,NUMELEM,RELELEM,ELEM,ELEMABRV,ELEMNAME
     +                   ,ELEMUNITS,SMYFMT,VALFMT,' ',AVGTOT,RTNFLG)
            IF (RTNFLG.NE.'0') THEN
               WRITE(MSGTXT,'(I5)')MAXELEM
               CALL WRTMSG(4,104,12,1,0,MSGTXT,5)
               CALL LOCATE(22,1,IERR)
               CALL OKREPLY(REPLY,RTNCODE)        
               CALL CLRMSG(3)
               IF (REPLY.EQ.'N'.OR.RTNCODE.EQ.'1') THEN
                  CALL LOCATE(24,1,IERR)
                  STOP ' '
               ELSE
                  GO TO 150
               END IF
            END IF
         END IF
         I4 = RELELEM(IELEM) 
         DO 130 I2 = 1,3
            LIMTYPE(I4,I2) = INLTYPE(I2)
            LIMIT(I4,I2) = INLIMIT(I2)
  130    CONTINUE
         GO TO 150
  135    CONTINUE
         ERROR = .TRUE.
         CALL LOCATE(21,0,IERR)
         CALL WRTSTR(STRING,78,14,0)
         WRITE(MESSAGE,'(A20,I2)') 'P:/DATA/MLYPUB.LIM',I1
         CALL WRTMSG(3,173,12,1,1,MESSAGE,22)
  150 CONTINUE
  155 CONTINUE
      CLOSE(8)   
      IF (ERROR) THEN
         STOP 2
      END IF
C
C   GET THE SELECTION INFORMATION
C
  180 CONTINUE
      CALL CLS
      CALL LOCATE(1,0,IERR)
      CALL GETMLIM(STARTSTN,ENDSTN,STRTYRMO,FILNAME,RTNCODE)
      IF (RTNCODE.NE.'0') THEN
         CALL LOCATE(23,0,IERR)
         STOP ' '  
      END IF
C
C    GET THE SOURCE OF THE INPUT DATA
C
  190 CONTINUE
      CALL POSLIN(IROW1,ICOL)
      CALL LOCATE(IROW1,10,IERR)
      CALL GETMNU('SELDATASRC2 ','  ',ICHOICE)
      IF (ICHOICE.EQ.0)  THEN
         GO TO 180
      ELSE IF (ICHOICE.EQ.1) THEN
         DATASOURCE = 'M'
      ELSE IF (ICHOICE.EQ.2) THEN
         DATASOURCE = 'S'
      ELSE
         DATASOURCE = 'W'
         JROW = IROW1 + 9
         CALL LOCATE(JROW,13,IERR)
         CALL WRTSTR('Dataset-Id: ',12,14,0)
         CALL GETSTR(3,DDSIDT,3,15,1,RTNFLAG)
         IF (DDSIDT.EQ.'  '.OR.RTNFLAG.EQ.'4F') THEN
            GO TO 190
         END IF
      END IF
C
C  SELECT THE DESTINATION OF THE OUTPUT FILE
C  
      CALL LOCATE(IROW1,45,IERR)
      CALL SELPRT(RTNCODE)
      IF (RTNCODE.NE.'0') THEN
         GO TO 190
      END IF      
      CALL  LOCATE(IROW1+13,20,IERR)
C
C  ** SETING THE NUMBER OF LINES PER PAGE IF IT IS LASER PRINTER
C
      IF ( LASERFLG ) THEN
         WRITE(50,'(1X,8A1)') SETLJLPI
      END IF
C
C   DETERMINE LEVEL OF OUTPUT DETAIL WANTED
C
      CALL CLTEXT(0,0,IERR)
      CALL GETMNU('MLYPB-RESULT','  ',DETAIL)
      IF (DETAIL.EQ.0) THEN
         CALL CLS
         CALL LOCATE(1,0,IERR)
         GO TO 190
      END IF
C   
C   OPEN THE INPUT AND OUTPUT FILES
C
      IF (DATASOURCE.EQ.'W') THEN
         FILNM1 = 'Q:'
         FILNM1(3:5) = RECTYPE
         FILNM1(6:8) = DDSIDT
         FILNM1(9:12) = '.DAT'
         OPEN (25,FILE=FILNM1,STATUS='OLD',FORM='BINARY',SHARE='DENYWR'
     +       ,MODE='READ',IOSTAT=IOCHK)
         IF (IOCHK.NE.0) THEN
            CALL OPENMSG(FILNM1,'MLYPUB      ',IOCHK)
            CALL CLS
            CALL LOCATE (1,0,IERR)
            GO TO 190
         END IF
      ELSE
         CALL OPENINPUT(RECTYPE,DATASOURCE)
      END IF
      TMPFIL = '  \DATA\TEMPFIL.TMP'
      TMPFIL(1:2) = RDISK      
      OPEN (60,FILE=TMPFIL,STATUS='UNKNOWN',FORM='UNFORMATTED'
     +     ,IOSTAT=IOCHK)
      IF (IOCHK.NE.0) THEN
         CALL OPENMSG(TMPFIL,'MLYPUB      ',IOCHK)
         STOP ' '
      END IF
C
C   SET THE MONTH AND YEAR FIELD FOR TITLE LINES
C
      WRITE(HDATE,'(I6)') STRTYRMO
      HMONTH = HDATE(5:6)
      READ(HMONTH,'(I2)') MONTH  
      MONYEAR = '                    '
      NUMCHAR = 0
      DO 260 I5 = 1,16
         IF (MONNAME(MONTH)(I5:I5).EQ.' ') THEN
            GO TO 265
         ELSE
            MONYEAR(I5:I5) = MONNAME(MONTH)(I5:I5)
            NUMCHAR = NUMCHAR + 1
         END IF
  260 CONTINUE
  265 CONTINUE
      MONYEAR(NUMCHAR+1:NUMCHAR+1) = ','
      MONYEAR(NUMCHAR+3:NUMCHAR+6) = HDATE(1:4)
C
C   WRITE THE RUNNING COUNTER HEADINGS
C
      CALL CLRMSG(1)
      CALL LOCATE (24,0,IERR)
      CALL WRTSTR('Records Read -          Records Processed - '
     +             ,44,14,0)
      IPAGE = 0
C
C  PRINT THE HEADER LINES
C
      IF (HEADERS(1)(1:4).NE.'****') THEN
         WRITE(50,395) SETSML,PAGNAM,1,SETNRM
         IPAGE = 1 
         DO 55 I = 1, HDLINES   
            WRITE(50,380)SETNRM,HEADERS(I)
 55      CONTINUE
      ELSE
         HDFLAG = .TRUE.
      END IF
C
C  PRINT THE MONTHLY SUMMARY
C
      IF (DETAIL.NE.2) THEN
         CALL MLYSMY
      END IF
C
C  PRINT THE DAILY DATA 
C
      IF (DETAIL.GT.1) THEN
         CALL DLYDATA(DETAIL)
      END IF
C
C   PRINT THE STATION INFORMATION LIST
C
      REWIND (60)
      PREVSTN = 'XXXXXXXX'
      IF (ELMCNT+STNCNT+LINECNT+16.GT.MAXLINE) THEN
         LINECNT = 0
         NEWPAG = 2
      ELSE
         NEWPAG = 1
      END IF
      DO 500 I1 = 1,9999
         IF (LINECNT+2.GT.MAXLINE.OR.NEWPAG.GT.0) THEN
            IF (LINECNT+2.GT.MAXLINE) THEN
               NEWPAG = 2
               WRITE(50,410) LINCHR(7),(LINCHR(2),I5=1,16),LINCHR(5)
     +           ,(LINCHR(2),I6=1,26),LINCHR(5),(LINCHR(2),I7=1,22)
     +           ,(LINCHR(5),(LINCHR(2),I8=1,11),I9=1,3),LINCHR(8)       
            END IF
            IF (NEWPAG.EQ.2) THEN
               IF (FIRSTCALL) THEN
                  WRITE(50,'(1X,8A1)') SETNRM
                  FIRSTCALL = .FALSE.
               ELSE
                  WRITE(50,'(1X,9A1)') PAGEFD,SETNRM
               END IF
               LINECNT = 3
               IF (HDFLAG) THEN
                  LINECNT = 3 + NHDLINES
                  IPAGE = IPAGE + 1
                  WRITE(50,395) SETSML,PAGNAM,IPAGE,SETNRM
               END IF
               HDFLAG = .TRUE.
               WRITE(50,400) SETNRM,TITLE(3),SETNRM,SETSML
            ELSE
               LINECNT = LINECNT + 4
               WRITE(50,'(1X,//,1X,8A1)') SETNRM
               WRITE(50,400) SETNRM,TITLE(3),SETNRM,SETSML
            END IF
            NEWPAG = 0
            WRITE(50,410) LINCHR(3),(LINCHR(2),I5=1,16),LINCHR(6)
     +          ,(LINCHR(2),I6=1,26),LINCHR(6),(LINCHR(2),I7=1,22)
     +          ,(LINCHR(6),(LINCHR(2),I8=1,12),I9=1,3),LINCHR(4)       
            WRITE(50,415) LINCHR(1),STL1,LINCHR(1),STL2,LINCHR(1)
     +        ,STL3,LINCHR(1),STL4,LINCHR(1),STL5,LINCHR(1),STL6
     +        ,LINCHR(1)
            WRITE(50,410) LINCHR(9),(LINCHR(2),I5=1,16),LINCHR(11)
     +          ,(LINCHR(2),I6=1,26),LINCHR(11),(LINCHR(2),I7=1,22)
     +          ,(LINCHR(11),(LINCHR(2),I8=1,12),I9=1,3),LINCHR(10)       
            LINECNT = LINECNT + 3
         END IF
         READ(60,END=510) STNID,STNABRV,DISTRICT,LAT,LON,ELEV
         IF (STNID.EQ.PREVSTN) THEN
            GO TO 500
         END IF
         PREVSTN = STNID
         IF (SYSTYP.EQ.'USA ') THEN
            INTELV = NINT(ELEV)
            IF (INTELV.EQ.0) THEN
               ELEVTION = ' '
            ELSE
               WRITE(ELEVTION,'(I7)')INTELV
            END IF
            WRITE(50,450) LINCHR(1),STNID(1:2),STNID(3:6),STNID(7:8)
     +        ,LINCHR(1),STNABRV,LINCHR(1),DISTRICT,LINCHR(1),LAT(1:2)
     +        ,LAT(3:4),LAT(5:7),LINCHR(1),LON(1:3),LON(4:5),LON(6:8)
     +        ,LINCHR(1),ELEVTION,LINCHR(1)
         ELSE
            IF (ELEV.EQ.0) THEN
               ELEVTION = ' '
            ELSE
               WRITE(ELEVTION,'(F7.1)')ELEV
            END IF
            WRITE(50,460) LINCHR(1),STNID,LINCHR(1),STNABRV,LINCHR(1)
     +        ,DISTRICT,LINCHR(1),LAT(1:2),LAT(3:4),LAT(5:7),LINCHR(1)
     +        ,LON(1:3),LON(4:5),LON(6:8),LINCHR(1),ELEVTION,LINCHR(1)
         END IF
         LINECNT = LINECNT + 1
  500 CONTINUE
  510 CONTINUE
      WRITE(50,410) LINCHR(7),(LINCHR(2),I5=1,16),LINCHR(5)
     +     ,(LINCHR(2),I6=1,26),LINCHR(5),(LINCHR(2),I7=1,22)
     +     ,(LINCHR(5),(LINCHR(2),I8=1,12),I9=1,3),LINCHR(8)       
      LINECNT = LINECNT + 1
C
C   PRINT THE ELEMENT LIST
C
      IF (ELMCNT+LINECNT+8.GT.MAXLINE) THEN
         LINECNT = 0
         NEWPAG = 2
      ELSE
         NEWPAG = 1
      END IF
      DO 600 I1 = 1,NUMELEM   
         IF (LINECNT+2.GT.MAXLINE.OR.NEWPAG.GT.0) THEN
            IF (LINECNT+2.GT.MAXLINE) THEN
                NEWPAG = 2
                WRITE(50,410) LINCHR(7),(LINCHR(2),I5=1,10),LINCHR(5)
     +             ,(LINCHR(2),I6=1,6),LINCHR(5),(LINCHR(2),I7=1,22)
     +             ,LINCHR(5),(LINCHR(2),I8=1,25),(LINCHR(5),(LINCHR(2)
     +             ,I9=1,11),I10=1,3),LINCHR(8)       
            END IF
            IF (NEWPAG.EQ.2) THEN
               IF (FIRSTCALL) THEN
                  WRITE(50,'(1X,8A1)') SETNRM
                  FIRSTCALL = .FALSE.
               ELSE
                  WRITE(50,'(1X,9A1)') PAGEFD,SETNRM
               END IF
               IPAGE = IPAGE + 1
               WRITE(50,395) SETSML,PAGNAM,IPAGE,SETNRM
               WRITE(50,520) SETNRM,TITLE(4),SETNRM,SETSML
               LINECNT = 2
            ELSE
               WRITE(50,'(/)')
               WRITE(50,'(1X,8A1)') SETNRM
               WRITE(50,520) SETNRM,TITLE(4),SETNRM,SETSML
               LINECNT = LINECNT + 2
            END IF
            NEWPAG = 0
            WRITE(50,410) LINCHR(3),(LINCHR(2),I5=1,10),LINCHR(6)
     +         ,(LINCHR(2),I6=1,6),LINCHR(6),(LINCHR(2),I7=1,22)
     +         ,LINCHR(6),(LINCHR(2),I8=1,25),(LINCHR(6),(LINCHR(2)
     +         ,I9=1,11),I10=1,3),LINCHR(4)       
            WRITE(50,530) LINCHR(1),ETL1,LINCHR(1),ETL2,LINCHR(1)
     +          ,ETL3,LINCHR(1),ETL4,LINCHR(1),(ETL5(I2)
     +          ,LINCHR(1),I2=1,3)
            WRITE(50,410) LINCHR(9),(LINCHR(2),I5=1,10),LINCHR(11)
     +         ,(LINCHR(2),I6=1,6),LINCHR(11),(LINCHR(2),I7=1,22)
     +         ,LINCHR(11),(LINCHR(2),I8=1,25),(LINCHR(11),(LINCHR(2)
     +         ,I9=1,11),I10=1,3),LINCHR(10)       
            LINECNT = LINECNT + 3
         END IF
C
C   SKIP THIS ELEMENT IF THAT WAS REQUESTED IN THE PARAMETER FILE
C   OR IF THIS ELEMENT WAS NOT READ FOR ANY OF THE STATIONS FOUND
C
         IELEM = ELEM(I1)
         IF (IELEM.EQ.0) THEN
            GO TO 600
         ELSE
            I4 = RELELEM(IELEM)
            IF (.NOT.PRTELM(I4).OR.ESKIP(I4)) THEN
               GO TO 600
            END IF
         END IF 
C
C   FIND THE FORMAT TO BE USED FOR THE LIMITS FOR THE CURRENT ELEMENT
C
         FRMAT1 = '(F6.1)'
         FRMAT1(2:5) = VALFMT(I4)
C
C      PRINT THE LIMIT FOR THE CURRENT ELEMENT (IF THERE IS ONE)
C        
         DO 550 I2 = 1,3
            IF (LIMTYPE(I1,I2).NE.' ') THEN
               IF (FRMAT1(2:2).EQ.'F') THEN
                  WRITE(PLIMIT(I2),FRMAT1) LIMIT(I1,I2)
               ELSE
                  ILIMIT = NINT(LIMIT(I1,I2))
                  WRITE(PLIMIT(I2),FRMAT1) ILIMIT
               END IF
            ELSE
               PLIMIT(I2) = '      '
            END IF
  550    CONTINUE
         WRITE(50,560) LINCHR(1),ELEMABRV(I1),LINCHR(1),ELEM(I1)
     +       ,LINCHR(1),ELEMNAME(I1),LINCHR(1),ELEMUNITS(I1)
     +       ,LINCHR(1),(LIMTYPE(I1,I2),PLIMIT(I2),LINCHR(1),I2=1,3)
         LINECNT = LINECNT + 1
  600 CONTINUE
      WRITE(50,410) LINCHR(7),(LINCHR(2),I5=1,10),LINCHR(5)
     +   ,(LINCHR(2),I6=1,6),LINCHR(5),(LINCHR(2),I7=1,22)
     +   ,LINCHR(5),(LINCHR(2),I8=1,25),(LINCHR(5),(LINCHR(2)
     +   ,I9=1,11),I10=1,3),LINCHR(8)       
C
      CLOSE (25)
      CLOSE (30)
      CLOSE (35)
      CLOSE (60,STATUS='DELETE')
C
C   END COMPRESSED MODE ON THE PRINTER AND SET PRINTER TO NORMAL MODE
C
      IF ( LASERFLG ) THEN
         WRITE(50,'(1X,9A1)') PAGEFD,LJRESET
      ELSE
         WRITE(50,'(1X,9A1)') PAGEFD,SETNRM
      END IF
      CLOSE (50)
C
      STOP ' '
C
C     *** ERROR READING FILE ***
C  
  800 CONTINUE
      CALL CLS
      CALL WRTMSG(4,191,12,1,0,PRMFILE,22)
      CALL LOCATE(24,0,IERR)
      STOP 2            
C
C   FORMAT STATEMENTS
C
  380 FORMAT(1X,8A1,12X,A59)
  395 FORMAT(1X,8A1,112X,A6,1X,I2,8A1,//)
  400 FORMAT(1X,8A1,5X,A32,38X,16A1)
  410 FORMAT(1X,120A1)
  415 FORMAT(1X,A1,1X,A15,A1,1X,A19,6X,A1,1X,A15,6X,A1,3(2X,A9,1X,A1))
  450 FORMAT(1X,A1,3X,A2,1X,A4,1X,A2,3X,A1,A25,1X,A1,A21,1X,A1
     +      ,1X,A2,1X,A2,1X,A3,2X,A1,1X,A3,1X,A2,1X,A3,1X,A1,1X
     +      ,A7,4X,A1)
  460 FORMAT(1X,A1,4X,A8,4X,A1,A25,1X,A1,A21,1X,A1
     +      ,1X,A2,1X,A2,1X,A3,2X,A1,1X,A3,1X,A2,1X,A3,1X,A1,2X
     +      ,A7,3X,A1)
  520 FORMAT(1X,8A1,9X,A32,27X,16A1)
  530 FORMAT(1X,A1,A9,1X,A1,1X,A5,A1,1X,A16,5X,A1,1X,A16
     +      ,8X,A1,3(A9,2X,A1))
  560 FORMAT(1X,A1,2X,A6,2X,A1,1X,I3.3,2X,A1,1X,A16,5X,A1,1X
     +      ,A20,4X,A1,3(2X,A1,A6,2X,A1))
      END

***********************************************************************
$PAGE
      SUBROUTINE DLYDATA(DETAIL)
C 
C  ROUTINE TO PRINT THE DAILY DATA FOR THE SELECTED STATIONS AND MONTH
C
C
C   PROGRAM CONTROL VARIABLES
C
      PARAMETER (MAXELEM=65)
$INCLUDE:'MLYVAR.INC'
C
      CHARACTER*8 PREVSTN
      CHARACTER*7 OUTCNT(2)
      INTEGER*4   RECCOUNT,NRECCOUNT,IREC
      INTEGER*2   DETAIL,NUMDAYS(12)
      INTEGER*4   YRMON,SRCHDATE
      CHARACTER*1 RTNCODE,PAGEFD
C
C  INPUT DATA VARIABLES
C   
C   VARIABLES HOLDING ALL OF THE OUTPUT TITLES AND LEGENDS
C
      CHARACTER*54 HLDTXT
      CHARACTER*6 FRMAT1,FRMAT2
C
C   STATION DEFINITION VARIABLES
C
      CHARACTER LAT*7, LON*8,DISTRICT*20
      REAL ELEV
C 
C   LOCAL VARIABLES
C
      REAL TOTAL
      INTEGER*2 IDAY(31),WRTHDR
      CHARACTER*1 PTYPE,REPLY
      CHARACTER*5 MSGTXT
      CHARACTER*6 PRTVAL(31)
      CHARACTER*7 PMEAN
      CHARACTER*130 PG2LIN(2,70),NXTPG0,NXTPG10,NXTPG1,NXTPG2
      CHARACTER*150 NXTPG
C
C   VARIABLES TO HOLD FORMAT STATEMENTS
C
      CHARACTER*2 RPTCNT
      CHARACTER*48 HDR1FMT,HDR2FMT,HDR3FMT,HDR4FMT,HDR5FMT
     +             ,VAL0FMT,VAL1FMT
     +             ,HD231FMT,HD232FMT,HD241FMT
     +             ,HD242FMT,HD251FMT,HD252FMT
     +             ,VAL21FMT,VAL22FMT

      DATA HDR1FMT  /'(6X,8A1, 6X,A52, 4X,16A1)'/
      DATA HDR2FMT  /'(A1,3(6X,A1),8X,A1)'/
      DATA HDR3FMT  /'(1X,A1,10X,A1,27X,A28,35X,A1)'/
      DATA HDR4FMT  /'(1X,A1,3X,A7,120A1)'/
      DATA HDR5FMT  /'(1X,A1,10X,15(A1,2X,I2,2X),A1)'/
      DATA VAL0FMT  /'(1X,A1,A24,A1,13(6X,A1))'/
      DATA VAL1FMT  /'(1X,A1,3X,A6,1X,15(A1,A6),A1)'/
      DATA HD231FMT /'(1X,A1,10X,A1,40X,A24)'/
      DATA HD232FMT /'(3(7X),A1,1X,A7,A1)'/
      DATA HD241FMT /'(1X,A1,3X,A7,84A1)'/
      DATA HD242FMT /'(4(7A1),A1,1X,A7,A1)'/
      DATA HD251FMT /'(1X,A1,10X,12(A1,2X,I2,2X))'/
      DATA HD252FMT /'(4(A1,2X,I2,2X),A1,1X,A7,A1)'/
      DATA VAL21FMT /'(1X,A1,3X,A6,1X,12(A1,A6))'/ 
      DATA VAL22FMT /'(4(A1,A6),A1,A7,A1,A1)'/ 
      DATA NUMDAYS  /31,28,31,30,31,30,31,31,30,31,30,31/
      DATA OUTCNT   /'        ','        '/
C
      OUTCNT(2)(1:1) = CHAR(0)
      PAGEFD = CHAR(12)
      DO 20 I1 = 1,31
         IDAY(I1) = I1
   20 CONTINUE
C
C   INITIALIZE COUNTERS 
C
         NRECCOUNT = 0
         RECCOUNT  = 0
         IF (DETAIL.EQ.2) THEN
            LINECNT = 999
            PRTCNT  = 999
         END IF
         IF (PRTCNT.GT.MAXLINE/3) THEN
            WRTHDR = 2
         ELSE
            WRTHDR = 1
         END IF
         PRTCNT = 0
C-----------------------------------------------------------------------
      DO 500 IREC=1,999999  

         CALL READDLY(DDSID,STNID,IELEM,YEAR,MONTH,VALUE,FLAG1,RTNCODE)
         RYEAR = YEAR
         RMON = MONTH
         RYRMON = RYEAR*100. + RMON
         YRMON = INT4(RYRMON)
         NRECCOUNT = NRECCOUNT + 1
         CALL LOCATE(24,15,IERR)
         WRITE(OUTCNT(1),'(I7)') NRECCOUNT
         CALL CWRITE(OUTCNT,12,IERR)
         IF (RTNCODE.EQ.'1') THEN
            GO TO 501
         ELSE IF (STNID.GT.ENDSTN.OR.(STNID.EQ.ENDSTN.AND.
     +        YRMON.GT.STRTYRMO)) THEN
            GO TO 501
         ELSE IF(STNID.LT.STARTSTN.OR.YRMON.NE.STRTYRMO) THEN
            GO TO 500
         END IF 
         IF (MONTH.EQ.2) THEN
            IF (MOD(YEAR,4).EQ.0) THEN
               NUMDAYS(MONTH) = 29
            ELSE
               NUMDAYS(MONTH) = 28
            END IF
         END IF
C
C     IF NEW ELEMENT ADD IT TO THE INTERNAL ELEMENT TABLE
C
         IF (RELELEM(IELEM).EQ.0) THEN
            CALL SETELEM(IELEM,NUMELEM,RELELEM,ELEM,ELEMABRV,ELEMNAME
     +                   ,ELEMUNITS,SMYFMT,VALFMT,' ',AVGTOT,RTNFLG)
            IF (RTNFLG.NE.'0') THEN
               WRITE(MSGTXT,'(I5)')MAXELEM
               CALL WRTMSG(4,104,12,1,0,MSGTXT,5)
               CALL LOCATE(22,1,IERR)
               CALL OKREPLY(REPLY,RTNCODE)        
               CALL CLRMSG(3)
               IF (REPLY.EQ.'N'.OR.RTNCODE.EQ.'1') THEN
                  CALL LOCATE(24,1,IERR)
                  STOP ' '
               ELSE
                  GO TO 501
               END IF
            END IF
         END IF
C
C     SKIP THIS ELEMENT IF THAT WAS INDICATED IN THE PARAMETER FILE
C     OTHERWISE SET VARIABLE TO INDICATE THIS ELEMENT HAS BEEN READ
C
         I4 = RELELEM(IELEM)
         IF (ESKIP(I4)) THEN
            GO TO 500
         END IF
C
         IF (.NOT.PRTELM(I4)) THEN
            PRTELM(I4) = .TRUE.
            ELMCNT = ELMCNT + 1
         END IF
C
         RECCOUNT = RECCOUNT + 1 
         WRITE(OUTCNT(1),'(I7)') RECCOUNT
         CALL LOCATE (24,44,IERR)
         CALL CWRITE(OUTCNT,12,IERR)
C         
C     SET SUMMARY TYPE AND PRINT FORMAT
C
         FRMAT1 = '(F6.1)'
         FRMAT2 = '(F5.1)'
         SUMTYPE = AVGTOT(I4)
         FRMAT1(2:5) = SMYFMT(I4)
         FRMAT2(2:5) = VALFMT(I4)
C
         IF (NUMDAYS(MONTH).GT.30) THEN
            IDAY1 = 16
            HDR1FMT(17:18) = '10'
            HDR3FMT(15:16) = '40'
            HDR3FMT(23:24) = '43'
            HDR5FMT(12:13) = '16'
            VAL0FMT(15:16) = '14'
            VAL1FMT(17:18) = '16'
         ELSE
            IDAY1 = 15
            HDR1FMT(17:18) = ' 4'
            HDR3FMT(15:16) = '37'
            HDR3FMT(23:24) = '39'
            HDR5FMT(12:13) = '15'
            VAL0FMT(15:16) = '13'
            VAL1FMT(17:18) = '15'
         END IF
C
C      IF THE FIRST PAGE HAS BEEN WRITTEN WRITE THE LAST LINE OF THE
C      FIRST PAGE AND ALL OF THE SECOND DATA PAGE
C
         IF (LINECNT+2.GT.MAXLINE.OR.WRTHDR.GT.0) THEN
            IF (WRTHDR.EQ.0) THEN
               WRITE(50,200)LINCHR(7),(LINCHR(2),I5=1,10),(LINCHR(5),
     +                      (LINCHR(2),I2=1,6),I3=1,2),LINCHR(11),
     +                      (LINCHR(2),I4=1,6),(LINCHR(5),(LINCHR(2),
     +                      I7=1,6),I8=1,IDAY1-3),LINCHR(8)
               LINECNT = 3
               IF (FIRSTCALL) THEN
                  WRITE(50,'(1X,8A1)') SETNRM
                  FIRSTCALL = .FALSE.
               ELSE
                  WRITE(50,'(1X,9A1)') PAGEFD,SETNRM
               END IF
               WRITE(50,'(A150)') NXTPG
               DO 300 I1 = 1,PRTCNT+1
                  WRITE(50,'(A96,A31)') (PG2LIN(J,I1),J=1,2)
                  LINECNT = LINECNT + 1
  300          CONTINUE 
               WRITE(50,200) LINCHR(7),(LINCHR(2),I5=1,10)
     +            ,(LINCHR(5),(LINCHR(2),I7=1,6),I8=1,IDAY3)
     +            ,LINCHR(5),(LINCHR(2),I6=1,8),LINCHR(8)
            END IF
C
C      WRITE THE HEADER LINES FOR THE NEW PAGE (PAGE 1)
C
            PREVSTN = 'XXXXXXX'
            DO 350 K = 32,1,-1
               IF (TITLE(2)(K:K).NE.' ') THEN
                  KLEN = K + 2
                  GO TO 360
               END IF
  350       CONTINUE
  360       CONTINUE
            HLDTXT = TITLE(2)
            HLDTXT(KLEN:54) = MONYEAR               
            PRTCNT = 5
            IF (WRTHDR.EQ.1) THEN
               LINECNT = LINECNT + 7
               WRITE(50,'(1X,8A1)') SETNRM
               WRITE(50,420) SETNRM,HLDTXT,SETNRM,SETSML
            ELSE
               LINECNT = 7
               IF (FIRSTCALL) THEN
                  WRITE(50,'(1X,8A1)') SETNRM
                  FIRSTCALL = .FALSE.
               ELSE
                  WRITE(50,'(1X,9A1)') PAGEFD,SETNRM
               END IF
               IF (HDFLAG) THEN
                  LINECNT = 7 + NHDLINES
                  IPAGE = IPAGE + 1
                  WRITE(50,220) SETSML,PAGNAM,IPAGE,SETNRM
               END IF
               HDFLAG = .TRUE.
               WRITE(50,HDR1FMT) SETNRM,HLDTXT,SETNRM,SETSML 
            END IF
            WRTHDR = 0
            IF (IDAY1.EQ.15) THEN
               JLINE = 104
            ELSE
               JLINE = 111
            END IF
            WRITE(50,200) LINCHR(3),(LINCHR(2),I5=1,10)
     +         ,LINCHR(6),(LINCHR(2),I7=1,JLINE),LINCHR(4)
            WRITE(50,HDR3FMT) (LINCHR(1),I5=1,2),DTL13,LINCHR(1)
            WRITE(50,HDR4FMT) LINCHR(1),DTL22,LINCHR(9)
     +         ,(LINCHR(2),I5=1,6),(LINCHR(6),(LINCHR(2),I6=1,6)
     +         ,I7=2,IDAY1),LINCHR(10)
            WRITE(50,HDR5FMT) LINCHR(1),(LINCHR(1),IDAY(I)
     +         ,I=1,IDAY1),LINCHR(1)
C
C      WRITE THE HEADER FOR THE SECOND PAGE TO THE HOLD VARIABLE
C
            ISKIP = 5 + (NUMDAYS(MONTH)-28)*2
            WRITE(RPTCNT,'(I2)') ISKIP
            HDR1FMT(17:18) = RPTCNT
            PG2LIN(1,1) = ' '
            IPAGE = IPAGE + 1
            WRITE(NXTPG,220) SETSML,PAGNAM,IPAGE,SETNRM
            WRITE(NXTPG1,HDR1FMT) SETNRM,HLDTXT,SETNRM,SETSML 
            PG2LIN(1,2) = NXTPG1
            IF (IDAY1.EQ.15) THEN
               HDR1FMT(17:18) = ' 4'
            ELSE
               HDR1FMT(17:18) = '10'
            END IF
            IDAY3 = NUMDAYS(MONTH) - IDAY1
            IDAY2 = NUMDAYS(MONTH) - (IDAY1 + 12)
            WRITE(RPTCNT,'(I1)') IDAY2
            HDR2FMT(5:5)  = RPTCNT
            HD232FMT(2:2) = RPTCNT
            HD242FMT(2:2) = RPTCNT
            HD252FMT(2:2) = RPTCNT
            VAL22FMT(2:2) = RPTCNT
            WRITE(NXTPG1,200) LINCHR(3),(LINCHR(2),I5=1,10),LINCHR(6)
     +         ,(LINCHR(2),I7=1,84)       
            WRITE(NXTPG2,410) (LINCHR(2),(LINCHR(2),I5=1,6),I6=1,IDAY2)
     +         ,LINCHR(6),(LINCHR(2),I7=1,8),LINCHR(4)  
            PG2LIN(1,3) = NXTPG1
            PG2LIN(2,3) = NXTPG2
            WRITE(NXTPG1,HD231FMT) (LINCHR(1),I5=1,2),DTL13      
            WRITE(NXTPG2,HD232FMT) LINCHR(1),DTL14,LINCHR(1)
            PG2LIN(1,4) = NXTPG1
            PG2LIN(2,4) = NXTPG2
            WRITE(NXTPG1,HD241FMT) LINCHR(1),DTL22
     +         ,LINCHR(9),(LINCHR(2),I5=1,6),(LINCHR(6)
     +         ,(LINCHR(2),I6=1,6),I7=1,11)       
            WRITE(NXTPG2,HD242FMT) (LINCHR(6),(LINCHR(2),I5=1,6)
     +         ,I6=1,IDAY2),LINCHR(10),DTL24,LINCHR(1)       
            PG2LIN(1,5) = NXTPG1
            PG2LIN(2,5) = NXTPG2
            WRITE(NXTPG1,HD251FMT) LINCHR(1),(LINCHR(1)
     +          ,IDAY(I),I=IDAY1+1,IDAY1+12)
            WRITE(NXTPG2,HD252FMT) (LINCHR(1),IDAY(I)
     +          ,I=IDAY1+13,NUMDAYS(MONTH)),LINCHR(1),DTL25,LINCHR(1)
            PG2LIN(1,6) = NXTPG1
            PG2LIN(2,6) = NXTPG2
         END IF 
C
C      IF NEW STATION PRINT SEPARATOR LINE AND FIND STATION INFORMATION
C
         IF (STNID.NE.PREVSTN) THEN
            LINECNT = LINECNT + 1
            PRTCNT = PRTCNT + 1
            WRITE(50,200) LINCHR(9),(LINCHR(2),I6=1,10),
     +           (LINCHR(5),(LINCHR(2),I2=1,6),I3=1,2),(LINCHR(11),
     +           (LINCHR(2),I3=1,6),I8=1,IDAY1-2),LINCHR(10)
            WRITE(NXTPG1,200) LINCHR(9),(LINCHR(2),I6=1,10),
     +           (LINCHR(5),(LINCHR(2),I2=1,6),I3=1,2),
     +           (LINCHR(11),(LINCHR(2),I7=1,6),I8=1,10)
            WRITE(NXTPG2,410) (LINCHR(11),(LINCHR(2),I5=1,6),I6=1,IDAY2)
     +          ,LINCHR(11),(LINCHR(2),I7=1,8),LINCHR(10) 
            PG2LIN(1,PRTCNT+1) = NXTPG1
            PG2LIN(2,PRTCNT+1) = NXTPG2
C
            PREVSTN = STNID
            RYEAR = YEAR
            RMONTH = MONTH
            RDATE = RYEAR*10000. + RMONTH*100. + 1.
            SRCHDATE = INT4(RDATE)
            CALL RDGEOG(STNID,SRCHDATE,STNABRV,DISTRICT,LAT,LON
     +                    ,ELEV,RTNCODE)
            IF (DETAIL.EQ.2) THEN
               WRITE(60) STNID,STNABRV,DISTRICT,LAT,LON,ELEV
               STNCNT = STNCNT + 1
            END IF 
            PRTNAM = STNABRV
         ELSE
            PRTNAM = '   '
         END IF
C
C     COMPUTE THE MONTHLY MEAN/TOTAL FOR THIS ELEMENT
C         
         TOTAL = 0.0
         ITOTAL = 0
         I4 = RELELEM(IELEM)
         DO 440 I3 = 1,NUMDAYS(MONTH)
            PRTVAL(I3) = '  -   '
            IF (VALUE(I3).NE.-99999.) THEN
               TOTAL = TOTAL + VALUE(I3)
               ITOTAL = ITOTAL + 1 
               IF (FRMAT2(2:2).EQ.'F') THEN
                  WRITE(PRTVAL(I3),FRMAT2) VALUE(I3)
               ELSE
                  IVAL = NINT(VALUE(I3))
                  WRITE(PRTVAL(I3),FRMAT2) IVAL
               END IF
            END IF
  440    CONTINUE
         IF (IELEM.EQ.005.OR.IELEM.EQ.49.OR.IELEM.EQ.50) THEN
            DO 460 I3 = 1,NUMDAYS(MONTH)
               IF (VALUE(I3).EQ.0.0) THEN
                  PRTVAL(I3) = '      '
               END IF
  460       CONTINUE
         END IF
C
C    IF NOT TOO MANY DAYS MISSING COMPUTE THE SUMMARY AND FORMAT THE
C    RESULT FOR PRINTING
C
         IMISS = NUMDAYS(MONTH) - ITOTAL
         IF (IMISS.GE.9) THEN
            PMEAN = '   -   '
            PTYPE = ' '
         ELSE
            IF (SUMTYPE.EQ.'T') THEN
               PTYPE = 'T'
            ELSE
               PTYPE = ' '
               TOTAL = TOTAL / FLOAT(ITOTAL)
            END IF
            IF (FRMAT1(2:2).EQ.'F') THEN
               WRITE(PMEAN,FRMAT1) TOTAL
            ELSE
               NTOTAL = NINT(TOTAL)
               WRITE(PMEAN,FRMAT1) NTOTAL
            END IF   
         END IF 
         LINECNT = LINECNT + 1
         IF (PRTNAM.NE.'  ') THEN
            PRTCNT = PRTCNT + 1
            WRITE(50,VAL0FMT)LINCHR(1),PRTNAM,LINCHR(1),
     +                    (LINCHR(1),I2=1,IDAY1-2)
            WRITE(NXTPG0,'(1X,A1,A24,A1,10(6X,A1))')LINCHR(1),PRTNAM,
     +                   LINCHR(1),(LINCHR(1),I2=1,10)
            WRITE(NXTPG10,HDR2FMT)LINCHR(1),(LINCHR(1),I2=1,IDAY2),
     +                   LINCHR(1)
            PG2LIN(1,PRTCNT+1) = NXTPG0
            PG2LIN(2,PRTCNT+1) = NXTPG10
         END IF
         PRTCNT = PRTCNT + 1
         WRITE(50,VAL1FMT) LINCHR(1),ELEMABRV(I4)
     +      ,(LINCHR(1),PRTVAL(I3),I3=1,IDAY1),LINCHR(1)
         WRITE(NXTPG1,VAL21FMT) LINCHR(1),ELEMABRV(I4)
     +      ,(LINCHR(1),PRTVAL(I3),I3=IDAY1+1,IDAY1+12)
         WRITE(NXTPG2,VAL22FMT) (LINCHR(1),PRTVAL(I3)
     +      ,I3=IDAY1+13,NUMDAYS(MONTH)),LINCHR(1),PMEAN,PTYPE,LINCHR(1)
         PG2LIN(1,PRTCNT+1) = NXTPG1
         PG2LIN(2,PRTCNT+1) = NXTPG2
  500 CONTINUE
  501 CONTINUE
      IF (RECCOUNT.EQ.0) THEN
         CALL WRTMSG(5,548,12,1,1,' ',0)
         CALL LOCATE(22,0,IERR)
         STOP ' '
      END IF
C
C   END OF DATA - WRITE LAST LINE OF PAGE 1 AND ALL OF DATA PAGE 2
C
      WRITE(50,200) LINCHR(7),(LINCHR(2),I5=1,10),
     +   (LINCHR(5),(LINCHR(2),I7=1,6),I8=1,IDAY1),LINCHR(8)  
      LINECNT = LINECNT + 1
      IF (PRTCNT.GT.MAXLINE/2.OR.PRTCNT+LINECNT+2.GT.MAXLINE)THEN
         WRITE(50,'(1X,9A1)') PAGEFD,SETNRM
         WRITE(50,'(A150)') NXTPG
         WRITE(50,'(A96,A31)') (PG2LIN(J,1),J=1,2)
         WRITE(50,'(A96,A31)') (PG2LIN(J,2),J=1,2)
      ELSE
         IPAGE = IPAGE - 1
         WRITE(NXTPG1,'(1X,16A1)') SETNRM,SETSML
         WRITE(50,'(80X)')
      END IF
      DO 600 I1 = 3,PRTCNT+1
         WRITE(50,'(A96,A31)') (PG2LIN(J,I1),J=1,2)
         LINECNT = LINECNT + 1
  600 CONTINUE 
      WRITE(50,'(1X,140A1)') LINCHR(7),(LINCHR(2),I5=1,10),
     +   (LINCHR(5),(LINCHR(2),I7=1,6),I8=1,IDAY3)
     +   ,LINCHR(5),(LINCHR(2),I9=1,8),LINCHR(8)  
      LINECNT = LINECNT + 1
      RETURN
C
C   FORMAT STATEMENTS
C
  200 FORMAT(1X,132A1) 
  220 FORMAT(1X,8A1,112X,A6,1X,I2,8A1,//)
  420 FORMAT(//,4X,8A1,8X,A52,10X,16A1)
  410 FORMAT(36A1)
      END

***********************************************************************
$PAGE
      SUBROUTINE SETELEM(IELEM,NUMELEM,RELELEM,ELEM,ELEMABRV,ELEMNAME
     +                  ,ELEMUNITS,SMYFMT,VALFMT,AVGCHR,AVGTOT,RTNFLG)
C
C   ROUTINE TO LOOKUP ELEMENT DEFINITION INFORMATION FOR ELEMENT IELEM      
C  
C  ELEMENT DEFINITION VARIABLES
C
      PARAMETER (MAXELEM=65)
C
      INTEGER*2 ELEM(MAXELEM),RELELEM(1000)
      CHARACTER*1 AVGCHR,AVGTOT(MAXELEM),RTNFLG
      CHARACTER*3 RDELEM
      CHARACTER*4 SMYFMT(MAXELEM),VALFMT(MAXELEM)
      CHARACTER*6 ELEMABRV(MAXELEM)
      CHARACTER*16 ELEMNAME(MAXELEM)
      CHARACTER*20 ELEMUNITS(MAXELEM)
      CHARACTER*60 ELEMDEF
      REAL SCALE
C
      RTNFLG = '0'
C
C     MAKE SURE THE NUMELEM WILL NOT EXCEED THE ARRAY
C      
      IF (NUMELEM.GE.MAXELEM) THEN
         RTNFLG = '2'
         RETURN
      END IF
C
      NUMELEM = NUMELEM + 1
      RELELEM(IELEM) = NUMELEM
      READ(30,REC=IELEM) RDELEM,ELEMNAME(NUMELEM)
     +    ,ELEMABRV(NUMELEM),ELEMDEF,ELEMUNITS(NUMELEM)
     +    ,SCALE
      ELEM(NUMELEM) = IELEM
C
C     SET THE SUMMARY TYPE THE DEFAULT VALUE OR TO THE VALUE 
C     GIVEN IN THE PRM FILE (PASSED AS AVGCHR)
C
      IF (AVGCHR.EQ.'A'.OR.AVGCHR.EQ.'T') THEN
         AVGTOT(NUMELEM) = AVGCHR
      ELSE
         IF (IELEM.EQ.005.OR.IELEM.EQ.49.OR.(IELEM.GE.23.AND.IELEM
     +        .LE.28.OR.IELEM.EQ.18.OR.IELEM.EQ.57)) THEN
            AVGTOT(NUMELEM) = 'T'
         ELSE
            AVGTOT(NUMELEM) = 'A'
         END IF
      END IF
C
C   SET THE PRINT FORMAT TO MATCH THE SCALE FACTOR AND SUMMARY TYPE
C   FOR THIS ELEMENT
C
      IF (SCALE.GE.1.0) THEN
         VALFMT(NUMELEM) = 'I6  '
         IF (AVGTOT(NUMELEM).EQ.'T') THEN
            SMYFMT(NUMELEM) = 'I7  '
         ELSE
            SMYFMT(NUMELEM) = 'F7.1'
         END IF
      ELSE IF (SCALE.EQ.0.1) THEN
         VALFMT(NUMELEM) = 'F6.1'
         IF (AVGTOT(NUMELEM).EQ.'T') THEN
            SMYFMT(NUMELEM) = 'F7.1'
         ELSE
            SMYFMT(NUMELEM) = 'F7.2'
         END IF
      ELSE IF (SCALE.EQ.0.01) THEN
         VALFMT(NUMELEM) = 'F6.2'
         IF (AVGTOT(NUMELEM).EQ.'T') THEN
            SMYFMT(NUMELEM) = 'F7.2'
         ELSE
            SMYFMT(NUMELEM) = 'F7.3'
         END IF
      ELSE IF (SCALE.EQ.0.001) THEN
         VALFMT(NUMELEM) = 'F6.3'
         IF (AVGTOT(NUMELEM).EQ.'T') THEN
            SMYFMT(NUMELEM) = 'F7.3'
         ELSE
            SMYFMT(NUMELEM) = 'F7.4'
         END IF
      ELSE
         VALFMT(NUMELEM) = 'F6.1'
         SMYFMT(NUMELEM) = 'F7.1'
      END IF
      RETURN
      END

