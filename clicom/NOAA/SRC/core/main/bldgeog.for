 
      PROGRAM BLDGEOG
C
C    THIS PROGRAM READS DATAEASE STN GEOGRAPHY RECORDS
C       AND WRITES THE INFORMATION TO A DIRECT FILE FOR USE BY
C       THE CLICOM QC ROUTINES.
C       THE INPUT DATA IS READ AS AN UNFORMATTED BINARY FILE,
C       READING ALL INPUT INTO THE CHARACTER ARRAY INREC.  THE 
C       VARIABLES WITHIN THE RECORD ARE EQUIVALENCED TO THE 
C       APPROPRIATE POSITION WITHIN INREC.
C
      CHARACTER*78 MSGLN1,MSGLN2,MSGLN3
      CHARACTER*32 INFILE, OUTFIL
      CHARACTER*20 DISTRICT,DISTDEF(99)
      CHARACTER*16 SRTKEY,DDISK
      CHARACTER*22 FILNAME
      CHARACTER*8 STNID,INBDATE,INEDATE
      CHARACTER*4 INELEV,CHRELEV
      CHARACTER*2 RDISK
      PARAMETER (LRSTNG=433)
      CHARACTER*1 INREC(LRSTNG)
     +           ,STNABRV(24),INDIST,LON(7),LAT(6),NULL
     +           ,LATNS,LONEW,RTNCODE
      INTEGER*2 HEADER(8),IDIST
      INTEGER*4 BDATE,EDATE,NUMREC,I1,NCOUNT
      REAL ELEV
C
C    EQUIVALENCE THE INPUT VARIABLES TO THE INPUT RECORD STRING
C
      EQUIVALENCE (HEADER,INREC(1)),  (STNID,INREC(6)),
     +            (INBDATE,INREC(31)),(INEDATE,INREC(39)),
     +            (STNABRV,INREC(95)),(INDIST,INREC(119)),
     +            (LAT,INREC(160)), (LATNS,INREC(166)),
     +            (LON,INREC(167)), (LONEW,INREC(174)),
     +            (INELEV,INREC(175)) 
      EQUIVALENCE (CHRELEV,ELEV)
C
      DATA DISTDEF/99*'    '/

      NULL = CHAR(0)   
C
      CALL GETMSG(204,MSGLN1)
      CALL GETMSG(208,MSGLN2)
      CALL GETMSG(209,MSGLN3)
      CALL GETMSG(999,MSGLN3)
      WRITE(*,*) MSGLN1
      WRITE(*,*) MSGLN2
      WRITE(*,*) ' ' 
C
C   FIND THE NAME OF THE DATAEASE STN GEOGRAPHY FILE
C
      CALL FNDFIL('STN GEOGRAPHY           ',FILNAME,NUMREC)
      IF (FILNAME.EQ.'      ') THEN
         STOP
      END IF
      LEND = 16
      CALL GETDSC(RDISK,DDISK,LEND)
      INFILE(1:LEND) = DDISK
      ILEN = LEND + 13
      INFILE(LEND+1:LEND+1) = '\'
      INFILE(LEND+2:ILEN) = FILNAME(3:14)
C
C   FIND THE DEFINITION OF THE DISTRICT CODES
C
      CALL GETDIST(DISTDEF,FILNAME,RTNCODE)
      IF (RTNCODE.NE.'0') THEN
         STOP ' '
      END IF
C
C   SORT THE STN GEOGRAPHY FILE BY STATION ID AND END DATE
c
      CALL COLOAD      
      SRTKEY = '2,A,6,8,A,39,8'
      OUTFIL = '  \DATA\TMP1.TMP'
      OUTFIL(1:2) = RDISK
      OPEN (63,FILE=OUTFIL,STATUS='UNKNOWN',FORM='BINARY',IOSTAT=IOCHK)
      IF (IOCHK.NE.0) THEN
         CALL OPENMSG(OUTFIL,'BLDGEOG     ',IOCHK)
         STOP ' '
      ELSE
         CLOSE(63)
      END IF
      IF (NUMREC.GT.0) THEN
         CALL SORT (INFILE,ILEN,OUTFIL,16,LRSTNG,SRTKEY)
      END IF
C
      WRITE(*,*) MSGLN3 
C
C   READ AND DECODE THE STN GEOGRAPHY RECORDS
C
   20 CONTINUE
      OPEN(26,FILE=OUTFIL,STATUS='OLD',FORM='BINARY',IOSTAT=IOCHK)
      IF(IOCHK.NE.0) THEN
         CALL OPENMSG(OUTFIL,'BLDGEOG    ',IOCHK)
         GO TO 20
      ENDIF       
C      
      OPEN(35,FILE='P:\DATA\STNGEOG.INF',STATUS='OLD',
     +        ACCESS='DIRECT',RECL=80,IOSTAT=IOCHK)
      IF (IOCHK.EQ.0) THEN
C          .. DELETE FILE IF IT EXISTS
         CLOSE(35,STATUS='DELETE')
      ELSE IF (IOCHK.NE.6416) THEN
C          .. EXIT PROGRAM IS ERROR IS ANYTHING EXCEPT 'FILE NOT FOUND'
         CALL OPENMSG('P:\DATA\STNGEOG.INF','BLDGEOG     ',IOCHK)
         STOP ' '
      END IF
C       .. START WITH AN EMPTY FILE      
      OPEN(35,FILE='P:\DATA\STNGEOG.INF',STATUS='NEW',
     +        ACCESS='DIRECT',RECL=80)
      NCOUNT = 0
      DO 200 I1 = 2,999999
   40    CONTINUE
         READ(26,END=300) INREC
         IF (HEADER(1).EQ.13 .OR. HEADER(1).EQ.15) GO TO 40
         READ(INBDATE,'(I8)',ERR=50) BDATE
         GO TO 60
   50    BDATE = -9999
   60    CONTINUE 
         READ(INEDATE,'(I8)',ERR=70) EDATE
         GO TO 80
   70    EDATE = -9999
   80    CONTINUE
         IDIST = ICHAR(INDIST)
         DISTRICT = DISTDEF(IDIST)
         ILATNS = ICHAR(LATNS)
         ILONEW = ICHAR(LONEW)
         IF (ILATNS.EQ.1) THEN
             LATNS = 'N'
         ELSE IF (ILATNS.EQ.2) THEN
             LATNS = 'S'
         ELSE
             LATNS = ' '
         END IF
         IF (ILONEW.EQ.1) THEN
             LONEW = 'E'
         ELSE IF (ILONEW.EQ.2) THEN
             LONEW = 'W'
         ELSE
             LONEW = ' '
         END IF
         CHRELEV = INELEV
C
         DO 150 I2 = 1,8
            IF (STNID(I2:I2).EQ.NULL) THEN
               STNID(I2:I2) = ' '
            END IF
  150    CONTINUE
         DO 160 I2 = 1,24
            IF (STNABRV(I2).EQ.NULL) THEN
               STNABRV(I2) = ' '
            END IF
  160    CONTINUE
         DO 180 I2 = 1,6
            IF (LAT(I2).EQ.NULL) THEN
               LAT(I2) = ' '
            END IF
  180    CONTINUE
         DO 190  I2 = 1,7
            IF (LON(I2).EQ.NULL) THEN
               LON(I2) = ' '
            END IF
  190    CONTINUE 
         NCOUNT = NCOUNT + 1
         WRITE(35,REC=I1) STNID,BDATE,EDATE,STNABRV,DISTRICT,LAT,
     +                    LATNS,LON,LONEW,ELEV
  200 CONTINUE
  300 CONTINUE
      WRITE(35,REC=1) NCOUNT 
      CLOSE(26,STATUS='DELETE')
      CLOSE(35)
      WRITE(*,350) NCOUNT
  350 FORMAT(/,I5,' Station Geography Records written',//)
      STOP ' '
      END
$PAGE         
***********************************************************************

      SUBROUTINE GETDIST(DISTDEF,FILNAME,RTNCODE)
C
C   SUBROUTINE TO READ THE FORM DEFINITION FILE OF THE ST GEOGRAPHY
C        FORM TO DETERMINE THE VALUES OF THE CHOICE FIELD
C        "DISTRICT-NAMES"
C
      CHARACTER*22 ERRFILE
      CHARACTER*20 DISTDEF(99)
      CHARACTER*14 DISTNAMES
      CHARACTER*22 FILNAME
      CHARACTER*1 NULL,INCHAR,RTNCODE
C
      DATA DISTNAMES/'DISTRICT-NAMES'/
      NULL = CHAR(0)
      RTNCODE = '0'

      FILNAME(14:14) = 'A'
   20 CONTINUE
      OPEN (24,FILE=FILNAME,STATUS='OLD',FORM='BINARY',
     +   IOSTAT=IOCHK)
      IF(IOCHK.NE.0) THEN
         ERRFILE = FILNAME
         CALL OPENMSG(ERRFILE,'BLDGEOG    ',IOCHK)
         GO TO 20
      ENDIF       
C
C   FIRST FIND THE BEGINNING OF THE DISTRICT-NAMES CHOICE DEFINITIONS
C
      DO 100 I=1,9999
         READ(24,END=400) INCHAR
         IF (INCHAR.EQ.'D') THEN
            DO 50 I1 = 2,14
               READ(24,END=400) INCHAR
               IF (INCHAR.NE.DISTNAMES(I1:I1)) THEN
                  GO TO 100
               END IF
   50       CONTINUE
            GO TO 110
         END IF
  100 CONTINUE
      CALL WRTMSG(4,50,12,1,1,' ',0)
      RTNCODE = '1'
      GO TO 600
  110 CONTINUE
C
C  THE DEFINITIONS HAVE BEEN FOUND - FIND OUT HOW MANY THERE ARE
C
      CALL RDDEFS(24,'DISTRICT-NAMES',DISTDEF,RTNCODE)
      GO TO 600
C
C   GET HERE IF AN UNEXPECTED EOF IS READ
C
  400 CONTINUE
      CALL WRTMSG(4,92,12,1,1,' ',0) 
      RTNCODE = '1'
C
C    DONE - CLOSE FILE AND RETURN
C
  600 CONTINUE
      CLOSE(24)
      RETURN
      END
