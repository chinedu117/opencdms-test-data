$STORAGE:2
C     PROGRAM CHKSORT
C
C       ** THIS PROGRAM DETERMINES WHETHER COSORT COMPLETED ITS
C          SORT SUCCESSFULLY BY COMPARING THE TIME THAT THE SORTED
C          OUTPUT FILE WAS WRITTEN BY COSORT TO THE TIME THE TEMPORARY 
C          INPUT FILE CONTAINING COSORT DIRECTIVES WAS WRITTEN.  IF THE
C          OUTPUT FILE HAS AN EARLIER DATE/TIME THAN THE INPUT FILE, 
C          THEN IT IS ASSUMED THAT AN ERROR OCCURRED DURING THE SORT.  
C          
C          THIS PROGRAM IS CALLED FROM THE FOLLOWING BATCH FILES:
C
C          BATCH FILE   DATATYPE   INPUT FILE     OUTPUT FILE 
C          ----------   --------   ------------   --------------------
C          SORT2        ALL 8          SORT.TMP   xxxxAAAx.DBM (DEASE) 
C          MRG-ARC2     ALL 8      MERGESEL.TMP   xxxxAAAx.DBM (DEASE)
C          DATAPRD2     NML          NORMAL.TMP   CLIMDATA.DAT
C 
C          THE 8 DATATYPES INCLUDE:  MLY, 10D, DLY, SYN, HLY, 15M, U-A, NML
C
C          EXCEPTION:  THE FILE, NORMAL.TMP, IS NOT AN INPUT FILE TO
C                      COSORT.  IT IS WRITTEN ONLY FOR THE PURPOSE OF
C                      COMPARING ITS TIME TO THAT OF THE OUTPUT FILE
C                      THAT IS CREATED FOR NORMALS, CLIMDATA.DAT.
C
C       ** NOTE:  THE DATA-TYPE CODE (DLY,HLY...) AND THE NAME 
C                 OF THE FILE USED FOR PRE-SORT TIME MUST BE INCLUDED 
C                 ON THE COMMAND LINE CALLING THIS ROUTINE
C                 EXAMPLE: "CHKSORT DLY MERGESEL"
C
      INTERFACE TO SUBROUTINE CMDLIN(ADDRES,LENGTH,RESULT)
      INTEGER*4 ADDRES[VALUE],LENGTH[VALUE]
      CHARACTER*1 RESULT
      END
      INTERFACE TO INTEGER*2 FUNCTION SYSTEM [C]
     +        (STRING[REFERENCE])
      CHARACTER*1 STRING
      END

C----------------------------------------------------------------------
C
      PROGRAM CHKSORT
C
      CHARACTER*64 RESULT
      INTEGER*4 PSP,PSPNCHR,OFFSET
C
      PARAMETER (NTYPD=8)
      CHARACTER*24 TBLFRMNAM(NTYPD)
      CHARACTER*3  TBLRECTYP(NTYPD)
C
      CHARACTER*30 MSG
      CHARACTER*22 BEFFIL,AFTFIL
      CHARACTER*14 NMLFIL
      CHARACTER*8 BEFNAM,TBLBEFNAM(3)
      CHARACTER*3 RECTYPE
      INTEGER*2 MATCH,EFLAG
C
C   FOLLOWING STATEMENT REQUIRED FOR FORTRAN 3.3 - NOT ALLOWED IN FTN 4
C      EXTERNAL CHKSORT
C
C
      DATA TBLRECTYP/'MLY','10D','DLY','SYN','HLY','15M','U-A','NML'/
      DATA TBLFRMNAM/ 
     +           'MONTHLY DATA'  ,'TEN DAY DATA','DAILY DATA',
     +           'SYNOPTIC DATA' ,'HOURLY DATA' ,'FIFTEEN MINUTE DATA',
     +           'UPPER-AIR DATA','NORMALS'/
      DATA TBLBEFNAM /'SORT', 'MERGESEL','NORMAL'/
      DATA NMLFIL /'Q:CLIMDATA.DAT'/
C
C   LOCATE SEGMENTED ADDRESS OF THE BEGINNING OF THIS PROGRAM
C
      OFFSET = #00100000
      PSP = LOCFAR(CHKSORT)
C
C   COMPUTE THE BEGINNING OF THE PROGRAM SEGMENT PREFIX (PSP)
C
      PSP = (PSP - MOD(PSP,#10000)) - OFFSET 
C
C   LOCATE POSITION OF COMMAND PARAMTERS WITHIN THE PSP
C
      PSPNCHR = PSP + #80
      PSP = PSP + #81
C
C   PASS THE ADDRESS OF THE COMMAND PARAMTERS TO CMDLIN WHICH DECODES
C      THE COMMAND AND RETURNS IT AS RESULT.
C
      CALL CMDLIN(PSP,PSPNCHR,RESULT)
C
C   PULL THE COMMAND (REC-TYPE AND TEMPORARY FILE NAME) OUT OF THE RESULT
C   VALUES FOR THE TEMPORARY FILE NAME INCLUDE:  SORT, MERGESEL, NORMAL
C
      RECTYPE = RESULT(1:3)
      IF (RECTYPE.EQ.' ') GO TO 999
      DO 10 I=4,57
         IF (RESULT(I:I) .NE. ' ') THEN
            BEFNAM = RESULT(I:I+7)
            GO TO 15
         ENDIF
   10 CONTINUE
   15 CONTINUE
C
C
C       ** CONVERT LOWERCASE LETTERS TO UPPERCASE LETTERS
C
      CALL LOW2UP(RECTYPE)
      CALL LOW2UP(BEFNAM)
C
C       ** FIND THE RELATIVE NUMBER OF THE DATATYPE WANTED -- USED AS AN INDEX
C          TO THE DATAEASE FORM NAME 
C
      DO 25 I = 1,NTYPD
         IF (RECTYPE.EQ.TBLRECTYP(I)) THEN
            ITYP = I
            GO TO 30
         END IF
   25 CONTINUE
C       .. INVALID DATATYPE SPECIFIED
      GO TO 900
   30 CONTINUE
C
C       ** CHECK FOR VALID INPUT FILE NAMES
C
      DO 40 I=1,3
         IF (BEFNAM.EQ.TBLBEFNAM(I)) GO TO 45
   40 CONTINUE
      GO TO 903
   45 CONTINUE            
C       .. INPUT FILE NAME, NORMAL, IS ONLY ALLOWED FOR DATATYPE NML  
      IF (BEFNAM.EQ.TBLBEFNAM(3)(1:6) .AND. 
     +    RECTYPE.NE.TBLRECTYP(8)) GO TO 900
C
C       ** GET OUTPUT FILE NAME
C
      IF (BEFNAM.EQ.TBLBEFNAM(3)(1:6)) THEN
C           .. CALLING PROGRAM IS DATAPRD2.  OUTPUT FILE NAME IS
C              CLIMDATA.DAT      
          AFTFIL = NMLFIL
      ELSE
C           .. CALLING PROGRAM IS SORT2 OR MRG-ARC2.  OUTPUT FILE NAME
C              IS THE FILE NAME ASSOCIATED WITH THE DATAEASE FORM NAME
          CALL FNDFIL(TBLFRMNAM(ITYP),AFTFIL,NUMREC)
          IF (AFTFIL.EQ.' ') THEN
             GO TO 999
          END IF
      END IF
      LGTH = LNG(AFTFIL)
      LGTH = LGTH+1
      AFTFIL(LGTH:LGTH) = CHAR(0)
C
C       ** ASSEMBLE THE NAME OF THE TEMPORARY FILE WRITTEN AS INPUT TO COSORT
C
      BEFFIL = '\COSORT\'//BEFNAM
      LGTH = LNG(BEFFIL)
      BEFFIL(LGTH+1:) = '.TMP'
      LGTH = LNG(BEFFIL)
      LGTH = LGTH+1
      BEFFIL(LGTH:LGTH) = CHAR(0)      
C      
C       ** COMPARE THE DATE/TIME OF THE INPUT AND OUTPUT FILES
C
      MATCH = 0
      OPEN(61,FILE=BEFFIL,STATUS='OLD',IOSTAT=IOCHK)
      IF (IOCHK.EQ.0) THEN
         CLOSE (61)
         CALL MATFIL(BEFFIL,AFTFIL,MATCH,EFLAG)
      ELSE
C          .. ERROR OPENING TEMPORARY FILE
         GO TO 901
      ENDIF
      IF (MATCH.EQ.0) THEN
C          .. COSORT DID NOT WRITE SORTED OUTPUT FILE      
         GO TO 902
      END IF 
C
C       ** NORMAL END --- COSORT COMPLETED SORT AND WROTE SORTED FILE
C
      STOP ' '
C
C       ** ERROR PROCESSING
C
C       .. INVALID DATATYPE SPECIFIED
  900 CONTINUE
      NMSG = 175
      MSG  = RECTYPE(1:3)
      LGTH = 3
      GO TO 998
C      
C       .. ERROR OPENING TEMPORARY FILE         
  901 CONTINUE
      NMSG = 157
      LGTH = LNG(BEFFIL)
      WRITE(MSG,500) BEFFIL(1:LGTH),IOCHK
  500 FORMAT(A,'  ',I4.4)
      LGTH = LNG(MSG)
      GO TO 998
C      
C       .. COSORT DID NOT WRITE SORTED OUTPUT FILE
  902 CONTINUE
      NMSG = 163
      MSG = AFTFIL
      LGTH = LNG(MSG)
      GO TO 998
C
C       .. INVALID DATATYPE SPECIFIED
  903 CONTINUE
      NMSG = 304
      MSG  = BEFNAM
      LGTH = LNG(MSG)
      GO TO 998
C      
C       .. WRITE ERROR MESSAGE, THEN STOP
  998 CONTINUE
      CALL WRTMSG(1,NMSG,12,1,0,MSG,LGTH)
      PRINT *
C       .. ERROR STOP, NO MESSAGE:  CMDLIN -- NO COMMAND GIVEN
C                                   FNDFIL -- FILE NOT FOUND FOR DATAEASE FORM
  999 CONTINUE
      STOP 2
      END      
