$STORAGE:2
      SUBROUTINE TXTLOC(STRING,XNWPOS,YNWPOS,THGT,ASP,IFONT,PATH,COLOR,
     +                  LIMITS)
C------------------------------------------------------------------------------
C     ROUTINE TO MOVE A TEXT STRING AROUND THE SCREEN USING THE CUSOR OR
C     MOUSE.  LOCATION IS INDICATED WITH A BOX ON THE SCREEN.
C
C     INPUT ARGUMENTS:
C
C     STRING        CHAR      TEXT STRING TO BE MODIFIED
C     XNWPOS,YNWPOS REAL      CURRENT POSITION OF TEXT STRING (BOTTOM-CENTER
C                             IN NORMALIZED WORLD COORDINATES)
C     THGT          REAL      CURRENT TEXT HEIGHT (NWC)
C     ASP           REAL      CURRENT TEXT ASPECT RATIO
C     IFONT         INT2      CURRENT TEXT FONT
C     PATH          INT2      CURRENT TEXT PATH
C     COLOR         INT2      CURRENT TEXT COLOR
C     LIMITS        INT2      FLAG TO CONTROL TEXT POSITION: 
C                             0 = NO CHECKS
C                             1 = LEFT AND RIGHT SIDE EDGE CHECK
C                             2 = TOP AND BOTTOM EDGE CHECK
C                             3 = BOTH CHECKS 1 AND 2
C     OUTPUT ARGUMENTS:
C
C     XNWPOS,YNWPOS REAL      NEW POSITION OF TEXT STRING (BOTTOM-CENTER, NWC) 
C------------------------------------------------------------------------------
C
C       ** LOCAL COMMON TO SAVE SPACE IN D-GROUP
C
      INTEGER*2     BGCOLOR,COLOR,IXOR,PATH,IXX,IYX,IFUNC,IERR
      REAL          HEIGHT,INHEIGHT,INWID,OFFSET,XPREV,YPREV,X1BAR,
     +              Y1BAR,X2BAR,Y2BAR,XPOS,YPOS,XTPOS,YTPOS,XWPOS,YWPOS,
     +              XN,YN,XX,YX
      LOGICAL       ONSCREEN
      CHARACTER*1   RTNCODE
      CHARACTER*2   INCHAR
      CHARACTER*(*) STRING
      COMMON /TXLOSV/ HEIGHT,INHEIGHT,INWID,OFFSET,XPREV,YPREV,
     +                X1BAR,Y1BAR,X2BAR,Y2BAR,XPOS,YPOS,XTPOS,
     +                YTPOS,XWPOS,YWPOS,XN,YN,XX,YX,BGCOLOR,IXOR,
     +                IXX,IYX,IFUNC,IERR,ONSCREEN,INCHAR
C
C   CONVERT FROM NORMALIZED TO WORLD COORDS
C
      CALL YSZNW2W(THGT,DX,HEIGHT)
      CALL NW2W(XNWPOS,YNWPOS,XWPOS,YWPOS)
C
C  SAVE CURRENT BACKGROUND COLOR, AND XOR STATUS AND SET TEXT ATTRIBS.
C
      CALL INQBKN(BGCOLOR)
      CALL INQXOR(IXOR)
C **DEBUG
C      CALL SETCFON(IFONT)
C      CALL SETSTC(COLOR,COLOR)
C      CALL SETSTE(HEIGHT,ASP,PATH)
      IF (PATH.EQ.0 .OR. PATH.EQ.2) THEN
         ANG=0.
      ELSE
         ANG=90.
      ENDIF      
C       .. DEFHST REQUIRES HEIGHT IN NORMALIZED WORLD COORDINATES      
      CALL DEFHST(IFONT,COLOR,ANG,ASP,THGT,TXTHTW)
      CALL SETSTA(ANG)
C **END DEBUG            
      CALL INQSTS(STRING,INHEIGHT,INWID,OFFSET)
C
C     FIND THE ACTUAL WORLD COORDS FOR THE CURRENT VIEWPORT AS SET BY HALO
C     MAPPING ROUTINES. THE MAX VALUE RETURNED BY AN INQWOR IS THE VALUE USED
C     IN THE SETWORLD CALL. ROUND-OFF CAN LEAD TO A DIFFERENT VALUE  7-MAY-91
C
      CALL INQVIE(X1BAR,Y2BAR,X2BAR,Y1BAR)
      CALL MAPNTD(X2BAR,Y2BAR,IXX,IYX)
      CALL MAPDTW(IXX,IYX,XX,YX)
      CALL MAPNTD(X1BAR,Y1BAR,IXX,IYX)
      CALL MAPDTW(IXX,IYX,XN,YN)
C
C   SAVE CURRENT LOCATION AND INITIALIZE RUBBER-BAND BOX
C
      XPREV = XWPOS
      YPREV = YWPOS
      XPOS = XWPOS
      YPOS = YWPOS
      CALL DELHCU( )
      CALL SETCOL(1)
      CALL COMTPOS(XWPOS,YWPOS,INWID,INHEIGHT,PATH,XTPOS,YTPOS
     +    ,X1BAR,Y1BAR,X2BAR,Y2BAR,LIMITS)
      XTSAV = XTPOS
      YTSAV = YTPOS
      CALL RBOX(X1BAR,Y1BAR,X2BAR,Y2BAR)
      CALL INQERR(IFUNC,IERR)
      IF (IERR .EQ. 0) THEN
         ONSCREEN = .TRUE.
      ELSE
         ONSCREEN = .FALSE.
      ENDIF
      CALL ORGLOC(XPOS,YPOS)
C
C   READ LOCATOR POSITION AND EVALUATE CHARACTERS RETURNED.
C   MOVE BOX AS REQUESTED. 
C
  20  CONTINUE
         CALL RDLOC(XPOS,YPOS,INCHAR,RTNCODE)
C
C     IF ENTER(RETURN) HAS BEEN PRESSED, CLEAR BOX CONTAINING THIS
C     TEXT STRING, REWITE IN NEW LOCATION AND RETURN.
C
         IF (INCHAR.EQ.'RE') THEN
            CALL DELBOX
            CALL SETCOL(BGCOLOR)
            CALL SETHAT(1)
            CALL COMTPOS(XWPOS,YWPOS,INWID,INHEIGHT,PATH,XTPOS
     +                  ,YTPOS,X1BAR,Y1BAR,X2BAR,Y2BAR,LIMITS)
            CALL BAR(X1BAR,Y1BAR,X2BAR,Y2BAR)
            CALL SETCOL(1)
            CALL COMTPOS(XPOS,YPOS,INWID,INHEIGHT,PATH,XTPOS
     +                  ,YTPOS,X1BAR,Y1BAR,X2BAR,Y2BAR,LIMITS)
            CALL MOVTCA(XTPOS,YTPOS)
            CALL DELTCU( )
            CALL STEXT(STRING)
            CALL W2NW(XPOS,YPOS,XNWPOS,YNWPOS)
            CALL ORGLOC(XPOS,YPOS)
            RETURN
C
C     IF F4 HAS BEEN PRESSED IGNORE THE MOVE AND RETURN TO THE
C     ORIGINAL LOCATION.
C
         ELSE IF (INCHAR.EQ.'4F' .OR. INCHAR.EQ.'ES') THEN
            CALL DELBOX
            CALL ORGLOC(XWPOS,YWPOS)
            RETURN
         ENDIF
C
C     POSITION HAS CHANGED - REDRAW BOX IN NEW LOCATION.  DO NOT DRAW THE
C     RUBBER BAND BOX IF IT IS NOT ON THE SCREEN.  A CHANGE MADE TO THE TEXT
C     MAY INITIALLY CAUSE THE BOX TO BE OFF THE SCREEN, SO LET THE USER MOVE
C     THE BOX BACK ON TO THE SCREEN BEFORE SETTING THE POSITION CHECKS. 
C
         IF (YPOS.NE.YPREV.OR.XPOS.NE.XPREV) THEN   
            CALL COMTPOS(XPOS,YPOS,INWID,INHEIGHT,PATH,XTPOS
     +                  ,YTPOS,X1BAR,Y1BAR,X2BAR,Y2BAR,LIMITS)
            IF (XTPOS.EQ.XTSAV .AND. YTPOS.EQ.YTSAV) THEN
                XPOS = XPREV
                YPOS = YPREV
                IF (RTNCODE .EQ. '1') THEN
                   CALL ORGLOC(XPOS,YPOS)
                   CALL RDLOC(XPREV,YPREV,INCHAR,RTNCODE)
                ENDIF
                CALL BEEP
                GOTO 70
            ELSE
                XTSAV = XTPOS
                YTSAV = YTPOS
            ENDIF               
            IF((X1BAR.LE.XN .OR. Y1BAR.LE.YN .OR. X2BAR.GE.XX .OR.
     +          Y2BAR.GE.YX).AND.ONSCREEN)  THEN
                XPOS = XPREV
                YPOS = YPREV
                IF (RTNCODE .EQ. '1') THEN
                   CALL ORGLOC(XPOS,YPOS)
                   CALL RDLOC(XPREV,YPREV,INCHAR,RTNCODE)
                ENDIF
                CALL BEEP
            ELSE             
                CALL RBOX(X1BAR,Y1BAR,X2BAR,Y2BAR)
                CALL INQERR(IFUNC,IERR)
                IF (IERR .EQ. 0) THEN
                   ONSCREEN = .TRUE.
                ENDIF
                XPREV = XPOS
                YPREV = YPOS
            ENDIF
   70       CONTINUE
         ENDIF
      GO TO 20
      END
