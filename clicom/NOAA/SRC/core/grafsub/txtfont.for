$STORAGE:2
      SUBROUTINE TXTFONT(STRING,XNWPOS,YNWPOS,THGT,ASP,IFONT,PATH,COLOR,
     +           LIMITS)
C------------------------------------------------------------------------------
C     ROUTINE TO CHANGE THE FONT OF A TEXT STRING BY SELECTING FROM 
C     THE LIST OF SAMPLE FONTS THAT IS DISPLAYED IN A POP-UP WINDOW.
C
C     INPUT ARGUMENTS:
C
C     STRING        CHAR       TEXT STRING TO BE MODIFIED
C     XNWPOS,YNWPOS REAL       POSITION OF TEXT STRING (BOTTOM-CENTER IN 
C                              NORMALIZED WORLD COORDINATES)
C     THGT          REAL       CURRENT TEXT HEIGHT (NWC)
C     ASP           REAL       CURRENT TEXT ASPECT RATIO
C     IFONT         INT2       CURRENT TEXT FONT
C     PATH          INT2       CURRENT TEXT PATH
C     COLOR         INT2       CURRENT TEXT COLOR
C     LIMITS        INT2       FLAG TO CONTROL TEXT POSITION: 
C                              0 = NO CHECKS
C                              1 = LEFT AND RIGHT SIDE EDGE CHECK
C                              2 = TOP AND BOTTOM EDGE CHECK
C     OUTPUT ARGUMENTS:
C
C     IFONT         INT2       NEW TEXT FONT
C------------------------------------------------------------------------------
$INCLUDE: 'GRFPARM.INC'
$INCLUDE: 'GRAFVAR.INC'
C
C       ** LOCAL COMMON TO SAVE SPACE IN D-GROUP
C
      INTEGER       BGCOLOR,COLOR,PATH,SAVFONT
      REAL          HEIGHT,INHEIGHT,INWID,OFFSET,WIDTH,WHEIGHT,X1BAR,
     +              Y1BAR,X2BAR,Y2BAR,XPOS,YPOS,XTPOS,YTPOS,XWIN,YWIN,
     +              XSL,YSL,XSH,YSH
      CHARACTER*1   RTNCODE
      CHARACTER*2   INCHAR
      CHARACTER*(*) STRING
      COMMON /TXFNSV/ HEIGHT,INHEIGHT,INWID,OFFSET,WIDTH,WHEIGHT,
     +                X1BAR,Y1BAR,X2BAR,Y2BAR,XPOS,YPOS,XTPOS,YTPOS,
     +                XWIN,YWIN,XSL,YSL,XSH,YSH,BGCOLOR,SAVFONT,INCHAR
C
C   CONVERT FROM NORMALIZED TO WORLD COORDINATES   
C ** DEBUG -- ARE YOU NOT WORKING IN NORMALIZED WORLD COORDINATES HERE?
C
      CALL INQWOR(XSL,YSL,XSH,YSH)
      CALL SETWOR(0.,0.,1.,1.)
      CALL GETWASP(WASP)
      XPOS    = XNWPOS
      YPOS    = YNWPOS
      WHEIGHT = THGT
      SAVFONT = IFONT
C
C  SET HEIGHT AND WIDTH LIMITS
C
      PLHGT = 1.0
      IF (PATH .EQ. 0) THEN
         PLWIDTH = GANWRT - GANWLF
      ELSE
         PLWIDTH = GANWTP - GANWBT
      ENDIF
C
C  BRING UP FONT SELECTION WINDOW AND ALLOW USER TO PICK A FONT  
C  TRY TO PUT THE WINDOW OUT OF THE WAY OF THE TEXT TO BE CHANGED.
C
      XWIN = XNWPOS
      YWIN = YNWPOS
      IF (XWIN.GT.0.5) THEN
         XWIN = .1
      ELSE
         XWIN = .6
      END IF
      IF (YWIN.GT.0.5) THEN
         YWIN = .55
      ELSE
         YWIN = .95
      END IF
C
C  DETERMINE CURRENT BACKGROUND COLOR AND SET STROKE TEXT ATTRIBUTES
C
  100 CALL INQBKN(BGCOLOR)
C **DEBUG
C      CALL SETCFON(IFONT)
C      CALL SETSTC(COLOR,COLOR)
C      CALL SETSTE(WHEIGHT,ASP,PATH)
      IF (PATH.EQ.0 .OR. PATH.EQ.2) THEN
         ANG=0.
      ELSE
         ANG=90.
      ENDIF      
C             .. DEFHST REQUIRES HEIGHT IN NORMALIZED WORLD COORDINATES      
      CALL DEFHST(IFONT,COLOR,ANG,ASP,THGT,TXTHTW)
      CALL SETSTA(ANG)
C **END DEBUG            
      CALL INQSTS(STRING,INHEIGHT,INWID,OFFSET)
      HEIGHT = INHEIGHT
      WIDTH = INWID
      CALL PICKFONT(IFONT,XWIN,YWIN,RTNCODE)
      CALL NW2W(XNWPOS,YNWPOS,XPOS,YPOS)
      CALL COMTPOS(XPOS,YPOS,WIDTH,HEIGHT,PATH,XTPOS,YTPOS,X1BAR
     +    ,Y1BAR,X2BAR,Y2BAR,LIMITS)
      CALL ORGLOC(XPOS,YPOS)
C
C     IF RTNCODE = 0, NEW FONT TENATIVELY ACCEPTED. CHECK THE LENGTH OF THE
C     STRING IN THE NEW FONT SIZE TO SEE THAT IT FITS WITHIN THE BOUNDARIES
C     FOR THE TYPE OF STRING THAT IT IS. IF THE STRING LENGTH IS OK, CLEAR
C     BOX CONTAINING THIS TEXT STRING, REWRITE IN NEW FONT, AND RETURN.
C
         IF (RTNCODE.EQ.'0') THEN
            CALL INQSTS(STRING,INHEIGHT,INWID,OFFSET)
            IF (PATH .GT. 0) THEN
                REVWID = INWID * WASP
            ELSE
               REVWID = INWID
            ENDIF
C---------- TEST STRING LENGTH. IF TOO BIG, ERROR MSG, & DISPLAY FONT MENU
            IF (REVWID.GT.PLWIDTH .OR. INHEIGHT.GT.PLHGT) THEN
               CALL GRAFNOTE(.1,.95,445,446,' ',0,INCHAR)
               IFONT = SAVFONT
               GO TO 100
            ELSE
               CALL SETCOL(BGCOLOR)
               CALL SETHAT(1)
               CALL BAR(X1BAR,Y1BAR,X2BAR,Y2BAR)
               CALL COMTPOS(XPOS,YPOS,INWID,INHEIGHT,PATH,XTPOS
     +                     ,YTPOS,X1BAR,Y1BAR,X2BAR,Y2BAR,LIMITS)
C **DEBUG
               CALL DEFHST(IFONT,COLOR,ANG,ASP,THGT,TXTHTW)
               CALL SETSTA(ANG)
C **END DEBUG            
               CALL MOVTCA(XTPOS,YTPOS)
               CALL DELTCU( )
               CALL STEXT(STRING)
C             .. SAVE CURRENT LOCATION WHICH MAY HAVE BEEN REVISED TO
C                MEETS LIMIT CHECK REQUIREMENTS
               XNWPOS= XPOS
               YNWPOS=YPOS
            ENDIF
C
C     IF RTNCODE =  1, IGNORE THE NEW FONT.
C
         ELSE 
            IFONT = SAVFONT
         ENDIF
      CALL SETWOR(XSL,YSL,XSH,YSH)
      RETURN
      END
