$STORAGE:2
      SUBROUTINE TXTCOLR(STRING,XNWPOS,YNWPOS,THGT,ASP,IFONT,PATH,COLOR,
     +                   PALETTE,PALDEF,LIMITS)
C------------------------------------------------------------------------------
C     ROUTINE TO CHANGE THE COLOR OF A TEXT STRING BY SELECTING A COLOR FROM 
C     THE CURRENT PALETTE THAT IS DISPLAYED IN A POP-UP WINDOW.
C
C     INPUT ARGUMENTS:
C
C     STRING        CHAR       TEXT STRING TO BE MODIFIED
C     XNWPOS,YNWPOS REAL       POSITION OF TEXT STRING (BOTTOM-CENTER IN 
C                              NORMALIZED WORLD COORDINATES)
C     THGT          REAL       CURRENT TEXT HEIGHT (NWC)
C     ASP           REAL       CURRENT TEXT ASPECT RATIO
C     IFONT         INT2       CURRENT TEXT FONT
C     PATH          INT2       CURRENT TEXT PATH
C     COLOR         INT2       CURRENT TEXT COLOR
C     PALETTE       INT2       CURRENT PALETTE NUMBER
C     PALDEF        INT2 ARRAY CURRENT DEFINITION OF ALL 12 POSSIBLE PALETTES
C     LIMITS        INT2       FLAG TO CONTROL TEXT POSITION: 
C                              0 = NO CHECKS
C                              1 = LEFT AND RIGHT SIDE EDGE CHECK
C                              2 = TOP AND BOTTOM EDGE CHECK
C     OUTPUT ARGUMENTS:
C
C     COLOR         INT2       NEW TEXT COLOR
C------------------------------------------------------------------------------
C
C       ** LOCAL COMMON TO SAVE SPACE IN D-GROUP
C
      INTEGER       PATH,COLOR,PALETTE,PALDEF(16,12),BGCOLOR,INDEX
      REAL          HEIGHT,INHEIGHT,INWID,OFFSET,WIDTH,WHEIGHT,X1BAR,
     +              Y1BAR,X2BAR,Y2BAR,XPOS,YPOS,XTPOS,YTPOS,XWIN,YWIN
C      CHARACTER*1   RTNCODE
      CHARACTER*(*) STRING
      COMMON /TXCLSV/ HEIGHT,INHEIGHT,INWID,OFFSET,WIDTH,WHEIGHT,
     +                X1BAR,Y1BAR,X2BAR,Y2BAR,XPOS,YPOS,XTPOS,
     +                YTPOS,XWIN,YWIN,BGCOLOR,INDEX
C
C   CONVERT FROM NORMALIZED TO WORLD COORDINATES
C
      CALL NW2W(XNWPOS,YNWPOS,XPOS,YPOS)
      CALL YSZNW2W(THGT,DX,WHEIGHT)
C
C  DETERMINE CURRENT BACKGROUND COLOR AND SET STROKE TEXT ATTRIBUTES
C
      CALL INQBKN(BGCOLOR)
C **DEBUG
C      CALL SETCFON(IFONT)
C      CALL SETSTC(COLOR,COLOR)
C      CALL SETSTE(WHEIGHT,ASP,PATH)
      IF (PATH.EQ.0 .OR. PATH.EQ.2) THEN
         ANG=0.
      ELSE
         ANG=90.
      ENDIF      
C       .. DEFHST REQUIRES HEIGHT IN NORMALIZED WORLD COORDINATES      
      CALL DEFHST(IFONT,COLOR,ANG,ASP,THGT,TXTHTW)
      CALL SETSTA(ANG)
C **END DEBUG            
      CALL INQSTS(STRING,INHEIGHT,INWID,OFFSET)
      HEIGHT = INHEIGHT
      WIDTH = INWID
C
C  OPEN A WINDOW WITH THE COLOR BAR MENU AND ALLOW USER TO PICK A COLOR
C  TRY TO PUT THE WINDOW OUT OF THE WAY OF THE TEXT TO BE CHANGED.
C
      XWIN = XNWPOS
      YWIN = YNWPOS
      IF (XWIN.GT.0.5) THEN
         XWIN = .1
      ELSE
         XWIN = .6
      END IF
      IF (YWIN.GT.0.5) THEN
         YWIN = .55
      ELSE
         YWIN = .95
      END IF
      INDEX = COLOR
      CALL PICKCOL(INDEX,XWIN,YWIN,0,16,PALETTE,PALDEF,2) 
      CALL NW2W(XNWPOS,YNWPOS,XPOS,YPOS)
      CALL COMTPOS(XPOS,YPOS,WIDTH,HEIGHT,PATH,XTPOS,YTPOS,X1BAR
     +    ,Y1BAR,X2BAR,Y2BAR,LIMITS)
      CALL ORGLOC( XPOS,YPOS)
C
C     IF INDEX NOT = -1, NEW COLOR ACCEPTED. CLEAR BOX CONTAINING THIS TEXT 
C        STRING, REWRITE IN NEW COLOR, AND RETURN.
C
         IF (INDEX .NE. -1) THEN
            COLOR = INDEX
            CALL SETCOL(BGCOLOR)
            CALL SETHAT(1)
            CALL BAR(X1BAR,Y1BAR,X2BAR,Y2BAR)
            CALL INQSTS(STRING,INHEIGHT,INWID,OFFSET)
            CALL COMTPOS(XPOS,YPOS,WIDTH,HEIGHT,PATH,XTPOS
     +                  ,YTPOS,X1BAR,Y1BAR,X2BAR,Y2BAR,LIMITS)
C **DEBUG
C            CALL SETSTC(COLOR,COLOR)
C             .. DEFHST REQUIRES HEIGHT IN NORMALIZED WORLD COORDINATES      
            CALL DEFHST(IFONT,COLOR,ANG,ASP,THGT,TXTHTW)
            CALL SETSTA(ANG)
C **END DEBUG            
            CALL MOVTCA(XTPOS,YTPOS)
            CALL STEXT(STRING)
            CALL DELTCU( )
            RETURN
C
C     IF RTNCODE = -1, NO COLOR CHANGE
C
         ELSE 
            RETURN
         END IF
      END
