$STORAGE:2
      SUBROUTINE BEGDSET(RTNCODE)
C
C       ** OBJECTIVE:  POSITION FILE TO THE START OF THE CURRENT DATSET
C                      IN MEMORY.  THIS ROUTINE IS CALLED FROM GRAFOPTN
C                      WHERE THE START OF THE DATASET MAY NOT BE THE FIRST
C                      FRAME IN MEMORY.  GETPSET/GETISET MUST BE CALLED 
C                      AFTER THIS ROUTINE TO READ THE CURRENT DATASET.  THIS
C                      INSURES THAT THE DATA IN MEMORY AGREES WITH THE FILE
C                      POSITION
C       ** OUTPUT:
C             RTNCODE....      
C
      CHARACTER *1 RTNCODE
C      
$INCLUDE: 'GRFPARM.INC'
$INCLUDE: 'GRAFVAR.INC'
$INCLUDE: 'DATAVAL.INC'
$INCLUDE: 'FRMPOS.INC'
C
C       ** GRAFVAR.INC REQUIRED FOR PARAMETER LENTXTD
      CHARACTER *(LENTXTD) FRMTITLE,FRMSUB
      CHARACTER*14 MSGTXT  
      INTEGER*2 FILOPT,LENMSG
C      
      PARAMETER (MAXERR=3,MAXMSG=5)
      INTEGER*2 MSGIDX(MAXERR),MSGNBR(MAXMSG)
      DATA MSGNBR /382,383,191,385,391/
C
      NERR = 0
      NFRMBG = 1
      IF (IGRAPH.EQ.1) THEN
        NCVBG=2
      ELSE
        NCVBG=1
      ENDIF   
C      
C          .. POSITION FILE TO START OF CURRENT DATASET
      NNXT=FRM1D-1
      FILOPT = 6
      DO 15 I=1,NNXT
         CALL RDFRAME(CVAL(NCVBG),RVAL,MXDATROW,NFRMBG,FILOPT,IGRAPH,
     +                NUMCOL,COLHDR,FRMTITLE,FRMSUB,NFRMFN,RTNCODE)
         IF (RTNCODE.NE.'0') GO TO 16
   15 CONTINUE
   16 CONTINUE
      IF (RTNCODE.NE.'0') THEN
         NERR=NERR+1
         MSGIDX(NERR)=ICHAR(RTNCODE)-48
         NERR=NERR+1
         MSGIDX(NERR)=5
         GO TO 900
      ENDIF
      FRM1D=1
C
      RETURN
C
C       ** ERROR PROCESSING
C
  900 CONTINUE
C
C             .. TEXT MESSAGE
         DO 905 I=1,NERR
            MSGN1 = MSGNBR(MSGIDX(I))
            IF (MSGIDX(I).EQ.1 .OR. MSGIDX(I).EQ.3) THEN
               MSGTXT='  GRAPHICS.API'
               LENMSG=14
            ELSE
               MSGTXT=' '
               LENMSG=0
            ENDIF      
            CALL WRTMSG(2,MSGN1,12,1,1,MSGTXT,LENMSG)
  905    CONTINUE      
C  
      RETURN      
      END
