$STORAGE:2
C
C     PROGRAM WTSRTTMP
C
C     ** OBJECTIVE:  PROGRAM CONSTRUCTS A TEMPORARY SORT.xxx FILE 
C                    BASED ON THE DATA-TYPE OF THE FILE TO BE SORTED.  IT  
C                    INCLUDES THE ACTUAL NAME OF THE DATAEASE FILE TO BE
C                    SORTED.
C                    
C     ** NOTE:  THE DATA-TYPE CODE (MLY,DLY...) FOR THE FILE TO BE SORTED 
C               MUST BE INCLUDED ON THE COMMAND LINE CALLING THIS ROUTINE
C               EXAMPLE: "WTSRTTMP DLY"
C
      INTERFACE TO SUBROUTINE CMDLIN(ADDRES,LENGTH,RESULT)
      INTEGER*4 ADDRES[VALUE],LENGTH[VALUE]
      CHARACTER*1 RESULT
      END
C
C----------------------------------------------------------------------
C
      PROGRAM WTSRTTMP
C
      INTEGER*4    NUMREC
      CHARACTER*1  NULL,CTRLZ,CHRRTN,LNFEED
      CHARACTER*3  RECTYPE
      CHARACTER*22 FILNAME,INFIL,OUTFIL
      CHARACTER*30 MSG
      CHARACTER*80 OUTLINE
C
      PARAMETER (NTYPD=8)
      CHARACTER*3  TBLRECTYP(NTYPD)
      CHARACTER*24 TBLFRMNAM(NTYPD)
      INTEGER*2    TBLLIN1(NTYPD),TBLLIN2(NTYPD)
C
      CHARACTER*64 RESULT
      INTEGER*4    PSP,PSPNCHR,OFFSET
C
C       ** FOLLOWING STATEMENT REQUIRED FOR FORTRAN 3.3 - NOT ALLOWED IN FTN 4
C
C      EXTERNAL WTSRTTMP
C
      DATA TBLRECTYP/'MLY','10D','DLY','SYN','HLY','15M','U-A','NML'/
      DATA TBLFRMNAM/ 
     +           'MONTHLY DATA'  ,'TEN DAY DATA','DAILY DATA',
     +           'SYNOPTIC DATA' ,'HOURLY DATA' ,'FIFTEEN MINUTE DATA',
     +           'UPPER-AIR DATA','NORMALS'/
      DATA TBLLIN1/ 5, 5, 5, 5, 5, 5, 5, 5/
      DATA TBLLIN2/29,29,29,29,29,29,22,29/
C
      NULL = CHAR(0)
      CTRLZ = CHAR(26)
      CHRRTN = CHAR(13)
      LNFEED = CHAR(10)
C
C       ** LOCATE SEGMENTED ADDRESS OF THE BEGINNING OF THIS PROGRAM
C
      OFFSET = #00100000
      PSP = LOCFAR(WTSRTTMP)
C
C       ** COMPUTE THE BEGINNING OF THE PROGRAM SEGMENT PREFIX (PSP)
C
      PSP = (PSP - MOD(PSP,#10000)) - OFFSET 
C
C       ** LOCATE POSITION OF COMMAND PARAMETERS WITHIN THE PSP
C
      PSPNCHR = PSP + #80
      PSP = PSP + #81
C
C       ** PASS THE ADDRESS OF THE COMMAND PARAMTERS TO CMDLIN WHICH DECODES
C          THE COMMAND AND RETURNS IT AS RESULT.
C
      CALL CMDLIN(PSP,PSPNCHR,RESULT)
C
C       ** PULL THE COMMAND (REC-TYPE) OUT OF THE RESULT
C
      RECTYPE = RESULT(1:3)
      IF (RECTYPE.EQ.' ') THEN
         GO TO 999
      ENDIF   
C
C       ** CONVERT LOWERCASE LETTERS TO UPPERCASE LETTERS
C
      DO 10 I=1,3
         IF (RECTYPE(I:I).LT.'a' .OR. RECTYPE(I:I).GT.'z') GO TO 10
         IVAL = ICHAR(RECTYPE(I:I)) - 32
         RECTYPE(I:I) = CHAR(IVAL)
   10 CONTINUE            
C
C       ** FIND THE RELATIVE NUMBER OF THE DATATYPE WANTED -- USED AS AN INDEX
C          TO THE DATAEASE FORM NAME 
C
      DO 20 I = 1,NTYPD
         IF (RECTYPE.EQ.TBLRECTYP(I)) THEN
            ITYP = I
            GO TO 30
         END IF
   20 CONTINUE
C       .. INVALID DATATYPE SPECIFIED
      GO TO 900
   30 CONTINUE
C
C       ** GET ACTUAL FILE NAME ASSOCIATED WITH THE DATAEASE FORM NAME
C          CONVERT NULLS TO BLANKS IN THE CHARACTER STRING
C
      CALL FNDFIL(TBLFRMNAM(ITYP),FILNAME,NUMREC)
      CALL NUL2BLNK(FILNAME)
      IF (FILNAME.EQ.' ') GO TO 999
C
C       ** COSORT MUST BE ON THE CURRENT DRIVE -- OPEN THE INPUT FILE
C          SORT.xxx AND THE OUTPUT FILE SORT.TMP -- NOTE THAT THE OUTPUT
C          FILE IS OPENED AS BINARY SO THAT THE PROGRAM HAS CONTROL OF ALL
C          CHARACTERS SUCH AS LINE FEED AND END OF FILE MARKS.  EARLY 
C          VERSIONS OF COSORT ARE VERY PARTICULAR ABOUT THE FILE CONTENTS.
C
      INFIL = '\COSORT\SORT.'//RECTYPE(1:3)
      OPEN (63,FILE=INFIL,STATUS='OLD',FORM='FORMATTED',IOSTAT=IOCHK)
      IF (IOCHK.NE.0) THEN
C          .. ERROR OPENING INPUT FILE SORT.xxx
         GO TO 901
      ENDIF         
      OUTFIL = '\COSORT\SORT.TMP'
      OPEN (64,FILE=OUTFIL,STATUS='UNKNOWN',FORM='BINARY')
C
C       ** GET THE LINE NUMBERS OF THE TWO REFERENCES TO THE DATAEASE FILE 
C          NAME IN SORT.xxx
C
      LIN1 = TBLLIN1(ITYP)
      LIN2 = TBLLIN2(ITYP)
C
C       ** COPY THE FILE SORT.xxx TO SORT.TMP REPLACING THE REFERENCES TO THE
C          DATAEASE FILE NAME WITH THE ACTUAL VALUE FOR THE FILE NAME
C
      NLIN = LIN1-1
      CALL CPYLIN(NLIN)
C 
      READ(63,'(A)')
      LGTH = LNG(FILNAME)
      WRITE(OUTLINE,'(A)') FILNAME(1:LGTH)//CHRRTN//LNFEED
      LGTH =LGTH+2
      WRITE(64) OUTLINE(1:LGTH) 
C      
      NLIN = LIN2-LIN1-1
      CALL CPYLIN(NLIN)
C 
      READ(63,'(A)')
      LGTH = LNG(FILNAME)
      WRITE(OUTLINE,'(A)') FILNAME(1:LGTH)//CHRRTN//LNFEED
      LGTH =LGTH+2
      WRITE(64) OUTLINE(1:LGTH) 
C
      NLIN = 999
      CALL CPYLIN(NLIN)
      WRITE(64) CTRLZ
C      
      CLOSE(63)
      CLOSE(64)
C
      STOP ' '
C
C
C       ** ERROR PROCESSING
C
C       .. INVALID DATATYPE SPECIFIED
  900 CONTINUE
      NMSG = 175
      MSG  = RECTYPE(1:3)
      LGTH = 3
      GO TO 998
C      
C       .. ERROR OPENING INPUT FILE SORT.xxx
  901 CONTINUE
      NMSG = 157
      LGTH = LNG(INFIL)
      WRITE(MSG,500) INFIL(1:LGTH),IOCHK
  500 FORMAT(A,'  ',I4.4)
      LGTH = LNG(MSG)
      GO TO 998
C      
C       .. WRITE ERROR MESSAGE, THEN STOP
  998 CONTINUE
      CALL WRTMSG(4,NMSG,12,1,0,MSG,LGTH)
C       .. ERROR STOP, NO MESSAGE:  CMDLIN -- NO COMMAND GIVEN
C                                   FNDFIL -- FILE NOT FOUND FOR DATAEASE FORM
  999 CONTINUE
      STOP 2      
      END      
C*************************************************************************
      SUBROUTINE CPYLIN(NLIN)
C
C       ** OBJECTIVE:  COPY THE SPECIFIED NUMBER OF LINES FROM THE INPUT FILE
C                      TO THE TEMPORARY OUTPUT FILE.  COSORT EXPECTS THE
C                      RESPONSES TO BEGIN IN COLUMN 1.  NO BLANKS ARE 
C                      EXPECTED IN COLUMN 1 OF A LINE.  IF A BLANK OR NON-
C                      PRINTABLE CHARACTER IS DETECTED IN COLUMN 1 OF THE
C                      LINE, THEN IT IS ASSUMED THAT THE FIRST CHARACTER
C                      IN THE LINE WAS A NULL WHICH IS NOT DETECTED
C                      BY A NORMAL FORTRAN READ.  THIS IS NOT A GENERAL
C                      SUBROUTINE.  ITS ONLY PURPOSE IS TO COPY LINES FROM
C                      THE SORT.xxx FILES.
C                     
C
      CHARACTER*1  NULL,CHRRTN,LNFEED
      CHARACTER*79 LINE
      CHARACTER*80 OUTLINE
C      
      NULL = CHAR(0)
      CHRRTN = CHAR(13)
      LNFEED = CHAR(10)
C
      DO 20 I=1,NLIN
         READ(63,500,END=50) LINE
         IF (LINE(1:1).LE.' ') THEN
C              .. NULL LINE -- WRITE ONLY CARRIAGE CONTROL CHARACTERS         
             LGTH =2
             WRITE(OUTLINE,'(A)') CHRRTN//LNFEED
             WRITE(64) OUTLINE(1:LGTH) 
         ELSE   
C              .. NORMAL LINE -- COPY CHARACTERS FOLLOWED BY CARRIAGE
C                                CONTROL CHARACTERS         
             LGTH=LNG(LINE)
             WRITE(OUTLINE,'(A)') LINE(1:LGTH)//CHRRTN//LNFEED
             LGTH =LGTH+2
             WRITE(64) OUTLINE(1:LGTH) 
         ENDIF   
   20 CONTINUE     
C   
   50 RETURN
C
C       ** FORMAT STMTS
C      
  500 FORMAT(A)
C
      END      
*******************************************************************************
      SUBROUTINE NUL2BLNK(LINE)
C
C       ** REPLACE ALL NULL CHARACTERS WITH BLANKS
C      
      CHARACTER*1 NULL
      CHARACTER*(*) LINE
C      
      NULL = CHAR(0)
      BLANK = ' '
C      
      NCHAR = LEN(LINE)
      DO 20 I=1,NCHAR
         IF (LINE(I:I).EQ.NULL) LINE(I:I)=BLANK
   20 CONTINUE   
      RETURN
      END
