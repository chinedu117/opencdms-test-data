
                                                               01-28-91
 ********************  NOTES ON .TWF AND .IDX FILES  *********************
 
 ** TWF FILE
    UNIT NUMBER = 20
    DIRECT ACCESS FILE
    IDKEY FOLLOWED BY DATA
    RECORDS ARE PUT INTO LOCATIONS OF PREVIOUSLY DELETED RECORDS FIRST
       WHEN THESE ARE USED UP THEN THEY ARE ADDED AT END
    ONE RECORD FOR EACH KEY ENTRY FORM ENTERED.  A KEY ENTRY FORM COVERS
       THE TIME PERIOD UNIT FOR A DATA-TYPE.  EX: A MONTH OF DAILY DATA
    FILE CAN INCREASE IN SIZE BUT NOT DECREASE.  TO DECREASE SIZE USE
       PROGRAM PACKTWF (CLICOM 3.0)   

 ** IDX FILE
    DIRECT ACCESS FILE
    UNIT NUMBER = 19
    MAXIMUM NUMBER OF RECORDS ALLOWED = 9999   
    RECORD NUMBER=1  --- DELKEY, BGNIDX, NUMIDX
       DELKEY  I*2   VALUE=0 FOR RECORD #1
       BGNIDX  I*2   STARTING RECORD NUMBER OF FIRST UNDELETED RECORD
       NUMIDX  I*2   NUMBER OF RECORDS IN FILE INCLUDING RECORD #1
                     NUMBER OF RECORDS IN TWF FILE = NUMIDX-1
    INDEX ENTRIES    --- DELKEY, IDKEY, RECNUM
       DELKEY  I*2   FLAG TO INDICATE DATA CONTENT OF RECORDS
                     0=RECORD #1 OR DATA CONTENT UNKNOWN
                     1=RECORD DELETED
                     2=RECORD CONTAINS DATA
       IDKEY   C*21  IDENTIFYING KEY OF ENTRY IN TWF FILE
       RECNUM  I*2   RECORD NUMBER OF ENTRY IN TWF FILE
    ORGANIZATION OF RECORDS --- DELETED RECORDS ARE ENTERED AT THE
       BEGINNING OF THE FILE, FOLLOWED BY UNDELETED RECORD.  ROUTINE
       SRTIDX IS CALLED BY LDDATA TO REARRANGE DELETED/UNDELETED RECORDS
    ADDITION OF RECORDS --- IDX RECORDS ARE ADDED BACKWARDS FROM BGNIDX
       POSITION UNTIL THERE ARE NO EMPTY SLOTS AT THE BEGINNING.  THESE
       ENTRIES REUSE RECORD SLOTS IN THE TWF FILE.  WHEN A RECORD IS
       MARKED AS DELETED, ONLY THE DELKEY IS CHANGED FROM 2 TO 1.  THE
       RECORD NUMBER IN THE TWF FILE REMAINS UNCHANGED.  THUS WHEN A
       RECORD IS ADDED IN A DELETED SLOT THE OLD RECORD NUMBER IN THE
       TWF FILE IS STILL AVAILABLE.  IF THERE ARE NO MORE 'DELETED' SLOTS,
       THEN RECORDS ARE ADDED TO THE END OF THE IDX FILE.  THIS CAUSES THE
       .TWF FILE TO INCREASE IN SIZE.
                  
 ** ROUTINES USED TO MANIPULATE FILES
    OPENFILES- ROUTINE FO OPEN THE .IDX AND .TWF FILES
               INPUT:
                  IDRDWRT  I*2  1=OPEN FOR READ ONLY
    BINDATA -- ATTEMPTS TO FIND RECORD ENTRY BASED ON IDKEY.  IF RECORD IS 
               FOUND, CURRENT VALUES OF OUTPUT PARAMETERS ARE USED.  IF
               RECORD IS NOT FOUND, THEN POSITION OF NEW RECORD IS LOCATED
               AND VALUES OF OUTPUT PARAMETERS ARE CALCULATED.  
               INPUT:
                  IDKEY --- KEY USED TO SORT IDX RECORDS
               OUTPUT:  (THROUGH COMMON -- INDEX.INC)
                  BGNIDX -- STARTING RECORD NUMBER OF FIRST UNDELETED RECORD
                  NUMIDX -- NUMBER OF RECORDS IN FILE INCLUDING RECORD #1
                  RECNUM -- RECORD ID OF ENTRY IN .TWF
                  IDXNUM -- RECORD ID OF ENTRY IN .IDX  
    PUTDATA -- CALLS BINDATA TO GET LOCATION OF RECORD IN TWF FILE
               WRITES RECORD #1 AND INDEX ENTRY IN .IDX FILE -- ALWAYS
               WRITES DATA RECORD INTO .TWF FILE -- ALWAYS
               SORTS .IDX FILE IF RECORD IS NOT AN UPDATE -- UPDATES SATISFY
                  THE CONDITION:  IDXNUM.GT.BGNIDX.AND.IDXNUM.LT.NUMIDX
    GETDATA -- CALLS BINDATA TO GET LOCATION OF RECORD IN TWF FILE
               READS RECORD IF FOUND    
    LDDATA  -- DESCRIPTION OF SECTION THAT APPLIES TO .TWF AND .IDX ONLY
               READ RECORD #1 OF .IDX FILE
               BACK UP THE .IDX FILE.  MAXIMUM RECORDS ALLOWED=9999
               READ ALL UNDELETED .IDX ENTRIES -- BGNIDX TO NUMIDX
               FOR ALL ENTRIES THAT FIT SPECIFICATIONS -- DATE,STATION,ETC.
                  READ DATA ENTRY IN .TWF FILE
                  MARK CORRESPONDING ENTRY IN .IDX FILE AS DELETED
               CALL SRTIDX TO RESORT DELETED/NON-DELETED .IDX ENTRIES   
    SRTIDX  -- ROUTINE TO "SORT" THE IDX FILE WHOSE NAME HAS BEEN PASSED TO IT
               IT ASSUMES THAT THE FILE IS IN SORT EXCEPT THAT SOME RECORDS
               HAVE BEEN MARKED AS DELETED.  THEREFORE, THIS ROUTINE SIMPLY
               SPLITS THE INDEX FILE INTO DELETED AND NON-DELETED RECORDS AND
               THEN MERGES THEM BACK TOGETHER
               
               
 ** VANUATU PROBLEM WITH BREAKING UP LARGE .TWF FILES AND CREATING .IDX FILES
    
    SMALL .TWF FILES HAVE BEEN ALREADY CREATED, BUT NO .IDX FILES
    
    PROCEDURE TO CREATE .IDX FILES --
       CREATE AN INITIAL .IDX AND .TWF FILE BY DEFINING A KEY ENTRY FORM
          THIS STEP IS IMPORTANT.  THE PROGRAM ASSUMES THAT THE RECORDS IN
          THE .TWF FILE ARE ENTERED CONSECUTIVELY AND DO NOT INCLUDE ANY
          RECORDS MARKED FOR DELETION.  IT ALSO ASSUMES THAT THE .IDX FILE
          CONTAINS ONLY A HEADER RECORD AND NO 'DELETED' ENTRIES.
       COPY .TWF WITH DATA INTO NEWLY DEFINED .TWF FILE
       CREATE A FILE P:\DATA\TWFIDX.DAT
          USE NORTON EDITOR OR EQUIVALENT TO WRITE FILE
          ENTER THE FOLLOWING DATA IN LIST DIRECTED FORMAT (COMMAS
             SEPARATING VARIABLES, CHARACTERS ENCLOSED IN APOSTROPHES)
             NRECTWF--INTEGER--TOTAL NUMBER OF RECORDS IN .TWF FILE
             NELMTWF--INTEGER--NUMBER OF ELEMENTS IN EACH RECORD
             DTYPTWF--CHAR*3---DATA TYPE:  DLY,MLY,U-A,ETC.
             DSIDTWF--CHAR*3---DATASET ID:  001,ETC.
          EXAMPLE:   5,3,'U-A','001'
          NOTE:  DATA TYPE AND DATASET ID MUST CORRESPOND TO YOUR .TWF FILE
                 NAME
       CREATE PROGRAM NEWIDX
          TYPE IN SAMPLE CODE
          COMPILE WITH THE FOLLOWING COMMAND LINE
             FL /FPi /Od NEWIDX.FOR /link UTILITY+ASM+CORELIB+
                 GRAFEX40 /SEG:250/NOE
       RUN PROGRAM NEWIDX WHICH
          CONTAINS A DUMMY BINDATA ROUTINE
          CALLS GETDATA TO READ DATA FROM .TWF
          CALLS PUTDATA TO WRITE A .IDX ENTRY, REWRITE DATA IN .TWF, AND
             SORT .IDX FILE
          NOTE:  THIS PROGRAM MUST BE RUN FROM WITHIN CLICOM SINCE IT
                 REQUIRES ALL THE CLICOM SETTINGS AND SUBSTITUTIONS.
                 USE THE MENU CHOICE FOR ENTERING A DOS COMMAND.   

 ** PROGRAM NEWIDX -- SAMPLE -- THIS PROGRAM HAS NOT BEEN TESTED.  IT IS
                      INTENDED AS AN EXAMPLE.  THE BASIC IDEA SHOULD WORK
                      BUT IT MAY HAVE SOME BUGS AND MAY REQUIRE SOME
                      TESTING.
    
$STORAGE:2
      PROGRAM NEWIDX
C 
C$INCLUDE: 'VAL1.INC'
C
      PARAMETER (MAXELEM=40,MAXLINE=100,MAXQCELM=5)
      CHARACTER*6 TBLEABRV(MAXELEM),VALARRAY(MAXELEM,MAXLINE)
      CHARACTER*1 FLAGARRAY(MAXELEM,MAXLINE,2)
      CHARACTER*2 PASSWD
      CHARACTER*3 ENTREQ(MAXELEM)
      INTEGER*2 AQCELEM(MAXQCELM)
      INTEGER*2 TBLELEM(MAXELEM),NUMELEM,NUMLINE,
     +          RELELEM(MAXELEM),RELOPER(MAXELEM)
      REAL      TBLMAX(MAXELEM), TBLMIN(MAXELEM),TBLMXCR(MAXELEM)
      REAL*8    TBLMEAN(MAXELEM), TBLSTDDEV(MAXELEM)
      REAL      TBLCONV(MAXELEM), HIGHPCT,LOWPCT
      COMMON /VAL1/ NUMELEM,NUMLINE,TBLELEM,TBLEABRV,TBLMAX,TBLMIN
     +             ,TBLMXCR,TBLMEAN,TBLSTDDEV,TBLCONV,HIGHPCT,LOWPCT
     +             ,VALARRAY,FLAGARRAY,PASSWD,ENTREQ,RELELEM,RELOPER
     +             ,AQCELEM
C
C$INCLUDE: 'INDEX.INC'
       CHARACTER*22 FILNAM,IDXNAM
       INTEGER*2 IDXNUM,RECNUM,DELKEY,BGNIDX,NUMIDX,RLNGTH
C
      COMMON /INDEX/BGNIDX,NUMIDX,IDXNUM,RECNUM,DELKEY,
     +              FILNAM,IDXNAM,RLNGTH
C
C
      CHARACTER*1 RTNCODE
      CHARACTER*21 IDKEY
      CHARACTER*3 DATATYPE(7),DTYPTWF,DSIDTWF
      DATA DATATYPE /'MLY','10D','DLY','SYN','HLY','15M','U-A'/
     +    ,INUMLINE /12,36,31,8,24,96,100/
C
      OPEN(99,FILE=P:\DATA\TWFIDX.DAT)
      READ(99,*) NRECTWF,NELMTWF,DTYPTWF,DSIDTWF
      CLOSE(99)
      FILNAM = 'P:\DATA\AAAAAA.TWF
      IDXNAM = 'P:\DATA\AAAAAA.IDX
      FILNAM(9:11) = DTYPTWF
      FILNAM(12:14)= DSIDTWF
      IDXNAM(9:11) = DTYPTWF
      IDXNAM(12:14)= DSIDTWF
      DO 10 I=1,7
         IF (DATATYPE(I).EQ.DTYPTWF) THEN
            NUMLINE=INUMLINE(I)
            GO TO 11
         ENDIF
   10 CONTINUE         
   11 CONTINUE         
      NUMELEM = NELMTWF
      RLNGTH = (NUMELEM*NUMLINE*8) +21
C      
      DO 100 I=1,NRECTWF
         IDKEY = ' '
         CALL GETDATA(IDKEY,RTNCODE)
         IOPEN=1
         CALL PUTDATA(IDKEY,IOPEN,RTNCODE)
  100 CONTINUE      
      STOP ' '
      END
      SUBROUTINE BINDATA(IDKEY,RTNCODE)
C
C     ** DUMMY BINDATA FOR CREATING .IDX FILES ONLY **
C
C 
C$INCLUDE: 'VAL1.INC'
C
      PARAMETER (MAXELEM=40,MAXLINE=100,MAXQCELM=5)
      CHARACTER*6 TBLEABRV(MAXELEM),VALARRAY(MAXELEM,MAXLINE)
      CHARACTER*1 FLAGARRAY(MAXELEM,MAXLINE,2)
      CHARACTER*2 PASSWD
      CHARACTER*3 ENTREQ(MAXELEM)
      INTEGER*2 AQCELEM(MAXQCELM)
      INTEGER*2 TBLELEM(MAXELEM),NUMELEM,NUMLINE,
     +          RELELEM(MAXELEM),RELOPER(MAXELEM)
      REAL      TBLMAX(MAXELEM), TBLMIN(MAXELEM),TBLMXCR(MAXELEM)
      REAL*8    TBLMEAN(MAXELEM), TBLSTDDEV(MAXELEM)
      REAL      TBLCONV(MAXELEM), HIGHPCT,LOWPCT
      COMMON /VAL1/ NUMELEM,NUMLINE,TBLELEM,TBLEABRV,TBLMAX,TBLMIN
     +             ,TBLMXCR,TBLMEAN,TBLSTDDEV,TBLCONV,HIGHPCT,LOWPCT
     +             ,VALARRAY,FLAGARRAY,PASSWD,ENTREQ,RELELEM,RELOPER
     +             ,AQCELEM
C
C$INCLUDE: 'INDEX.INC'
       CHARACTER*22 FILNAM,IDXNAM
       INTEGER*2 IDXNUM,RECNUM,DELKEY,BGNIDX,NUMIDX,RLNGTH
C
      COMMON /INDEX/BGNIDX,NUMIDX,IDXNUM,RECNUM,DELKEY,
     +              FILNAM,IDXNAM,RLNGTH
C
C
      CHARACTER*1 RTNCODE
      CHARACTER*21 IDKEY
      LOGICAL RDCALL,FIRSTCALL
      DATA FIRSTCALL/.TRUE./
      DATA RDCALL/.TRUE./
C
      IF (FIRSTCALL) THEN
         FIRSTCALL = .FALSE.
         NUMIDX = 1
         BGNIDX = 2
      ENDIF   
C      
      IF (RDCALL) THEN
         RDCALL = .FALSE.
         RECNUM = NUMIDX
         DELKEY = 0
         RTNCODE = '0'
      ELSE
         RDCALL = .TRUE.   
         RECNUM = NUMIDX
         NUMIDX = NUMIDX + 1
         IDXNUM = NUMIDX
         DELKEY = 0
         RTNCODE = '2'
      ENDIF   
      RETURN
      END           