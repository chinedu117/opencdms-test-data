
                                                               5-11-94
 ********************  NOTES ON .TWF AND .IDX FILES  *********************
 
 ** TWF FILE
    UNIT NUMBER = 20
    DIRECT ACCESS FILE
    IDKEY FOLLOWED BY DATA
    RECORDS ARE PUT INTO LOCATIONS OF PREVIOUSLY DELETED RECORDS FIRST
       WHEN THESE ARE USED UP THEN THEY ARE ADDED AT END
    ONE RECORD FOR EACH KEY ENTRY FORM ENTERED.  A KEY ENTRY FORM COVERS
       THE TIME PERIOD UNIT FOR A DATA-TYPE.  EX: A MONTH OF DAILY DATA
    FILE CAN INCREASE IN SIZE BUT NOT DECREASE.  TO DECREASE SIZE USE
       PROGRAM PACKTWF (CLICOM 3.0)   

 ** IDX FILE
    DIRECT ACCESS FILE
    UNIT NUMBER = 19
    MAXIMUM NUMBER OF RECORDS ALLOWED = 9999   
    RECORD NUMBER=1  --- DELKEY, BGNIDX, NUMIDX
       DELKEY  I*2   VALUE=0 FOR RECORD #1
       BGNIDX  I*2   STARTING RECORD NUMBER OF FIRST UNDELETED RECORD
       NUMIDX  I*2   NUMBER OF RECORDS IN FILE INCLUDING RECORD #1
                     NUMBER OF RECORDS IN TWF FILE = NUMIDX-1
    INDEX ENTRIES    --- DELKEY, IDKEY, RECNUM
       DELKEY  I*2   FLAG TO INDICATE DATA CONTENT OF RECORDS
                     0=RECORD #1 OR DATA CONTENT UNKNOWN
                     1=RECORD DELETED
                     2=RECORD CONTAINS DATA
       IDKEY   C*21  IDENTIFYING KEY OF ENTRY IN TWF FILE
       RECNUM  I*2   RECORD NUMBER OF ENTRY IN TWF FILE
    ORGANIZATION OF RECORDS --- DELETED RECORDS ARE ENTERED AT THE
       BEGINNING OF THE FILE, FOLLOWED BY UNDELETED RECORD.  ROUTINE
       SRTIDX IS CALLED BY LDDATA TO REARRANGE DELETED/UNDELETED RECORDS
    ADDITION OF RECORDS --- IDX RECORDS ARE ADDED BACKWARDS FROM BGNIDX
       POSITION UNTIL THERE ARE NO EMPTY SLOTS AT THE BEGINNING.  THESE
       ENTRIES REUSE RECORD SLOTS IN THE TWF FILE.  WHEN A RECORD IS
       MARKED AS DELETED, ONLY THE DELKEY IS CHANGED FROM 2 TO 1.  THE
       RECORD NUMBER IN THE TWF FILE REMAINS UNCHANGED.  THUS WHEN A
       RECORD IS ADDED IN A DELETED SLOT THE OLD RECORD NUMBER IN THE
       TWF FILE IS STILL AVAILABLE.  IF THERE ARE NO MORE 'DELETED' SLOTS,
       THEN RECORDS ARE ADDED TO THE END OF THE IDX FILE.  THIS CAUSES THE
       .TWF FILE TO INCREASE IN SIZE.
                  
 ** ROUTINES USED TO MANIPULATE FILES
 
    OPENFILES- ROUTINE TO OPEN THE .IDX AND .TWF FILES
               INPUT:
                  IDRDWRT  I*2  1=OPEN FOR READ ONLY

    BINDATA -- ATTEMPTS TO FIND RECORD ENTRY BASED ON IDKEY.  IF RECORD IS 
               FOUND, CURRENT VALUES OF OUTPUT PARAMETERS ARE USED.  IF
               RECORD IS NOT FOUND, THEN POSITION OF NEW RECORD IS LOCATED
               AND VALUES OF OUTPUT PARAMETERS ARE CALCULATED.  
               INPUT:
                  IDKEY   -- KEY USED TO SORT IDX RECORDS
               OUTPUT:
                  RTNCODE -- ERROR FLAG   '0'=KEY FOUND  '2'=KEY NOT FOUND  
               OUTPUT THROUGH COMMON (INDEX.INC):
                  BGNIDX  -- STARTING RECORD NUMBER OF FIRST UNDELETED RECORD
                  NUMIDX  -- NUMBER OF RECORDS IN FILE INCLUDING RECORD #1
                  RECNUM  -- RECORD ID OF ENTRY IN .TWF
                  IDXNUM  -- RECORD ID OF ENTRY IN .IDX  

    PUTDATA -- THIS ROUTINE PERFORMS ALL OR SOME OF THE FOLLOWING TASKS 
               DEPENDING ON THE VALUE OF THE FLAG FILFLG
                  1 -- OPENS/CLOSES THE .IDX AND .TWF FILES
                  2 -- CALLS BINDATA TO GET LOCATION OF RECORD IN TWF FILE 
                  3 -- WRITES A FRAME OF DATA TO THE .TWF FILE.
                  4 -- WRITES RECORD #1 AND INDEX ENTRY IN .IDX FILE     
                  5 -- SORTS .IDX FILE IF RECORD IS NOT AN UPDATE -- UPDATES 
                       SATISFY THE CONDITION:  IDXNUM.GT.BGNIDX.AND.
                       IDXNUM.LT.NUMIDX
               INPUT:
                  IDKEY   - IDENTIFICATION KEY FOR KEY ENTRY RECORD
                  FILFLG  - FLAG TO CONTROL OPERATIONS ON INDEX AND DATA FILES
                            0=PUTDATA ROUTINE OPENS/CLOSES DATA AND INDEX FILES
                              PUTDATA ROUTINE FINDS RECORD LOCATION
                              PUTDATA ROUTINE WRITES AND SORTS RECORDS 
                            1=CALLING ROUTINE OPENS/CLOSES DATA AND INDEX FILES
                              PUTDATA ROUTINE FINDS RECORD LOCATION
                              PUTDATA ROUTINE WRITES AND SORTS RECORDS 
                            2=CALLING ROUTINE OPENS/CLOSES DATA AND INDEX FILES
                              CALLING ROUTINE FINDS RECORD LOCATION
                              PUTDATA ROUTINE WRITES AND SORTS RECORDS 
               OUTPUT:
                  RTNCODE - FLAG TO INDICATE THE RESULT OF SEARCH FOR RECORD
                            LOCATION
                            '0'=KEY IS FOUND -- OLD RECORD     -- FILFLG=0,1
                            '1'=NO SEARCH MADE FOR KEY         -- FILFLG=2
                            '2'=KEY IS NOT FOUND -- NEW RECORD -- FILFLG=0,1

    GETDATA -- CALLS BINDATA TO GET LOCATION OF RECORD IN TWF FILE
               READS RECORD IF FOUND    
               INPUT:
                  IDKEY   - IDENTIFICATION KEY FOR KEY ENTRY RECORD
                            '0' = KEY FOUND
                            '1' = END PROGRAM REQUESTED
                            '2' = KEY NOT FOUND
               OUTPUT:
                  RTNCODE - FLAG TO INDICATE THE RESULT OF SEARCH FOR RECORD

    LDDATA  -- DESCRIPTION OF SECTION THAT APPLIES TO .TWF AND .IDX ONLY
               READ RECORD #1 OF .IDX FILE
               BACK UP THE .IDX FILE.  MAXIMUM RECORDS ALLOWED=9999
               READ ALL UNDELETED .IDX ENTRIES -- BGNIDX TO NUMIDX
               FOR ALL ENTRIES THAT FIT SPECIFICATIONS -- DATE,STATION,ETC.
                  READ DATA ENTRY IN .TWF FILE
                  MARK CORRESPONDING ENTRY IN .IDX FILE AS DELETED
               CALL SRTIDX TO RESORT DELETED/NON-DELETED .IDX ENTRIES   

    SRTIDX  -- ROUTINE TO "SORT" THE IDX FILE WHOSE NAME HAS BEEN PASSED TO IT
               IT ASSUMES THAT THE FILE IS IN SORT EXCEPT THAT SOME RECORDS
               HAVE BEEN MARKED AS DELETED.  THEREFORE, THIS ROUTINE SIMPLY
               SPLITS THE INDEX FILE INTO DELETED AND NON-DELETED RECORDS AND
               THEN MERGES THEM BACK TOGETHER
