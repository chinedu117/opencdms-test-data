CODE REVISIONS AFTER THE RELEASE OF CLICOM 3.0 (July 1992) 
(Actual date diskettes were mailed: 9-2-92)

File name:  NORMAL.RVA

******************************************************************************
******************************************************************************

Program:        NORMAL.FOR
Revision nbr:    1  
Revision date:   9-30-92
Release date:   11-25-92
Problems:       1 -- Units were checked for elements 005,084,268 even if
                     they were not used in the current normals calculation
                2 -- Message was cryptic if units in ELEM.DEF did not match
                     those specified in NORMAL.PRM
                3 -- Normal type of 'count' was calculated the same way as
                     'total'.  The output is correct only if the input element
                     has values of 0/1.           
Messages:
  Number-- 93
     Old--Units in ELEM.DEF differ from NORMAL.PRM - Element,Unit=
     New--ELEM.DEF units not in NORMAL.PRM - NORMAL/DEF code,Unit=
_______________________________________________________________________________

      PROGRAM NORMAL
      |
      |
      CHARACTER*28 MSG1      --------->> Increase from 22 to 28


      LOGICAL OKMLY,OKTEMP,GPRCP,GTMEAN,CVTPRCP,ACCUM,WTNMLFLG,
     *        CHKSUN,CHKPCP    --------------->> Add this line


      CHKSUN = .FALSE.       --------------->> Add this line
      CHKPCP = .FALSE.       --------------->> Add this line
      DO 30 I = 1,NUMELEM
          READ (61,*) INELEM(I), OUTELEM(I), NORMTYP(I), DSTATUS(I)
          IF (INELEM(I).EQ.084) THEN          --------------->> Add this line
             CHKSUN = .TRUE.                  --------------->> Add this line
          ELSE IF (INELEM(I).EQ.005 .AND. OUTELEM(I).EQ.246 .AND. 
     +        NORMTYP(I).EQ.'G') THEN
              CHKPCP = .TRUE.                 --------------->> Add this line 
              GPRCP = .TRUE.
              GPCPPTR = I
              NORMTYP(I) = 'C'


C       ** READ UNITS FROM ELEMENT DEFINITION FILE TO DETERMINE IF
C          UNIT CONVERSION IS NECESSARY FOR SELECTED ELEMENTS
C   
      IF (CHKSUN .OR. CHKPCP) THEN             --------------->> Add this line
   50    CONTINUE
         OPEN(30,FILE='P:\DATA\ELEM.DEF',STATUS='OLD',ACCESS='DIRECT'
     +          ,RECL=110,SHARE='DENYWR',MODE='READ',IOSTAT=IOCHK)
         IF(IOCHK.NE.0) THEN
            CALL OPENMSG('P:\DATA\ELEM.DEF      ','NORMAL       ',IOCHK)
            GO TO 50
         END IF
         IF (CHKPCP) THEN                      --------------->> Add this line
C
C             .. Retrieve element definition for precipitation to determine 
C                the units the data values are in.  If the data values are 
C                measured in inches, set logical variable to indicate such 
C                so that, when computing Days with Precipitation ò 1 
C                Millimeter, the data values for precipitation can be 
C                converted to millimeters. 
C
            NREC = 5                      ------------->> Add this line
            READ (30,REC=NREC) ELEM,SCRATCH,ELUNITS,SCALE4 --->> 005 TO NREC
            CVTPRCP = .FALSE.
            IF (ELUNITS .EQ. UNITLBL(1)) THEN
               CVTPRCP = .TRUE.
            ELSE IF (ELUNITS .NE. UNITLBL(2)) THEN
               WRITE(MSG1,2101) NREC,ELEM,ELUNITS  ----->> Use format; add NREC
 2101          FORMAT(I3.3,'-',A3,'-',A)      --------------->> Add this line
               LGTH = LNG(MSG1)
               CALL WRTMSG (3,93,12,1,1,MSG1,LGTH)
               STOP 2
            END IF
         END IF
         IF (CHKSUN) THEN                     --------------->> Add this line
C
C             .. Retrieve element definitions for Daily total amount of Sunshine
C                and Monthly total amount of Sunshine to determine the units the 
C                data values are in.  If the data values are measured in different
C                units, a conversion factor is calculated.
            DO 54 NF=1,2
               NREC= IELMSUN(NF)
               READ (30,REC=NREC) ELEM,SCRATCH,ELUNITS,SCALE4
               IF (ELUNITS .EQ. UNITLBL(3)) THEN
                  IFAC(NF) = 1
               ELSE IF (ELUNITS .EQ. UNITLBL(4)) THEN
                  IFAC(NF) = 60
               ELSE    
                  WRITE(MSG1,2101) NREC,ELEM,ELUNITS --->> Use format; add NREC
                  LGTH = LNG(MSG1)
                  CALL WRTMSG (3,93,12,1,1,MSG1,LGTH)
                  STOP 2
               END IF
   54       CONTINUE
            IF (IFAC(1).EQ.IFAC(2)) THEN
               SUNCONV = 1.
            ELSE   
               SUNCONV = FLOAT(IFAC(1))/FLOAT(IFAC(2))
            ENDIF   
         ENDIF   
C
         CLOSE (30)
      ENDIF                                    --------------->> Add this line


         DO 400 I = 1,NUMDAYS(MONTH)
            IF (VALUE(I).EQ.-99999.) THEN
               |
               |
            ELSE
               IF (NORMTYP(NELEM).EQ.'C') THEN        --------->> Add this line
                  IF (VALUE(I) .NE. 0.) SUM1=SUM1+1.  --------->> Add this line
               ELSE                                   --------->> Add this line
                  SUM1 = SUM1 + VALUE(I)
               ENDIF                                  --------->> Add this line
            END IF            
  400    CONTINUE 


C  Get monthly extreme maximum and minimun 
C
         IF (OKMLY) THEN
            IF (NORMTYP(NELEM).EQ.'M') THEN
               |
               |
            ELSE IF (NORMTYP(NELEM).EQ.'T') THEN   --->> Delete check for 'C'
               IF (INELEM(NELEM).EQ.084.AND.OUTELEM(NELEM).EQ.268) THEN 
                  OUT(NYEAR(MONTH,NELEM),MONTH,NELEM) = SUM1*SUNCONV
               ELSE   
                  OUT(NYEAR(MONTH,NELEM),MONTH,NELEM) = SUM1 
               ENDIF   
               DO 475 I = 1,NUMDAYS(MONTH)
                  IF (VALUE(I).NE.-99999..AND.VALUE(I).NE.0
     +                .AND.FLAG1(I).NE.'A') THEN
                     IF (VALUE(I).GT.RMAXMLY) THEN
                        RMAXMLY = VALUE(I)
                     END IF
                     IF (VALUE(I).LT.RMINMLY) THEN
                        RMINMLY = VALUE(I)
                     END IF
                  END IF
  475          CONTINUE
            ELSE 
C                .. NORMAL TYPE IS COUNT            --------->> Add this line
               OUT(NYEAR(MONTH,NELEM),MONTH,NELEM) = SUM1 
               RMAXMLY = SUM1
               RMINMLY = 0.
            END IF
            XMAX(NYEAR(MONTH,NELEM),MONTH,NELEM) = RMAXMLY
            XMIN(NYEAR(MONTH,NELEM),MONTH,NELEM) = RMINMLY
         ELSE 
            OUT(NYEAR(MONTH,NELEM),MONTH,NELEM) = -99999.
            XMAX(NYEAR(MONTH,NELEM),MONTH,NELEM) = -99999.
            XMIN(NYEAR(MONTH,NELEM),MONTH,NELEM) = -99999.
         END IF
C
C  If parameter file indicates, count days with daily preciptation greater
C  than or equal to 1mm
C  
         IF (INELEM(NELEM).EQ.005.AND.GPRCP) THEN
            |
            |
            DO 500 I = 1,NUMDAYS(MONTH)
               |
               |
  500       CONTINUE
            OUT(NYEAR(MONTH,GPCPPTR),MONTH,GPCPPTR) = SUM2            
            XMAX(NYEAR(MONTH,GPCPPTR),MONTH,GPCPPTR) = SUM2
            XMIN(NYEAR(MONTH,GPCPPTR),MONTH,GPCPPTR) = 0.
         END IF

******************************************************************************
******************************************************************************

Program:        NORMAL.FOR
Revision nbr:   2  
Revision date:  11-16-92
Release date:   11-25-92
Problems:       1 -- If the starting year of the normals data was the last
                     year of a normals period, then it would be included in
                     the next normal period and that period would incorrectly
                     have 31 years in it.  An error would occur, for example,
                     if the starting year was 1960, the last year of the
                     1931-1960 normals period.  The program included 1960 in 
                     the normals period 1961-1990.
_______________________________________________________________________________

      PROGRAM NORMAL
      |
      |
      PARAMETER (MAXDAYS=31,MAXMONTHS=12,MAXYEARS=30,MAXELEMS=30)
      |
      |
      STNID  = 'ZZZZZZZZ'
      PREVID = 'ZZZZZZZZ'
      NPEND = 1900
      YEAR  = 9999
      CALL INITVALS
      TPRCP = -99999.
C
C  Do the processing ---------------------
C               
   |
   |   
C
C If have reached the end of a normals period, compute the normal values and
C write them out.
C
         IF (YEAR.GT.NPEND
     +      .OR.STNID.NE.PREVID.OR.RTNCODE.NE.'0') THEN
            |
            |
            IF (STNID.NE.PREVID) THEN
               PREVID = STNID
               NPEND = 1900
            END IF
260         IF ( YEAR.LE. NPEND) GOTO 265   -------------->> CHANGE .LT. TO .LE
               NPEND=NPEND+MAXYEARS
               GOTO 260
265         CONTINUE                
         END IF
            
******************************************************************************
******************************************************************************
            