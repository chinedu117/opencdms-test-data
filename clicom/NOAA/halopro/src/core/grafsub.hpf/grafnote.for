$STORAGE:2
      SUBROUTINE GRAFNOTE(XWIN,YWIN,MSGN1,MSGN2,MSGTXT,LENMSG,OUTTXT)
C------------------------------------------------------------------------------
C     DISPLAY A 2-LINE MESSAGE (NOTE) IN A GRAPHICS WINDOW. TEXT MAY BE 
C     APPENDED TO THE FIRST LINE OF THE NOTE. A 1-KEY RESPONSE IS EXPECTED,
C     SO THE USER IS NOT REQUIRED TO PRESS THE ENTER KEY. USE 'GRAFMSG' TO
C     GET ANY OTHER ALPHA OR NUMERIC RESPONSE.
C
C     INPUT ARGUMENTS: 
C
C     XWIN,YWIN    REAL   LOWER LEFT WINDOW CORNER (NORMALIZED DEVICE COORDS)
C     MSGN1,MSGN2  INT2   MESSAGE NUMBERS IN THE MESSAGES FILE TO DISPLAY
C     MSGTXT       CHAR   TEXT TO BE APPENDED TO LINE 1 OF THE NOTE
C     LENMSG       INTS   LENGTH OF MSGTXT:  0 = NO TEXT APPENDED
C
C     OUTPUT ARGUMENTS:
C
C     OUTTXT       CHAR   USER RESPONSE TO NOTE. 
C------------------------------------------------------------------------------
C  ---> MAXIMUM OF 75 CHARACTERS FOR EACH LINE  <---
      PARAMETER (MAXMSG=75)
C
      CHARACTER*(*) MSGTXT
      CHARACTER*2   OUTTXT
C      
$INCLUDE:  'SYSFONT.INC'      
C      
C       ** LOCAL COMMON TO SAVE SPACE IN D-GROUP
C
      INTEGER*2    LEN1, LEN2
      REAL         HEIGHT,WIDTH,XOLD,YOLD,XNOW,YNOW,XPOS,YPOS
      CHARACTER*45 TESTLINE
      CHARACTER*78 MESSAGE,TXTLINE(3)
      CHARACTER*3  TXTCHR
      CHARACTER*2  INCHAR
      COMMON /GNOTSV/ LEN1,LEN2, HEIGHT,WIDTH,XPOS,YPOS,XOLD,YOLD,
     +                XNOW,YNOW, TESTLINE,MESSAGE,TXTLINE,TXTCHR,INCHAR
      DATA ISPFAC /.6/,XTRA_X/.01/
C     
      TXTCHR = '^ ^'
      TESTLINE = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
C
C   DETERMINE AND SAVE THE CURRENT VIEWPORT, COORDINATES,CROSS-HAIR
C   CURSOR LOCATION AND XOR MODE
C
      CALL INQVIE(XN1,YN1,XN2,YN2)
      CALL INQWOR(X1OLD,Y1OLD,X2OLD,Y2OLD)
      CALL INQHCU(XOLD,YOLD,IDUMMY)
      CALL INQXOR(IXOR)
      CALL SETXOR(0)
C
C   READ THE MESSAGES TO BE PRINTED INTO TXTLINE 
C
      MESSAGE = '   '
      CALL GETMSG(MSGN1,MESSAGE)
      LEN1 = LNG(MESSAGE)
C **DEBUG      
      WRITE(999,*)'GRAFNOTE ',MSGN1,LEN1,LENMSG
      WRITE(999,*)MESSAGE
      IF (LENMSG.GT.0) THEN
         ICHR = MIN0(LEN1+1,MAXMSG-LENMSG+1)
         MESSAGE(ICHR:)=MSGTXT(1:LENMSG)
         LEN1=MIN0(LEN1+LENMSG,MAXMSG)
      ENDIF   
C **DEBUG
        WRITE(999,*)ICHR,LEN1,MESSAGE      
      CALL DELIMSTR(MESSAGE,TXTLINE(1))
      MESSAGE = '   '
      CALL GETMSG(MSGN2,MESSAGE)
      LEN2 = LNG(MESSAGE)+1 
      MESSAGE = MESSAGE(1:LEN2) // TESTLINE(1:1)
      LEN2 = LEN2 + 1
      CALL DELIMSTR(MESSAGE,TXTLINE(2))
      CALL DELIMSTR(TESTLINE(1:1),TXTLINE(3))
      CALL GETMSG(999,TESTLINE)
C
C  DETERMINE HOW MUCH SPACE IS REQUIRED FOR THIS MENU IN THE CURRENT
C  WORLD COORD SYSTEM AND DEFINE WINDOW BIG ENOUGH TO HOLD IT.
C  ADD 2% OF SCREEN TO WINDOW SIZE TO ACCOUNT FOR WINDOW BORDER AND SHADOWS.
C
C       .. IN ORDER TO OPEN THE VIEWPORT TO THE ENTIRE SCREEN, A MAX VALUE
C          EQUAL TO .999 MUST BE USED.  A VALUE OF 1.0 IS A SPECIAL SIGNAL FOR
C          HALO TO 'TURN OFF' THE VIEWPORT WHICH DOES NOT RESET ASPECT RATIOS
      CALL SETVIE(0.,0.,0.999,0.999,-1,-1)
      CALL SETWOR(X1OLD,Y1OLD,X2OLD,Y2OLD)
      CALL MOVHCA(XOLD,YOLD)
C **DEBUG
      WRITE(999,*)'##### GRAFNOTE'
      WRITE(999,*)'X1OLD,X2OLD=',X1OLD,X2OLD
      WRITE(999,*)'Y1OLD,Y2OLD=',Y1OLD,Y2OLD
C **END DEBUG      
C         
      ICLR    = 0
      IDFONT  = ISYSFNT
      STDASP  = SYSASP
      TXTHTND = SYSHTND
      IASPFLG = 0
      CALL DFHSTWIN(IDFONT,ICLR,TXTHTND,IASPFLG,STDASP,ADJASP)
C
      CALL INQSTS(TXTLINE(1),HEIGHT,CWIDTH,OFFSET)
      CALL INQSTS(TXTLINE(2),HEIGHT,WIDTH,OFFSET)
C **DEBUG
      WRITE(999,*)TXTLINE(1)
      WRITE(999,*)TXTLINE(2)
      WRITE(999,*)'HT,WID1,WID2=',HEIGHT,CWIDTH,WIDTH
C **END DEBUG      
      IF (CWIDTH.GT.WIDTH) THEN
         WIDTH = CWIDTH
         LMAX  = 1
      ELSE
         LMAX  = 2
      ENDIF
C            
      XWORLD = WIDTH + X1OLD 
      YWORLD = (HEIGHT+ISPFAC*OFFSET)*2. + Y1OLD
      CALL MAPWTN(XWORLD,YWORLD,XWIN2,YWIN1)
      CALL INQVIE(XNDUL,YNDUL,XNDLR,YNDLR)
C **DEBUG
        WRITE(999,*)'XWORLD,YWORLD=',XWORLD,YWORLD
        WRITE(999,*)'XWIN2,YWIN1=',XWIN2,YWIN1
C **END DEBUG        
      XWIN2 = XWIN2 + .02 + XTRA_X
      YWIN2 = (YNDLR-YWIN1) + .02
C
C   OPEN THE TEXT WINDOW 
C
      XWIN1 = XWIN
      XWIN2 = XWIN1 + XWIN2
      YWIN1 = YWIN - YWIN2
      YWIN2 = YWIN
C
      CALL GRAFWIN(1,XWIN1,YWIN1,XWIN2,YWIN2)
C
      ICLR    = 1
      CALL DFWINASP(TXTLINE(LMAX),IDFONT,ICLR,TXTHTND,
     +              XTRA_X,ADJASP,WINASP)
C
C   FIND TEXT HEIGHT IN WINDOW COORDS
C
      CALL INQSTS(TXTLINE(LMAX),HEIGHT,WIDTH,OFFSET)
      HTLIN = HEIGHT+ISPFAC*OFFSET
C **DEBUG
      WRITE(999,*)'LMAX,TXT=',LMAX,TXTLINE(LMAX)
      WRITE(999,*)'HT,WIDTH,HTLIN=',HEIGHT,WIDTH,HTLIN
C **END DEBUG      
C
C  DISPLAY THE MESSAGES IN THE WINDOW 
C
      CALL INQWOR(XLOW,YLOW,XHIGH,YHIGH)
C **DEBUG
      WRITE(999,*)'XLOW,XHIGH=',XLOW,XHIGH
      WRITE(999,*)'YLOW,YHIGH=',YLOW,YHIGH
C **END DEBUG
      I1 = 0
      ISTRT = 1
      IEND  = 2
      CALL SETCOL(3)
      CALL CLR
      CALL SETSTC(0,0)
      XPOS = XLOW
      DO 100 I = ISTRT,IEND
         I1 = I1 + 1
         YPOS = YHIGH - I1*HTLIN
         CALL MOVTCA(XPOS,YPOS)
         CALL STEXT(TXTLINE(I))
 100  CONTINUE
      CALL INQTCU(XPOS,YPOS,KLR)
      CALL DELTCU 
C
C  DRAW A BAR ON 2ND LINE WITH NEW COLOR FOR 1 CHARACTER
C
      CALL INQSTS(TXTLINE(3),HEIGHT,WIDTH,OFFSET)
      CALL MOVTCR(-WIDTH,0.)
      CALL INQTCU(XNOW,YNOW,KLR)
C **DEBUG
      WRITE(999,*)TXTLINE(3)
      WRITE(999,*)'HT,WIDTH=',HEIGHT,WIDTH
      WRITE(999,*)'XNOW,YNOW=',XNOW,YNOW
C **END DEBUG      
C-------WARNING!!! ABOVE STMT YIELDS BAD VALUE FOR YNOW. DON'T KNOW WHY...
C       ** FIXED (JML 3/94) -- 0 IN CALL TO MOVTCR CHANGED FROM INTEGER TO REAL
      CALL SETCOL(2)
      CALL BAR(XNOW,YPOS,XNOW+WIDTH,YPOS+HEIGHT)
      CALL MOVTCA(XNOW,YPOS)
      XHIGH = XNOW + WIDTH + 0.02
      CALL SETSTC(1,1)
      CALL INQSTS(TXTCHR,HEIGHT,WIDTH,OFFSET)
C
C  GET A KEYBOARD RESPONSE AND PROCESS IT
C
 200  CONTINUE
      CALL GETCHAR(1,INCHAR)
C
C     PROCESS A 1-KEY REPONSE TO THE QUERY ASKED IN THE WINDOW
C
      IF (INCHAR(2:2) .EQ. ' ') THEN
         TXTCHR(2:2)= INCHAR(1:1)
         CALL STEXT(TXTCHR)
      ENDIF
      OUTTXT = INCHAR
      IF (INCHAR.EQ.'4F'.OR.INCHAR.EQ.'ES') THEN
         OUTTXT = 'ES'
      ENDIF
C
C   RESTORE THE WINDOW AND EXIT.
C
      CALL GRAFWIN(0,XWIN1,YWIN1,XWIN2,YWIN2)
      CALL SETVIE(XN1,YN1,XN2,YN2,-1,-1)
      CALL SETWOR(X1OLD,Y1OLD,X2OLD,Y2OLD)
      CALL MOVHCA(XOLD,YOLD)
      CALL SETXOR(IXOR)
      RETURN
      END
