$STORAGE:2
      SUBROUTINE LNATRIB(ATRIBNUM,XWIN,YWIN,HATRIB)
C------------------------------------------------------------------------------
C     DISPLAY A GRAPHICS MENU (GRAFMENU CAN NOT BE USED HERE) TO ALLOW THE 
C     USER TO SELECT THE DESIRED LINE WIDTH, LINE STYLE, OR HATCH STYLE
C
C     INPUT ARGUMENTS:
C
C     ATRIBNUM   INT2  NUMBER OF THE ATTRIBUTE MENU TO DISPLAYED 
C                      1 = LINE WIDTH
C                      2 = LINE SYTLE
C                      3 = HATCH STYLE
C     XWIN,YWIN  REAL  LOWER LEFT CORNER (NORMALIZED DEVICE COORDS) OF POP-UP
C                      MENU THAT DISPLAYS THE ATTRIBUTE IN ATRIBNUM
C     HATRIB     INT2  CURRENT ATTRIBUTE VALUE USED IN HALO SUBROUTINE CALL
C
C     OUTPUT ARGUMENTS: 
C
C     HATRIB     INT2  REVISED ATTRIBUTE VALUE 
C------------------------------------------------------------------------------
      PARAMETER (MAXMENU=3,MAXCHOICE=5,MAXITEM=MAXCHOICE+1)

      CHARACTER*180 INREC
      CHARACTER*22 CHOICE(MAXITEM,MAXMENU),HOLDLINE
      CHARACTER*16 FRSTLN(MAXMENU)
      CHARACTER*12 F1LINE,ESCLINE
      CHARACTER*3  DEVERS
      CHARACTER*2  OUTCHAR
      CHARACTER*1  RTNCODE
      INTEGER*2    ATRIBNUM,NUMCHOICE(MAXMENU),HELPLEVEL,HATRIB,MTRIB
      REAL         HEIGHT,CWIDTH,XHELP,YHELP,XLOW,YLOW,XHIGH,YHIGH,
     +             XN1,YN1,XN2,YN2,XOLD,YOLD,X1OLD,Y1OLD,X2OLD,
     +             Y2OLD,XPOS,YPOS,XWIN1,YWIN1,XWIN2,YWIN2,XTP,YTP
      LOGICAL FIRSTCALL
C      
C       ** LOCAL COMMON TO SAVE SPACE IN D-GROUP
C
      COMMON /LINSAV/ HEIGHT, CWIDTH, XHELP, YHELP, XLOW, YLOW, XHIGH,
     +        YHIGH, XN1, YN1, XN2, YN2, XOLD, YOLD, X1OLD, Y1OLD,X2OLD,
     +        Y2OLD, XPOS, YPOS, XWIN1, YWIN1, XWIN2, YWIN2, XTP, YTP,
     +        MTRIB, INREC, CHOICE, HOLDLINE, FRSTLN, F1LINE, ESCLINE
      DATA FIRSTCALL /.TRUE./, NUMCHOICE/5,3,4/, EGAFAC/1.4/
C      
C       ** THE TEXT PART OF THIS GROUP OF MENUS CONSISTS ONLY OF A SINGLE
C          DIGIT NUMBER FOLLOWED BY A PERIOD AND A BLANK.  ASSUME THAT THE
C          NUMBER '2' HAS THE MOST REPRESENTATIVE WIDTH FOR ALL THE ENTRIES.
C          THE INDEX TO THIS ENTRY IS 3.
C
      DATA NMXWID /3/
C
C   DETERMINE AND SAVE THE CURRENT XOR STATUS, CROSS-HAIR CURSOR 
C   LOCATION, WORLD COORDINATES, AND VIEWPORT.
C
      CALL INQXOR(IXOR)
      CALL INQHCU(XOLD,YOLD,ICLR)
      CALL INQWOR(X1OLD,Y1OLD,X2OLD,Y2OLD)
      CALL INQVIE(XN1,YN1,XN2,YN2)
C
C   ON FIRST CALL TO THIS ROUTINE READ THE MENU DEFINITION FILE AND 
C   LOAD ALL MENU DEFINITIONS THAT PERTAIN TO LINE/BAR ATTRIBUTES. 
C
      IF (FIRSTCALL) THEN
         FIRSTCALL = .FALSE.
         CALL GETDEASE(DEVERS)
         OPEN (13,FILE='P:\FORM\GRAFMENU.DEF',STATUS='OLD')
         READ(13,500) F1LINE
         IF (DEVERS.EQ.'4.0') THEN
C             .. DATAEASE 4.X -- DISPLAY 'ESC'         
            READ(13,500) 
            READ(13,500) ESCLINE
         ELSE
C             .. DATAEASE 2.5 -- DISPLAY 'F4'      
            READ(13,500) ESCLINE
            READ(13,500) 
         ENDIF
         HOLDLINE = F1LINE
         F1LINE = '^'//HOLDLINE
         F1LINE(12:12) = '^'
         HOLDLINE = ESCLINE
         ESCLINE = '^'//HOLDLINE
         ESCLINE(12:12) = '^'
C
C        READ THE MENU TITLES AND PLACE IN ARRAY FRSTLN
C
         MENUNBR=11
         DO 20 I = 1,MENUNBR-1
            READ(13,510) 
   20    CONTINUE
         READ(13,510,END=25) INREC
         LNGTH = LEN(FRSTLN(1))
         CALL PARSE1(INREC,180,MAXMENU,LNGTH,FRSTLN(1),RTNCODE)
   25    CLOSE(13)
C
C        ADD LEADING AND TRAILING HALO TEXT DELIMITTERS TO TEXT IN MENUS
C
         DO 90 I=1,MAXMENU
            DO 80 J=1,NUMCHOICE(I)+1
               IF (J.EQ.1) THEN
                  LNGTH = LNG(FRSTLN(I))
                  CHOICE(J,I) = '^'//FRSTLN(I)(1:LNGTH)//'^'
               ELSE
                  WRITE(CHOICE(J,I),'(A1,I1,A3)') '^',J-1,'. ^'
               ENDIF
  80        CONTINUE
  90     CONTINUE
      ENDIF
C      
      CALL INQDRA(MAXX,MAXY)
C
C  DETERMINE HOW MUCH SPACE IS REQUIRED FOR THIS MENU IN THE CURRENT
C  WORLD COORD SYSTEM AND DEFINE THE WINDOW BIG ENOUGH TO HOLD IT.
C  ADD 2% OF SCREEN TO WINDOW SIZE TO ACCOUNT FOR WINDOW BORDER AND SHADOWS.
C
C       .. IN ORDER TO OPEN THE VIEWPORT TO THE ENTIRE SCREEN, A MAX VALUE
C          EQUAL TO .999 MUST BE USED.  A VALUE OF 1.0 IS A SPECIAL SIGNAL FOR
C          HALO TO 'TURN OFF' THE VIEWPORT WHICH DOES NOT RESET ASPECT RATIOS
      CALL SETVIE(0.,0.,0.999,0.999,-1,-1)
      CALL SETWOR(0.,0.,1.,1.)
C         
         IDFONT  = 7
         ICLR    = 0
         STDASP    = 1.
         TXTHTND = .03
         IPASS   = 0
         CALL CURASP(IPASS,STDASP,ACTASP)
         CALL DFHSTWIN(IDFONT,ICLR,ACTASP,TXTHTND,TXTHTW)
C         
      CALL INQSTS(CHOICE(1,ATRIBNUM),HEIGHT,CWIDTH,OFFSET)
C---- REVISE THE HEIGHT OF ENTRIES IF LINE WIDTH MENU ON AN EGA DEVICE
C **DEBUG IS THIS STILL NECESSARY????
      IF (ATRIBNUM.EQ.1 .AND. MAXY.LE.350) THEN
         HEIGHT = HEIGHT * EGAFAC
      ENDIF
      XTP = CWIDTH 
      YTP = HEIGHT*(NUMCHOICE(ATRIBNUM)+3)
      CALL MAPWTN(XTP,YTP,XWIN2,YWIN1)
C **DEBUG
        WRITE(999,*)'%%%%% LNATRIB'
        WRITE(999,*)'+++++ MAX WIDTH,HT,ACTASP=',CWIDTH,HEIGHT,ACTASP
        WRITE(999,*)'+++++YTP,XWIN2,YWIN1=',YTP,XWIN2,YWIN1
C **END DEBUG        
      XWIN2 = XWIN2 + .02
      YWIN2 = 1.02 - YWIN1 
C **DEBUG
        WRITE(999,*)'+++++ADJ XWIN2,YWIN2=',XWIN2,YWIN2
C **END DEBUG        
C
C   SET UP WINDOW FOR DISPLAY OF THE MENU. ALSO DETERMINE WHERE HELP
C   WINDOW SHOULD BE LOCATED IF IT IS REQUESTED.
C
      XWIN1 = XWIN
      XWIN2 = XWIN2 + XWIN1
      YWIN1 = YWIN - YWIN2 
      YWIN2 = YWIN
      CALL GRAFWIN(1,XWIN1,YWIN1,XWIN2,YWIN2)
      IF (XWIN1.LT.0.40) THEN
         XHELP = XWIN1 + .15
      ELSE
         XHELP = XWIN1 - .45
      END IF
      IF (YWIN1.LT.0.5) THEN
         YHELP =  YWIN1 + .50 
      ELSE
         YHELP = YWIN2 - .10
      END IF
C
      ICLR    = 1
      IPASS   = 1
      CALL CURASP(IPASS,STDASP,ACTASP)
      CALL DFHSTWIN(IDFONT,ICLR,ACTASP,TXTHTND,TXTHTW)
C      
      CALL INQWOR(XLOW,YLOW,XHIGH,YHIGH)
      CALL INQSTS(CHOICE(1,ATRIBNUM),HEIGHT,CWIDTH,OFFSET)
C **DEBUG
        WRITE(999,*)'XLO,YLO=',XLOW,YLOW
        WRITE(999,*)'XHI,YHI=',XHIGH,YHIGH
        WRITE(999,*)'+++++ MAX WIDTH,HT,ACTASP=',CWIDTH,HEIGHT,ACTASP
C **END DEBUG      
C---- REVISE THE HEIGHT OF ENTRIES IF LINE WIDTH MENU ON AN EGA DEVICE
      IF (ATRIBNUM.EQ.1 .AND. MAXY.LE.350) THEN
         HEIGHT = HEIGHT * EGAFAC
      ENDIF
      XPOS = (XHIGH + XLOW) / 2.0 - (CWIDTH / 2.0)
      CALL SETCOL(0)
C      
C   DISPLAY THE MENU TEXT (TITLE IS CENTERED, OTHER TEXT LEFT JUSTIFIED)
C
      CALL INQSTS(CHOICE(NMXWID,ATRIBNUM),HEIGHT,XTP,OFFSET)
      DO 180 I = 1,NUMCHOICE(ATRIBNUM)+1
         J = I -1
         YPOS = YHIGH - I*HEIGHT
         CALL MOVTCA(XPOS,YPOS)
         CALL DELTCU( )
         CALL STEXT(CHOICE(I,ATRIBNUM))
         IF (I.EQ.1) THEN
            CALL SETSTC(0,0)
            XPOS = XLOW 
            GO TO 180
         ENDIF
         YTP = YPOS
C         CALL INQTCU(XTP,YTP,ICLR)
         IF   (ATRIBNUM .EQ. 1) THEN
              HELPLEVEL=91
              YTP = YTP + (0.5*HEIGHT)
              CALL MOVABS(XTP,YTP)
              CALL SETLNW(J*2-1)
              CALL LNABS(XHIGH,YTP)
         ELSE IF (ATRIBNUM .EQ. 2) THEN
              HELPLEVEL=92
              YTP = YTP + (0.5*HEIGHT)
              CALL MOVABS(XTP,YTP)
              CALL SETLNS(J)
              CALL SETLNW(3)
              CALL LNABS(XHIGH,YTP)
         ELSE IF (ATRIBNUM .EQ. 3) THEN
              HELPLEVEL=93
              YTP = YTP + (0.1*HEIGHT)
              IF (J .EQ. 1) THEN
                 CALL SETHAT(J)
              ELSE
                 CALL SETHAT(J+1)
              ENDIF
              CALL BAR(XTP,YTP,XHIGH,YTP+(0.8*HEIGHT))
         ELSE 
              CALL BEEP
         ENDIF
         CALL SETLNW(1)
         CALL SETLNS(1)
         CALL SETHAT(1)
180   CONTINUE
      YPOS = YHIGH - (NUMCHOICE(ATRIBNUM)+2)*HEIGHT
      CALL MOVTCA(XPOS,YPOS)
      CALL SETSTC(1,1)
      CALL STEXT(F1LINE)
      YPOS = YHIGH - (NUMCHOICE(ATRIBNUM)+3)*HEIGHT
      CALL MOVTCA(XPOS,YPOS)
      CALL DELTCU
      CALL STEXT(ESCLINE)
C
C----- DISPLAY CURRENT ITEM NUMBER, THEN GET ITEM NUMBER OF THE SELECTED CHOICE
C----- LINE WIDTH MUST BE ODD NUMBER (ATRIBNUM =1) AND HATCH STYLE #2 IS TOO
C----- SIMILIAR TO #1, SO IT IS DROPPED (ATRIBNUM=3)
C
      MTRIB = HATRIB
      IF (ATRIBNUM .EQ. 1) THEN
         MTRIB = (MTRIB / 2) + 1
      ENDIF
      IF (ATRIBNUM .EQ. 3 .AND. MTRIB .GT. 1) THEN
         MTRIB = MTRIB - 1
      ENDIF
      OUTCHAR = '  '
      WRITE (UNIT=OUTCHAR,FMT='(I1,1X)') MTRIB
      CALL PIKITEM(HEIGHT,NUMCHOICE(ATRIBNUM),HELPLEVEL,XHELP,YHELP,
     +             OUTCHAR)
C
C   SET THE HALO ATTRIBUTE, RESTORE THE WINDOW & CURSOR POSITION, THEN EXIT.
C
      IF (OUTCHAR .GE. '1 ' .AND. OUTCHAR .LE. '9 ') THEN
         READ (UNIT=OUTCHAR,FMT='(I1,1X)') HATRIB
         IF (ATRIBNUM .EQ. 1) THEN
            HATRIB = HATRIB * 2 - 1
         ENDIF
         IF (ATRIBNUM .EQ. 3 .AND. HATRIB .GT. 1) THEN
            HATRIB = HATRIB + 1
         ENDIF
      ENDIF
      CALL SETXOR(0)
      CALL GRAFWIN(0,XWIN1,YWIN1,XWIN2,YWIN2)
      CALL SETVIE(XN1,YN1,XN2,YN2,-1,-1)
      CALL SETWOR(X1OLD,Y1OLD,X2OLD,Y2OLD)
      CALL SETXOR(IXOR)
      CALL MOVHCA(XOLD,YOLD)
      CALL ORGLOC(XOLD,YOLD)
      CALL SETLNS(1)
      CALL SETLNW(1)
      CALL SETHAT(1)
      RETURN
C
C       ** FORMAT STMTS
C
  500 FORMAT(A12)
  510 FORMAT(4X,A180)
      END
