$STORAGE:2
      SUBROUTINE GRFPRNT
C------------------------------------------------------------------------------
C     PRINT THE SCREEN ON THE ACTIVE PRINTER IN QUICK SCREEN OR 
C     HI-RESOLUTION MODE.
C------------------------------------------------------------------------------
$INCLUDE:'HALOENV.INC'
$INCLUDE:'GRFPARM.INC'
$INCLUDE:'GRAFVAR.INC'
$INCLUDE:'SAVBUF.INC'
C **DEBUG
      LOGICAL ONEDEV
      COMMON/DEVHNDL/IHNDLSCR,IHNDLVRI,IACTDEV,ONEDEV
C
      INTEGER       MATR(0:32), FUNC, IER
      CHARACTER*2   INCHAR, HALOERR
      CHARACTER*1   RTNCODE
      LOGICAL       DITHER, COLRPRN
      COMMON/GRFPRNSV/MATR,FUNC,IER,  INCHAR,HALOERR,RTNCODE,  
     +                DITHER,COLRPRN,LSTDTHR,LSTCLRP
C      
      LOGICAL       FIRSTCALL
      DATA FIRSTCALL /.TRUE./
      DATA MATR/33*0/
C
      IF (FIRSTCALL) THEN
c         FIRSTCALL = .FALSE.
         MATR(0)=0
         MATR(1)=2
         MATR(2)=0
         MATR(3)=0
C         OPEN(61,FILE='O:\DATA\GRFSPCS.PRM',FORM='FORMATTED',ERR=11)
C         READ (61,*,ERR=10) MATR(0),MATR(1),IMODE
C   10    CONTINUE
C         CLOSE (61)
C   11    CONTINUE
      ENDIF
C
C---- PRINT A GRAPHICS PRODUCT IN HIGH RESOLUTION MODE USING HALO'S
C---- VIRTUAL RASTER INTERFACE (VRI).
C---  ACTVPTR IS THE PRINTER DESIGNATION, 0 = PRIMARY & 1 = ALTERNATE 
C
      IDPTR = ACTVPTR+1
      CALL INQDRA(MX,MY)
      CALL INQASP(DEVASP)
      XD=MX+1
      YD=MY+1
      DITHER  = .TRUE.
      COLRPRN = .FALSE.
C      
      PTRVAL(1,IDPTR) = 
     +            (FLOAT(PTRVAL(0,IDPTR))*PTRASP(IDPTR)*YD)/(XD*DEVASP)
      MAXX      = PTRVAL(0,IDPTR) - 1
      MAXY      = PTRVAL(1,IDPTR) - 1
      DITHER    = PTRVAL(19,IDPTR) .NE. 0
      COLRPRN   = CLRFLG(IDPTR) .EQ. 1
C         
      IF (COLRPRN) THEN
         MAXC = 15
      ELSE         
         IF (DITHER) THEN
            MAXC = 3
         ELSE
            MAXC = 1
         ENDIF
      ENDIF
C          
      IF (FIRSTCALL) THEN
         FIRSTCALL = .FALSE.
         CALL SETDEV(VRI)
         CALL CKHALOER(1,'SETDEV',IER)
         IF (IER.NE.0) GO TO 250
C      
         CALL INQADE(IHNDLVRI)
         CALL CKHALOER(1,'INQADE',IER)
         IF (IER.NE.0) GO TO 250
C      
         CALL SETMAT(MATR)
         CALL CKHALOER(1,'SETMAT',IER)
         IF (IER.NE.0) GO TO 250
      ELSE   
         CALL SETADE(IHNDLVRI)
         CALL CKHALOER(1,'SETADE',IER)
         IF (IER.NE.0) GO TO 250
C      
         CALL CLOSEG
         CALL CKHALOER(1,'SETDRA',IER)
         IF (IER.NE.0) GO TO 250
      ENDIF   
C      
      CALL SETDRA(MAXX,MAXY)
      CALL CKHALOER(1,'SETDRA',IER)
      IF (IER.NE.0) GO TO 250
C      
      CALL SETCRA(MAXC)
      CALL CKHALOER(1,'SETCRA',IER)
      IF (IER.NE.0) GO TO 250
C         
      CALL INITGR(0)
      CALL CKHALOER(1,'INITGR',IER)
      IF (IER.NE.0) GO TO 250
C      endif
C      
C---  MESSAGE TO USER TO WAIT DURING REDRAW 
C      CALL SETADE(IHNDLSCR)
C      CALL GRAFNOTE(.1,.5,380,202,' ',0,INCHAR)
C      CALL CLSDEV(IHNDLSCR)
C      IHNDLSCR=0
C      CALL SETMOD(3,IER)
C      
      CALL SETADE(IHNDLVRI)
      CALL SETIEE(1)
      CALL SETASP(PTRASP(IDPTR))
      CALL SETACTPR(PRINTR(IDPTR),PTRVAL(0,IDPTR))
C      
C---  MESSAGE TO USER TO WAIT DURING REDRAW 
C **DEBUG
      WRITE(*,*)'WAIT FOR PRINTER TO COMPLETE'
      WRITE(*,*)'PRESS RETURN'
      CALL GETCHAR(0,INCHAR)
C      CALL WRTMSG(18,380,3,1,0,' ',0)
C---  HIGH RESOLUTION PRINT -- OPTION=4
      CALL DRAWGRF(4,RTNCODE)
      NTRY = 0
C **DEBUG      
C      CALL INQVIE(X1,Y1,X2,Y2)
C       .. IN ORDER TO OPEN THE VIEWPORT TO THE ENTIRE SCREEN, A MAX VALUE
C          EQUAL TO .999 MUST BE USED.  A VALUE OF 1.0 IS A SPECIAL SIGNAL FOR
C          HALO TO 'TURN OFF' THE VIEWPORT WHICH DOES NOT RESET ASPECT RATIOS
      CALL SETVIE(0.0,0.0,0.999,0.999,-1,-1)
  200 CALL GPRINT
      NTRY = NTRY + 1
      CALL INQERR(FUNC,IER)
      IF (IER .NE. 0) THEN
         IF (IER.LT.20 .OR. IER.GT.29 .OR. NTRY .GT.2) THEN
            IF (NTRY .GT. 2) THEN
               MSGERR = 521
            ELSE
               MSGERR = 520
            ENDIF
            CALL WRTMSG(6,MSGERR,4,1,1,' ',0)
            CALL CLRMSG(6)
         ELSE
            IF     (IER .EQ. 20) THEN
                   MSGERR = 522
            ELSEIF (IER .EQ. 21) THEN
                   MSGERR = 519
            ELSEIF (IER .EQ. 22) THEN
                   MSGERR = 523
            ELSEIF (IER .EQ. 23) THEN
                   MSGERR = 524
            ELSEIF (IER .GT. 23) THEN
                   MSGERR = 194
            ENDIF
            IF (MSGERR .EQ. 194) THEN
               WRITE(UNIT=HALOERR,FMT='(I2)') IER
               CALL WRTMSG(6,MSGERR,4,0,0,HALOERR,2)
            ELSE
               CALL WRTMSG(6,MSGERR,4,0,0,' ',0)
            ENDIF
            CALL WRTMSG(5,507,4,1,0,' ',0)
            CALL GETCHAR(0,INCHAR)
            CALL CLRMSG(6)
            CALL CLRMSG(5)
            IF (IER.NE.23.AND.INCHAR.NE.'ES'.AND.INCHAR.NE.'4F') THEN
               GO TO 200
            ENDIF
         ENDIF
      ENDIF
  250 CONTINUE
C      CALL SETVIE(X1,Y1,X2,Y2,-1,-1)
      CALL BGNHALO(1,PALETTE,PALDEF)
c      CALL SETADE(IHNDLVRI)
c      CALL CLSDEV(IHNDLVRI)
c      IHNDLVRI=0
c      CALL SETADE(IHNDLSCR)
      RETURN
C
C---- QUICK SCREEN PRINT. 
C
      ENTRY SNAPST 
      IDPTR = ACTVPTR+1
      CALL INQDRA(MX,MY)
      CALL INQASP(DEVASP)
      XD=MX+1
      YD=MY+1
      NTRY = 0
C      
      PTRVAL(1,IDPTR) = 
     +            (FLOAT(PTRVAL(0,IDPTR))*PTRASP(IDPTR)*YD)/(XD*DEVASP)
      CALL SETACTPR(PRINTR(IDPTR),PTRVAL(0,IDPTR))
      CALL INQVIE(X1,Y1,X2,Y2)
C       .. IN ORDER TO OPEN THE VIEWPORT TO THE ENTIRE SCREEN, A MAX VALUE
C          EQUAL TO .999 MUST BE USED.  A VALUE OF 1.0 IS A SPECIAL SIGNAL FOR
C          HALO TO 'TURN OFF' THE VIEWPORT WHICH DOES NOT RESET ASPECT RATIOS
      CALL SETVIE(0.0,0.0,0.999,0.999,-1,-1)
  300 CALL GPRINT
      NTRY = NTRY + 1
      CALL INQERR(FUNC,IER)
      IF (IER .NE. 0) THEN
         XLL = 0.5
         YLL = 0.2
         IF (IER.LT.20 .OR. IER.GT.29 .OR. NTRY .GT.2) THEN
            IF (NTRY .GT. 2) THEN
               MSGERR = 521
            ELSE
               MSGERR = 520
            ENDIF
            CALL GRAFNOTE(XLL,YLL,MSGERR,507,' ',0,INCHAR)
         ELSE
            HALOERR = ' '
            IF     (IER .EQ. 20) THEN
                   MSGERR =  522
            ELSEIF (IER .EQ. 21) THEN
                   MSGERR =  519
            ELSEIF (IER .EQ. 22) THEN
                   MSGERR = 523
            ELSEIF (IER .EQ. 23) THEN
                   MSGERR = 524
            ELSEIF (IER.GT.23 .OR. IER.LT.20) THEN
                   MSGERR = 194
                   WRITE(UNIT=HALOERR,FMT='(I2)') IER
            ENDIF
            NCHR = LNG(HALOERR)
            CALL GRAFNOTE(XLL,YLL,MSGERR,507,HALOERR,NCHR,INCHAR)
            IF (IER.NE.23.AND.INCHAR.NE.'ES'.AND.INCHAR.NE.'4F') THEN
               GO TO 300
            ENDIF
         ENDIF
      ENDIF
      CALL SETVIE(X1,Y1,X2,Y2,-1,-1)
      RETURN
      END

      SUBROUTINE SETACTPR(PRDRVR,PRATRB)
C
      CHARACTER*(*) PRDRVR
      INTEGER*2     PRATRB(0:*)      
C
$INCLUDE:'GRFPARM.INC'
$INCLUDE:'GRAFVAR.INC'
$INCLUDE:'SAVBUF.INC'
      INTEGER*2    PATTR(0:63)
C **DEBUG      
C      EQUIVALENCE (PATTR,I2BUF)
C      
      LOGICAL      BWREV
C   
      CALL SETPRN(PRDRVR)
      CALL CKHALOER(1,'SETPRN',IER)
      IF (IER.NE.0) GO TO 200
C      
      DO 20 I=0,26
         PATTR(I) = PRATRB(I)
   20 CONTINUE   
C   
      BWREV = PATTR(3).LE.0
      IF (BWREV) PATTR(3)=1
C      
      DO 25 I=27,63
         PATTR(I)=-1
   25 CONTINUE      
      CALL SETPAT(PATTR)
      CALL CKHALOER(1,'SETPAT',IER)
      IF (IER.NE.0) GO TO 200
      CALL DEFPPAL(PALDEF(1,PALETTE),BWREV,IER)
C
  200 CONTINUE      
      RETURN
      END
      
      SUBROUTINE CKHALOER(ITXT,FCNNAM,IER)
C
      INTEGER*2 IER
      CHARACTER*(*) FCNNAM
C
      CHARACTER*14  MSGTXT
      CHARACTER*2   INCHAR
      DATA XLL/0.5/,YLL/0.2/
C
      IER = 0
      CALL INQERR(IFCN,IER)
      IF (IER.NE.0) THEN
         MSGTXT = ' '
         WRITE(MSGTXT,'(I3,I4,1X,A6)') IER,IFCN,FCNNAM
         NCH = LNG(MSGTXT)
         IF (ITXT.EQ.1) THEN
C **DEBUG             
C            CALL WRTMSG(4,193,4,1,1,MSGTXT,NCH)
             CALL LOCATE(20,0,IER)
             WRITE(*,*)'HALOERR=',MSGTXT
             WRITE(*,*)'PRESS ANY KEY TO CONTINUE'
             CALL GETCHAR(0,INCHAR)
         ELSE   
            CALL GRAFNOTE(XLL,YLL,193,202,MSGTXT,NCH,INCHAR)
         ENDIF   
      ENDIF   
      RETURN
      END           
      