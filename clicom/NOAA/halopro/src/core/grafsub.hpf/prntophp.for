$STORAGE:2
      SUBROUTINE PRNTOPHP
C------------------------------------------------------------------------------
C     REVISE THE OPTIONS FOR THE PRINTER (PRIMARY OR ALTERNATE WHICHEVER IS
C     CURRENTLY SELECTED) DEFINED BY THE ADMIN PGM.  THIS ROUTINE OPERATES 
C     OUTSIDE OF GRAPHICS MODE TO TAKE ADVANTAGE OF CLICOM'S FORM PGM. 
C------------------------------------------------------------------------------
$INCLUDE: 'HALOENV.INC'
C
      INTEGER*2    HLPLVL
      PARAMETER    (MXFIELD=24)      
      CHARACTER*9  FIELD(MXFIELD)
      CHARACTER*1  YN,YESUP,YESLO,NULL
      CHARACTER*2  INCHAR
      CHARACTER*9 ACTPRHDR(2)
      CHARACTER*78 HELPFILE
      COMMON /PROPSV/ HLPLVL,FIELD,ACTPRHDR,HELPFILE,YESUP,YESLO,
     +                INCHAR,NULL
C
      CHARACTER*1  RTNCODE
      LOGICAL      FIRSTCALL
      DATA FIRSTCALL /.TRUE./
C
      IF (FIRSTCALL) THEN
         FIRSTCALL = .FALSE.
         NULL = CHAR(0)
         CALL GETYN(1,1,YESUP,YESLO)
C ----   GET PRIMARY & ALTERNATE TITLES FROM MESSAGE FILE
         CALL GETMSG(468,HELPFILE)
         ACTPRHDR(1) = '          '
         ACTPRHDR(2) = '          '
         CALL PARSE1(HELPFILE,78,2,9,ACTPRHDR,ISTAT)         
C         
         DO 20 I=1,2      
C **DEBUG
        WRITE(999,*)'I,ACTPR=',I,'-',ACTPRHDR(I),'-'
            LEN = LNG(ACTPRHDR(I))
            HELPFILE = ACTPRHDR(I)
            ACTPRHDR(I) = '          '
            ACTPRHDR(I)(9-LEN+1:)=HELPFILE
C **DEBUG
        WRITE(999,*)'LEN,ACTPR=',LEN,'-',ACTPRHDR(I),'-'            
   20    CONTINUE         
C        
         HELPFILE  = 'P:\HELP\PRNTOP.HLP'
      ENDIF
C     
      CALL OPTFRMA(RTNCODE)
      IF (RTNCODE.NE.'0') GO TO 200
      CALL OPTFRMB(RTNCODE)
      IF (RTNCODE.NE.'0') GO TO 200
C
C-----   MAKE PRINTER OPTIONS PERMANENT
C
      YN = ' '
      CALL WRTMSG(3,470,14,1,0,' ',0)
      CALL LOCATE(22,55,IER)
      CALL OKREPLY(YN,RTNCODE)
      CALL LOCATE(22,1,IER)
C **REVISION JML 5-4-94 CHANGE YESUP/YESLO TO 'Y'; ERROR FOUND BY DENIS S.
      IF (YN .EQ. 'Y') THEN
          OPEN (UNIT=44,FILE=ENVFILE,FORM='FORMATTED')
          WRITE(44,700) DEVICE,DEVMODE,AQCMODE,NETWORK,ACTVPTR,
     +                ((PRINTR(I,J),I=1,2),(PTRVAL(I,J),I=0,MXPTRV),
     +                  UNTFLG(J),CLRFLG(J),CLRMOD(J),PTRASP(J),J=1,2)
          CLOSE (44)
      ENDIF
  200 CONTINUE      
      RETURN
C
C       ** FORMAT STMTS
C
  700 FORMAT('''',A30,'''',4(',',I5),','/
     +   2(2('''',A30,''',')/,3(9(I5,',')/),3(I5,','),F6.3/))
C     
      END
***************************************************************************
      SUBROUTINE OPTFRMA(RTNCODE)
C      
      CHARACTER*1  RTNCODE
C      
$INCLUDE: 'HALOENV.INC'
C      
      INTEGER*2    HLPLVL
      PARAMETER    (MXFIELD=24)      
      CHARACTER*9  FIELD(MXFIELD)
      CHARACTER*1  YN,YESUP,YESLO,NULL
      CHARACTER*2  INCHAR
      CHARACTER*9 ACTPRHDR(2)
      CHARACTER*78 HELPFILE
      COMMON /PROPSV/ HLPLVL,FIELD,ACTPRHDR,HELPFILE,YESUP,YESLO,
     +                INCHAR,NULL
C
      CHARACTER*9 FLD2(5,3)
      EQUIVALENCE (FIELD(2),FLD2(1,1))
C      
      PARAMETER (MXDPIMOD=5)
      INTEGER*2   PTRINQ(0:8),DPIMOD(5)     
      EQUIVALENCE (PTRINQ(4),DPIMOD(1))
      INTEGER*2 PTRSUP(0:63),NMSG(3),MAXW,MAXH,IWIDTH,IHGT,
     +          FORMFD,ORIENT,DPI,COPIES,CENTER,IXOFSET,IYOFSET,RESOL,
     +          DITHER
      REAL*4    WIDTH,HDPI,VDPI,XOFSET,YOFSET
      CHARACTER*2 UNITS(2)
      COMMON /OPTFRMSV/ PTRINQ,PTRSUP,NMSG,MAXW,MAXH,IWIDTH,IHGT,
     +          FORMFD,ORIENT,DPI,COPIES,CENTER,IXOFSET,IYOFSET,RESOL,
     +          DITHER,   WIDTH,HDPI,VDPI,XOFSET,YOFSET,   UNITS
C     
      LOGICAL NEWDRVR
C      
      RTNCODE = '0'
      IDPTR = ACTVPTR+1
C
      IWIDTH  = PTRVAL(0,IDPTR)
      ORIENT  = PTRVAL(2,IDPTR)
      IDRESOL = PTRVAL(7,IDPTR)
      IXOFSET = PTRVAL(10,IDPTR)
      IYOFSET = PTRVAL(11,IDPTR)
      WIDTH   = 0.   
      XOFSET  = 0.
      YOFSET  = 0.
      IF (IDRESOL.GE.0 .AND. ORIENT.GE.0) THEN      
         PTRINQ(3) = 1
         PTRINQ(4) = IDRESOL
         CALL INQPRN(PTRINQ)
         ORIENT = MIN0(MAX0(0,ORIENT),1)
         IF (ORIENT.EQ.1) THEN
            VDPI = DPIMOD(4)
            HDPI = DPIMOD(5)
         ELSE
            HDPI = DPIMOD(4)
            VDPI = DPIMOD(5)
         ENDIF
         IF  (IWIDTH.GT.0)  WIDTH= FLOAT(IWIDTH)/HDPI
         IF (IXOFSET.GT.0) XOFSET=FLOAT(IXOFSET)/HDPI
         IF (IYOFSET.GT.0) YOFSET=FLOAT(IYOFSET)/VDPI
      ENDIF   
C            
   10 CONTINUE    
      NEWDRVR = .FALSE.
      CALL INQPAT(PTRSUP)
C
C       .. GET HEADER FOR DPI MODES WHICH CONTAINS NUMBER OF DPI MODES
      PTRINQ(3) = 0
      CALL INQPRN(PTRINQ)
      NDPIMOD = MIN0(PTRINQ(3),MXDPIMOD)
      DO 15 I=1,MXFIELD
         FIELD(I)=' '
   15 CONTINUE      
      DO 20 I=1,NDPIMOD
         PTRINQ(3) = 1
         PTRINQ(4) = I-1
         CALL INQPRN(PTRINQ)
         WRITE(FLD2(I,1),500) DPIMOD(1)   
         WRITE(FLD2(I,2),501) DPIMOD(4)   
         WRITE(FLD2(I,3),501) DPIMOD(5)   
C **DEBUG
        WRITE(999,*)'PTRINQ=',(PTRINQ(J),J=0,8)
   20 CONTINUE   
C   
C       .. PRINTER LABEL
      FIELD(1) = ACTPRHDR(IDPTR)
C      
C       .. COLOR MODE
      FIELD(19) = '0'
      IF (CLRFLG(IDPTR).EQ.1) FIELD(20)='1'
      WRITE(FIELD(23),500) CLRMOD(IDPTR)
C      
C       .. PRINTER RESOLUTION
      IDRESOL = PTRVAL(7,IDPTR)
      IF (IDRESOL .EQ. -1) THEN
         IDRESOL = PTRINQ(2)
      ENDIF
      IDRESOL = MIN0(MAX0(0,IDRESOL),4)
      WRITE(FIELD(17),500) IDRESOL
C      
C       .. PAPER SIZE   1   2   4   8  16  32     
C                  ID   0   1   2   3   4   5
      IDSIZ = MAX0(1,PTRVAL(2,IDPTR))
      IDSIZ = NINT(ALOG(FLOAT(IDSIZ))/ALOG(2.))
      IDSIZ = MIN0(MAX0(0,IDSIZ),5)
      WRITE(FIELD(18),500) IDSIZ
C
C       .. PAGE ORIENTATION
      FIELD(21) = '0'
      IF (PTRSUP(2).EQ.1) FIELD(22)='1'
      ORIENT = MIN0(MAX0(0,PTRVAL(2,IDPTR)),1)
      WRITE(FIELD(24),500) ORIENT
C      
  100 CONTINUE
      INCHAR='  '
      CALL CLS
      CALL LOCATE(0,0,IER)
      CALL GETFRM('HALOPRNA',HELPFILE,FIELD,9,INCHAR)
      CALL LOCATE(0,0,IER)
C
C---  ASK IF USER WANTS TO ABANDON FORM 
C
      IF (INCHAR .EQ. '4F' .OR. INCHAR .EQ. 'ES') THEN
         YN = ' '
         CALL WRTMSG(3,200,14,1,0,' ',0)
         CALL LOCATE(22,55,IER)
         CALL OKREPLY(YN,RTNCODE)
C **REVISION JML 5-4-94 CHANGE YESUP/YESLO TO 'Y'; ERROR FOUND BY DENIS S.
         IF (YN .EQ. 'Y') THEN
            RTNCODE = '1'
            IDCLR = CLRMOD(IDPTR)+1
C **DEBUG         
         WRITE(999,*)'############PRNTOPHP--CALL SETACTPR--ESC FRMA'         
            CALL SETACTPR(PRINTR(IDCLR,IDPTR),PTRVAL(0,IDPTR),
     +                    PTRASP(IDPTR),IER)
            GO TO 900
         ELSE
            GO TO 100
         ENDIF
      ENDIF
C      
      NUMER = 0
C      
C **DEBUG
        WRITE(999,*)'FIELD-17,18,23=',FIELD(17),FIELD(18),FIELD(23)
      READ(FIELD(17),500) IDRESOL
      READ(FIELD(18),500) IDSIZ
      READ(FIELD(23),500) IDBWCL
      READ(FIELD(24),500) ORIENT
C **DEBUG
        WRITE(999,*)'IDRESOL,IDBWCL,IDSIZ,ORIENT=',
     +               IDRESOL,IDBWCL,IDSIZ,ORIENT
C      
C       .. COLOR MODE -- COLOR VS BLACK WHITE
      IF (IDBWCL.EQ.1 .AND. CLRFLG(IDPTR).EQ.0) THEN
C          .. ERROR:  COLOR MODE SELECTED FOR BLACK/WHITE PRINTER
         NUMER = NUMER+1
         NMSG(NUMER) = 630
      ELSE   
         IF (IDBWCL.NE.CLRMOD(IDPTR)) THEN
            CALL SETPRN(NULL)
            CALL SETPRN(PRINTR(IDBWCL+1,IDPTR))
            CALL CKHALOER(1,PRINTR(IDBWCL+1,IDPTR),IER)
            CLRMOD(IDPTR)=IDBWCL
            NUMER=1
            NMSG(NUMER) = 633
            NEWDRVR = .TRUE.
            GO TO 110
         ENDIF
      ENDIF
C
C       .. PRINTER RESOLUTION IN DOTS PER INCH      
      IF (IDRESOL+1.GT.NDPIMOD) THEN
C          .. ERROR:  SELECTED RESOLUTION NOT SUPPORTED BY PRINTER      
         NUMER = NUMER+1
         NMSG(NUMER) = 628
      ELSE   
         NPAT = 7
         IF (IDRESOL.NE.PTRVAL(NPAT,IDPTR)) THEN
            CALL SETPRA(NPAT,IDRESOL)
            CALL CKHALOER(1,'SETPRA-7',IER)
            IF (IER.NE.0) GO TO 900
         ENDIF
      ENDIF
C      
C       .. PAPER SIZE
      NPAT = 22
      IPGSIZ = NINT(2**IDSIZ)              
      CALL SETPRA(NPAT,IPGSIZ)
      CALL INQERR(IFUNC,IER)
      IF (IER.NE.0) THEN
C          .. ERROR:  PAPER SIZE NOT SUPPORTED FOR THIS PRINTER
         NUMER = NUMER+1
         NMSG(NUMER) = 629
      ENDIF
C
C       .. ORIENTATION      
      NPAT = 2
      CALL SETPRA(NPAT,ORIENT)
      CALL INQERR(IFUNC,IER)
      IF (IER.NE.0 .AND. NUMER.LT.4) THEN
C          .. ERROR:  ORIENTATION NOT SUPPORTED FOR THIS PRINTER
         NUMER = NUMER+1
         NMSG(NUMER) = 631
      ENDIF
C      
  110 CONTINUE
      IF (NUMER.GT.0) THEN
         NLIN = 4
         DO 120 I=1,NUMER
            CALL WRTMSG(NLIN,NMSG(I),14,0,0,' ',0)
            NLIN = NLIN-1        
  120    CONTINUE       
         CALL WRTMSG(NLIN,202,14,1,0,' ',0)
         CALL GETCHAR(0,INCHAR)
         IF (NEWDRVR) THEN
            GO TO 10
         ELSE   
            GO TO 100
         ENDIF   
      ENDIF
C      
      CLRMOD(IDPTR)     = IDBWCL
      PTRVAL(2,IDPTR)   = ORIENT
      PTRVAL(7,IDPTR)   = IDRESOL
      PTRVAL(22,IDPTR)  = IPGSIZ
C      
      PTRINQ(3) = 1
      PTRINQ(4) = IDRESOL
      CALL INQPRN(PTRINQ)
      IF (ORIENT.EQ.1) THEN
         MAXW = DPIMOD(3)
         MAXH = DPIMOD(2)
         HDPI = DPIMOD(5)
         VDPI = DPIMOD(4)
      ELSE
         MAXW = DPIMOD(2)
         MAXH = DPIMOD(3)
         HDPI = DPIMOD(4)
         VDPI = DPIMOD(5)
      ENDIF
      IF  (IWIDTH.GT.0)  PTRVAL(0,IDPTR) = WIDTH*FLOAT(HDPI)
      IF (IXOFSET.GT.0) PTRVAL(10,IDPTR) = XOFSET*FLOAT(HDPI)
      IF (IYOFSET.GT.0) PTRVAL(11,IDPTR) = YOFSET*FLOAT(VDPI)
C
C **DEBUG
        WRITE(999,*)'ORIENT=',ORIENT
        WRITE(999,*)'MAXW,MAXH,HDPI,VDPI=',MAXW,MAXH,HDPI,VDPI
        WRITE(999,*)'NORMAL END TO OPTFRMA'
      RETURN
C      
  900 CONTINUE
C **DEBUG
        WRITE(999,*)'ERROR END TO OPTFRMA'
      RTNCODE='1'
      RETURN
C
C       ** FORMAT STMTS
C
  500 FORMAT(I1)      
  501 FORMAT(I3)      
C      
      END      
***************************************************************************
      SUBROUTINE OPTFRMB(RTNCODE)
C
$INCLUDE: 'HALOENV.INC'
C
      INTEGER*2    HLPLVL
      PARAMETER    (MXFIELD=24)      
      CHARACTER*9  FIELD(MXFIELD)
      CHARACTER*1  YN,YESUP,YESLO,NULL
      CHARACTER*2  INCHAR
      CHARACTER*9 ACTPRHDR(2)
      CHARACTER*78 HELPFILE
      COMMON /PROPSV/ HLPLVL,FIELD,ACTPRHDR,HELPFILE,YESUP,YESLO,
     +                INCHAR,NULL
C
      PARAMETER (MXDPIMOD=5)
      INTEGER*2   PTRINQ(0:8),DPIMOD(5)     
      EQUIVALENCE (PTRINQ(4),DPIMOD(1))
      INTEGER*2 PTRSUP(0:63),NMSG(3),MAXW,MAXH,IWIDTH,IHGT,
     +          FORMFD,ORIENT,DPI,COPIES,CENTER,IXOFSET,IYOFSET,RESOL,
     +          DITHER
      REAL*4    WIDTH,HDPI,VDPI,XOFSET,YOFSET
      CHARACTER*2 UNITS(2)
      COMMON /OPTFRMSV/ PTRINQ,PTRSUP,NMSG,MAXW,MAXH,IWIDTH,IHGT,
     +          FORMFD,ORIENT,DPI,COPIES,CENTER,IXOFSET,IYOFSET,RESOL,
     +          DITHER,   WIDTH,HDPI,VDPI,XOFSET,YOFSET,   UNITS
C      
      CHARACTER*1  RTNCODE
      INTEGER*2    MXCOPY
C      
      DATA MXCOPY/8/
      DATA UNITS/'IN','CM'/
C **DEBUG
        WRITE(999,*)'BEG OPTFRMB-- ACTVPTR=',ACTVPTR
C      
      IDPTR = ACTVPTR+1
C      
      IWIDTH  = PTRVAL(0,IDPTR)
      IHGT    = PTRVAL(1,IDPTR)
      FORMFD = PTRVAL(5,IDPTR)
      DPI    = PTRVAL(7,IDPTR)
      COPIES = PTRVAL(8,IDPTR)
      CENTER = PTRVAL(9,IDPTR)
      IXOFSET = PTRVAL(10,IDPTR)
      IYOFSET = PTRVAL(11,IDPTR)
      RESOL  = PTRVAL(17,IDPTR)
      DITHER = PTRVAL(19,IDPTR)
      USCALE = UNTFLG(IDPTR) / 100.
      IF (USCALE .EQ. 1.00) THEN
         IDUNIT = 1
      ELSE
         IDUNIT = 2
      ENDIF
      HLPLVL = 1
C
C       .. INITIAL FORM FIELDS      
      DO 15 I=1,MXFIELD
         FIELD(I)=' '
   15 CONTINUE      
      DO 17 I=6,9
         FIELD(I) = '9'
   17 CONTINUE      
C
C---  SET FIELDS IN THE PRINTER CONFIGURATION FORM TO THE CURRENT VALUES
C
C **DEBUG
      WRITE(999,*)'FRMB--ORIENT,MAXW,MAXH=',ORIENT,MAXW,MAXH
      WRITE(999,*)'HDPI,VDPI=',HDPI,VDPI
      FIELD(1) = ACTPRHDR(IDPTR)
      XPAPRSZ = (FLOAT(MAXW) / HDPI) * USCALE
      WRITE(FIELD(2),520) XPAPRSZ
      YPAPRSZ = (FLOAT(MAXH) / VDPI) * USCALE
      WRITE(FIELD(4),520) YPAPRSZ
C      
      FIELD(3) = UNITS(IDUNIT)
      FIELD(5) = UNITS(IDUNIT)
C      
C       .. COPIES
      IF (PTRSUP(8).GE.1) THEN
         COPIES = MIN0(MAX0(1,COPIES),MXCOPY)
         WRITE(FIELD(6),530) COPIES
      ENDIF   
C      
C       .. FORM FEED      
      IF (PTRSUP(5) .EQ. 1) THEN
         FORMFD = MIN0(MAX0(1,FORMFD),2)
         WRITE(FIELD(7),530) FORMFD
      ENDIF
C      
C       .. DITHERING
      IF (PTRSUP(19) .GE. 1) THEN
         IF (DITHER.EQ.0) THEN
            DITHER = 2
         ELSE   
            DITHER = 1
         ENDIF   
         WRITE(FIELD(8),530) DITHER
      ENDIF
C       .. CENTER PLOT
      IF (PTRSUP(9) .EQ. 1) THEN
         CENTER = MIN0(MAX0(1,CENTER),2)
         WRITE(FIELD(9),530) CENTER
      ENDIF
C       .. PLOT WIDTH
      IF (PTRSUP(0) .EQ. 1) THEN
         IF (IWIDTH .GE. 0) THEN
            WIDTH = (FLOAT(IWIDTH) / FLOAT(HDPI)) * USCALE
            WRITE(FIELD(10),520) WIDTH
         ELSE
            FIELD(10) = '    '
         ENDIF
      ELSE
         WRITE(FIELD(10),520) XPAPRSZ
      ENDIF
C       .. LEFT OFFSET      
      IF (PTRSUP(10) .EQ. 1) THEN
         IF (IXOFSET .GE. 0) THEN
            XOFSET = (FLOAT(IXOFSET) / HDPI) * USCALE
            WRITE(FIELD(11),520) XOFSET
         ELSE
            FIELD(11) = ' 0.0'
         ENDIF
      ELSE
         FIELD(11) = '99.9'
      ENDIF
C       .. TOP OFFSET
      IF (PTRSUP(11) .EQ. 1) THEN
         IF (IYOFSET .GE. 0) THEN
            YOFSET = (FLOAT(IYOFSET) / VDPI) * USCALE
            WRITE(FIELD(12),520) YOFSET
         ELSE
            FIELD(12) = ' 0.0'
         ENDIF
      ELSE
         FIELD(12) = '99.9'
      ENDIF
C
   90 NUMER = 0
  100 INCHAR='  '
      ISZ   = XPAPRSZ
      CALL CLS
      CALL LOCATE(1,1,IER)
      CALL GETFRM('HALOPRNB',HELPFILE,FIELD,9,INCHAR)
      CALL LOCATE(1,1,IER)
C
C---  ASK USER TO ABANDON FORM IF STILL ERRORS ON IT. OTHERWISE, RESET FORM
C
      IF (INCHAR .EQ. '4F' .OR. INCHAR .EQ. 'ES') THEN
         YN = ' '
         CALL WRTMSG(3,200,14,1,0,' ',0)
         CALL LOCATE(22,55,IER)
         CALL OKREPLY(YN,RTNCODE)
C **REVISION JML 5-4-94 CHANGE YESUP/YESLO TO 'Y'; ERROR FOUND BY DENIS S.
         IF (YN .EQ. 'Y') THEN
            IDCLR = CLRMOD(IDPTR)+1
C **DEBUG         
         WRITE(999,*)'############PRNTOPHP--CALL SETACTPR--ESC FRMB'         
            CALL SETACTPR(PRINTR(IDCLR,IDPTR),PTRVAL(0,IDPTR),
     +                    PTRASP(IDPTR),IER)
            GO TO 900
         ELSE
            GO TO 100
         ENDIF
      ENDIF
      NUMER = 0
      NLIN  = 5
C
C-----  EXAMINE EACH OF THE PRINTER OPTIONS ENTERED BY THE USER
C
C-----      NBR OF COPIES, 1=1 COPY(DEF), N>1= NBR COPIES
C
      IF (PTRSUP(8) .GT. 0) THEN
         COPIES = ICHAR(FIELD(6)(1:1)) - 48
         COPIES = MIN0(MAX0(1,COPIES),MXCOPY)
      ELSE
         COPIES = -1
         IF (FIELD(6) .NE. '9') THEN
C             .. ERROR:  HALO DOES NOT SUPPORT THIS OPTION FOR THIS PRINTER
            NUMER = NUMER+1
            IF (NUMER.LT.4) THEN
               FIELD(6) = '1 '
               NMSG(NUMER) = 471
            ENDIF   
         ENDIF
      ENDIF
C
C-----      FORM FEED -- 1=YES(DEF), 2=NO
C
      IF (PTRSUP(5) .EQ. 1) THEN
         IF (FIELD(7) .EQ. '2 ') THEN
            FORMFD = 1
         ELSE
            FORMFD = 0
         ENDIF
      ELSE
         FORMFD = -1
         IF (FIELD(7) .NE. '9 ') THEN
C           ERROR MSG--HALO DOES NOT SUPPORT THIS OPTION FOR THIS PRINTER
            NUMER = NUMER+1
            IF (NUMER.LT.4) THEN
               FIELD(7) = '9 '
               NMSG(NUMER) = 472
            ENDIF   
         ENDIF
      ENDIF
C
C-----      DITHERING -- 1=YES, 2=NO(DEF)
C
      IF (PTRSUP(19) .GT. 0) THEN
         IF (FIELD(8) .EQ. '2 ') THEN
            DITHER = 0
         ELSE
            DITHER = 1
         ENDIF
      ELSE
         DITHER = -1
         IF (FIELD(8) .NE. '9 ') THEN
C           ERROR MSG--HALO DOES NOT SUPPORT THIS OPTION FOR THIS PRINTER
            NUMER = NUMER + 1
            IF (NUMER.LT.4) THEN
               FIELD(8) = '9 '
               NMSG(NUMER) = 449
            ENDIF   
         ENDIF
      ENDIF
C
C-----      CENTERING -- 1=YES(DEF), 2=NO
C
      IF (PTRSUP(9) .EQ. 1) THEN
         IF (FIELD(9) .EQ. '2 ') THEN
            CENTER = 1
         ELSE
            CENTER = 0
         ENDIF
      ELSE
          CENTER = -1
          IF (FIELD(9) .NE. '9 ') THEN
C           ERROR MSG--HALO DOES NOT SUPPORT THIS OPTION FOR THIS PRINTER
            NUMER = NUMER+1
            IF (NUMER.LT.4) THEN
               FIELD(9) = '9 '
               NMSG(NUMER) = 473
            ENDIF   
         ENDIF
      ENDIF
C
C-----  ENTER NUMBER OF INCHES (OR CM) TO INDENT FROM LEFT OF PAGE
C
      IF (PTRSUP(10) .EQ. 1) THEN
         READ (FIELD(11),520) XOFSET
         VAL = XOFSET / USCALE
         IXOFSET = HDPI * VAL
      ELSE
         IXOFSET = -1
         IF (FIELD(11) .NE. '99.9') THEN
C           ERROR MSG--HALO DOES NOT SUPPORT THIS OPTION FOR THIS PRINTER
            NUMER = NUMER + 1
            IF (NUMER.LT.4) THEN
               FIELD(11) = '99.9'
               NMSG(NUMER) = 474
            ENDIF   
         ENDIF
      ENDIF
C
C-----  ENTER NUMBER OF INCHES (OR CM) TO INDENT FROM TOP OF PAGE
C
      IF (PTRSUP(11) .EQ. 1) THEN
         READ (FIELD(12),520) YOFSET
         VAL = YOFSET / USCALE
         IYOFSET = VDPI * VAL
      ELSE
         IYOFSET = -1.
         IF (FIELD(12) .NE. '99.9') THEN
C           ERROR MSG--HALO DOES NOT SUPPORT THIS OPTION FOR THIS PRINTER
            NUMER = NUMER + 1
            IF (NUMER.LT.4) THEN
               FIELD(12) = '99.9'
               NMSG(NUMER) = 475
            ENDIF   
         ENDIF
      ENDIF
C
C-----  ENTER HORIZONTAL SIZE (WIDTH) OF THE PLOT IN INCHES (OR CM)
C
      IF (PTRSUP(0) .EQ. 1) THEN
         READ (FIELD(10),520) WIDTH
         IWIDTH = HDPI * WIDTH / USCALE
      ELSE
         IWIDTH = MAXW
C        ERROR MSG--HALO DOES NOT SUPPORT THIS OPTION FOR THIS PRINTER
         NUMER = NUMER + 1
         IF (NUMER.LT.4)THEN
            NMSG(NUMER) = 476
         ENDIF   
      ENDIF
C
C---  CALCULATE THE VERTICAL SIZE BASED ON THE HORIZONTAL SIZE AND ASPECT RATIO
C
      PASP = VDPI / HDPI
C **DEBUG -- CHECK CALC OF PRATB(1) IN SETACTPR (BGNHALO)      
      IHGT  = FLOAT(IWIDTH) * PASP
  400 CONTINUE
C
C---- VERIFY THAT WIDTH OF PLOT, OFFSETS, & PAGE SIZES ARE CONSISTENT
C---- WHEN CENTERING IS OFF.  NO OFFSETS ALLOWED WHEN CENTERING IS ON
C
      IF ((IXOFSET+IWIDTH) .GT. MAXW) THEN
         NUMER = NUMER + 1
         IF (NUMER.LT.4) THEN
            NMSG(NUMER) = 479
         ENDIF   
      ENDIF
      IF ((IYOFSET+IHGT) .GT. MAXH) THEN
         NUMER = NUMER + 1
         IF (NUMER.LT.4) THEN
            NMSG(NUMER) = 632
         ENDIF   
      ENDIF
      IF (CENTER .EQ. -1) THEN
         IF (IXOFSET .GT. 0 .OR. IYOFSET .GT. 0) THEN
            NUMER = NUMER + 1
            IF (NUMER.LT.4) THEN
               NMSG(NUMER) = 478
            ENDIF   
         ENDIF
      ENDIF            
C
C---- DISPLAY ANY ERROR MESSAGES. ASK USER TO REVISE SELECTIONS IF ERRORS
C
      IF (NUMER .GT. 0) THEN
         NLIN  = 4
         DO 150 I=1,MIN0(NUMER,3)
            CALL WRTMSG(NLIN,NMSG(I),14,0,0,' ',0)
            NLIN = NLIN-1        
  150    CONTINUE          
         IF (NUMER .GT. 3) THEN
            CALL WRTMSG(NLIN,481,14,1,1,' ',0)
         ELSE
            CALL WRTMSG(NLIN,202,14,1,0,' ',0)
            CALL GETCHAR(0,INCHAR)
         ENDIF
         GO TO 100
      ELSE
C
C----- TRANSFER PRINTER OPTIONS FROM TEMP TO PERMANENT VARIABLES. 
C
         IF (INCHAR .EQ. '2F') THEN
            PTRVAL(0,IDPTR)  = IWIDTH
            PTRVAL(1,IDPTR)  = IHGT
            PTRVAL(4,IDPTR)  = 1
            PTRVAL(5,IDPTR)  = FORMFD
            PTRVAL(8,IDPTR)  = COPIES
            PTRVAL(9,IDPTR)  = CENTER
            PTRVAL(10,IDPTR) = IXOFSET
            PTRVAL(11,IDPTR) = IYOFSET
            PTRVAL(17,IDPTR) = RESOL
            PTRVAL(19,IDPTR) = DITHER
            PTRASP(IDPTR)    = PASP
            IDCLR = CLRMOD(IDPTR)+1
C **DEBUG         
         WRITE(999,*)'############PRNTOPHP--CALL SETACTPR--SAV ATTRIB'         
            CALL SETACTPR(PRINTR(IDCLR,IDPTR),PTRVAL(0,IDPTR),
     +                    PTRASP(IDPTR) ,IER)
            IF (IER.NE.0) GO TO 900
            GO TO 200
         ELSE
            GO TO 100
         ENDIF      
      ENDIF   
  200 CONTINUE
      RTNCODE = '0'
C **DEBUG
        WRITE(999,*)'NORMAL END TO OPTFB'
      RETURN      
C         
  900 CONTINUE
C **DEBUG
        WRITE(999,*)'ERROR END TO OPTFB'
      RTNCODE = '1'
      RETURN      
C
C       ** FORMAT STMTS                 
C
  520 FORMAT(F4.1)
  530 FORMAT(I1)
C  151 FORMAT(F4.0)
C
      END
      
