$STORAGE:2
      PROGRAM TSTSCR
      CHARACTER*40 STRING
      CHARACTER INCHAR*2
      INTEGER*2 IDUM(16)
C      
      IDFONT  = 9
      STDASP  = 1.
      TXTHTND = .65
      ICLR    = 5
      XPOS    = .01
      YPOS    = .1
C
      OPEN(999,FILE='BUGTXT.PRT')
      CALL BGNHALO(0,0,IDUM)
C
      CALL SETVIE(0.,0.,0.999,0.999,-1,-1)
C      CALL SETVIE(.2,.4,.8,0.7,-1,-1)
      CALL SETWOR(0.,0.,1.,1.)
      CALL INQASP(RETASP)
      WRITE(999,*) 'TSTSCR--RETASP=',RETASP
      STRING = '^XXX^'
      CALL DFHSTWIN(IDFONT,ICLR,STDASP,TXTHTND,TXTHTW)
C      
      CALL INQSTS(STRING,HGHT,WID,OFF)
C      
      CALL INQVIE(XNDUL,YNDUL,XNDLR,YNDLR)
      CALL INQWOR(XWLL,YWLL,XWUR,YWUR)
      CALL MAPNTD(XNDUL,YNDUL,IXDUL,IYDUL)
      CALL MAPNTD(XNDLR,YNDLR,IXDLR,IYDLR)
      XRATIO = (IXDLR-IXDUL+1)/(XWUR-XWLL)
      IWID = WID * XRATIO
C      
      WRITE(999,*)'IXDLR,IXDUL,IYDLR,IYDUL=',IXDLR,IXDUL,IYDLR,IYDUL
      WRITE(999,*)'XWLL,YWLL,XWUR,YWUR=',XWLL,YWLL,XWUR,YWUR
      WRITE(999,*)'IWID,XRATIO',IWID,XRATIO
      WRITE(999,*)'HGHT,WIDSTR,OFFSET=',HGHT,WID,OFF
C      
C      
      CALL MOVTCA(XPOS,YPOS)
      CALL DELTCU( )
      CALL STEXT(STRING)
      READ(*,'(A)') INCHAR
C
  100 CONTINUE
      CALL FINHALO
      WRITE(*,*)'NORMAL STOP '
      STOP ' '
C 
  900 CONTINUE
      CALL FINHALO
      WRITE(*,*)'ERROR STOP '
      STOP 1
      END
***************************************************************************
      SUBROUTINE DFHSTWIN(IDFONT,ICLR,TXTASP,TXTHTND,TXTHTW)
C
C       ** OBJECTIVE:  DEFINE HALO ATTRIBUTES FOR STROKE TEXT THAT
C                      WILL BE USED IN A WINDOW
C
C       **INPUT:            
C            IDFONT.....ID NUMBER OF STROKE TEXT FONT
C            ICLR.......TEXT COLOR NUMBER
C            TXTASP.....TEXT ASPECT RATIO FOR CURRENT COORDINATE SYSTEM
C            TXTHTND....HEIGHT OF TEXT IN NORMALIZED DEVICE COORDINATE UNITS
C       **OUTPUT:
C            TXTHTW.....HEIGHT OF TEXT IN WORLD COORDINATE UNITS.  HEIGHT IS
C                       IN THE DIRECTION THE TEXT IS WRITTEN
C
      COMMON/DEVHNDL/IHNDLSCR,IHNDLVRI,SCRNASP,VRIASP,DEVASP
C      
      PARAMETER (MXFONT=9)
      CHARACTER*3 STFONT(MXFONT)
      CHARACTER*26 FONTFIL
      INTEGER*2 IXPIX,IYPIX
      DATA FONTFIL /'^P:\HALO\FONTS\AHD000.FNT^'/
      DATA STFONT /'104','102','106','107','201','203','206',
     +             '405','406'/
C
C       ** CONVERT CHARACTER HEIGHT FROM NORMALIZED DEVICE TO
C          WORLD COORDINATES        
C
      CALL INQVIE(XNDUL,YNDUL,XNDLR,YNDLR)
      CALL INQWOR(XWLL,YWLL,XWUR,YWUR)
C **DEBUG
      WRITE(999,*)'BEGIN DFHSTWIN'
      WRITE(999,*)'XNDUL,YNDUL,XNDLR,YNDLR=',XNDUL,YNDUL,XNDLR,YNDLR
      WRITE(999,*)'XWLL,YWLL,XWUR,YWUR=',XWLL,YWLL,XWUR,YWUR
C **END DEBUG      
C
C       .. CALCULATE HEIGHT IN WORLD COORDINATES
C
      CALL MAPNTW(XNDUL,YNDUL,XWUL,YWUL)
      CALL MAPNTW(XNDUL,YNDUL+TXTHTND,XWUL,YW)
      YHTW = YWUL-YW
C      
C       .. CALCULATE HEIGHT IN DEVICE COORDINATES (PIXELS)
      CALL MAPNTD(XNDUL,YNDUL,IXD,IYDUL)
      CALL MAPNTD(XNDUL,YNDUL+TXTHTND,IXD,IYD)
      IYHTD = (IYD-IYDUL)
C**DEBUG
      CALL INQASP(DASPINQ)
      CALL INQDRA(IXPIX,IYPIX)
C
      CALL MAPNTD(XNDUL,YNDUL,IXDUL,IYDUL)
      CALL MAPNTD(XNDLR,YNDLR,IXDLR,IYDLR)
      WRITE(999,*)'IXDLR,IXDUL,IYDLR,IYDUL=',IXDLR,IXDUL,IYDLR,IYDUL
      CURPXFAC = REAL(IXDLR-IXDUL+1)/REAL(IYDLR-IYDUL+1)
      VGAPXFAC = (((XNDLR-XNDUL)*639)+1)/(((YNDLR-YNDUL)*479)+1)
      PXFAC = CURPXFAC/VGAPXFAC

      WORFAC = (YWUR-YWLL)/(XWUR-XWLL)
      ASPFAC = PXFAC
      ADJASP = TXTASP*ASPFAC
C
        WRITE(999,*)'IXD,IYDUL,IYD,IYHTD=',IXD,IYDUL,IYD,IYHTD
        WRITE(999,*)'THTND,YWUL,YW=',TXTHTND,YWUL,YW
        WRITE(999,*)'DASPINQ,DEVASP=',DASPINQ,DEVASP
        WRITE(999,*)'CURPXFAC,VGAPXFAC=',CURPXFAC,VGAPXFAC
        WRITE(999,*)'ASPFAC,IXPIX,IYPIX=',ASPFAC,IXPIX,IYPIX
        WRITE(999,*)'TXTASP,ADJASP,YHTW=',TXTASP,ADJASP,YHTW
C      
C       ** DEFINE STROKE TEXT ATTRIBUTES
C
      FONTFIL(19:21) = STFONT(IDFONT)
      IPATH = 0
      CALL SETLNW(1)
      CALL SETLNS(1)
      CALL SETHAT(1)
      CALL SETFON(FONTFIL)
      CALL SETSTC(ICLR,ICLR)
      CALL SETDEG(1)
      CALL SETSTE(YHTW,ADJASP,IPATH)            
C
      WRITE(999,*)'END DFHSTWIN'
      RETURN
      END       
**************************************************************************
      SUBROUTINE CURASP(STRING,TXTHTND,IDFONT,STDASP,ACTASP)
C
C       ** OBJECTIVE:  GIVEN AN INPUT ASPECT RATIO WITH RESPECT TO A
C                      VIEWPORT OPENED TO THE ENTIRE SCREEN (0.-.999) AND
C                      A WORLD COORDINATE SYSTEM OF (0.-1.), DETERMINE THE
C                      EQUIVALENT ASPECT RATIO IN THE CURRENT COORDINATE
C                      SYSTEM.
C
       CHARACTER*(*) STRING
       COMMON/DEVHNDL/IHNDLSCR,IHNDLVRI,SCRNASP,VRIASP,DEVASP
C **DEBUG
        WRITE(999,*)'BEGIN CURASP'
C **END DEBUG     
C
C       ** MODIFY TEXT ASPECT RATIO FOR OUTPUT DEVICE
C
         ICLR = 1
         CALL DFHSTWIN(IDFONT,ICLR,STDASP,TXTHTND,TXTHTW)
C         CALL INQSTS(STRING,IHEIGHT,IWIDSTR,IOFFSET)
         CALL INQSTS(STRING,HEIGHT,WIDSTR,OFFSET)
         CALL INQWOR(XLOW,YLOW,XHIGH,YHIGH)
C         CALL INQVIE(XND1,YND1,XND2,YND2)
         CALL INQVIE(XNDUL,YNDUL,XNDLR,YNDLR)
         CALL MAPNTD(XNDUL,YNDUL,IXDUL,IYDUL)
         CALL MAPNTD(XNDLR,YNDLR,IXDLR,IYDLR)
         CALL MAPWTD(XLOW,YLOW,IXLOW,IYLOW)
         CALL MAPWTD(XLOW+WIDSTR,YLOW,IX,IYLOW)
         IWIDSTR = IX-IXLOW
         ACTASP = .95*ABS(IXDLR-IXDUL)/IWIDSTR
         WRITE(999,*)'XNDUL,YNDUL,XNDLR,YNDLR=',XNDUL,YNDUL,XNDLR,YNDLR
         WRITE(999,*)'IXDUL,IYDUL,IXDLR,IYDLR=',IXDUL,IYDUL,IXDLR,IYDLR
         WRITE(999,*)'XLOW,YLOW,IXLOW,IYLOW=',XLOW,YLOW,IXLOW,IYLOW
         WRITE(999,*)'STRING,HEIGHT,OFFSET,IX=',STRING,HEIGHT,OFFSET,IX
         WRITE(999,*)'ASP,IXDUL/LR,WSTR=',
     +                ACTASP,IXDUL,IXDLR,IWIDSTR
         WRITE(999,*)'END CURASP'
C     
      RETURN
      END
